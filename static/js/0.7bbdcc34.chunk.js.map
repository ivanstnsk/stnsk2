{"version":3,"sources":["screens/Projects/laptop/screens/Project/redux/selectors.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/components/ProjectCard/ProjectCard.tsx","screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/components/ProjectCard/styles.ts","screens/Projects/laptop/styles.ts","screens/Projects/laptop/Projects.tsx","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/index.ts","screens/Projects/laptop/screens/Project/redux/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/index.ts","screens/Projects/laptop/components/ProjectCard/index.ts","screens/Projects/laptop/screens/index.ts","screens/Projects/laptop/components/index.ts","screens/Projects/laptop/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx","screens/Projects/laptop/screens/Project/redux/useState.ts","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/styles.ts"],"names":["selectProjects","state","projects","selectProject","projectId","createSelector","find","id","SCROLL_RANGES","compact","Infinity","Project","offsetSize","lastProject","useContentSize","headerSize","onScrollY","useParams","data","useState","classes","useStyles","isVisible","in","timeout","unmountOnExit","transitionState","className","wrapper","size","title","subTitle","onScroll","iconType","lines","ContentComponent","from","to","rows","ProjectCard","onClick","handleClick","useCallback","button","imageContainer","type","color","width","height","text","labelsContainer","label","svg","viewBox","fill","xmlns","strokeDasharray","x","y","rx","stroke","strokeWidth","styles","colors","primary","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","boxSizing","borderColor","underline","backgroundColor","display","flexDirection","justifyContent","alignItems","useTStyles","strokeDashoffset","border","borderRadius","boxShadow","outline","cursor","textDecoration","margin","padding","transition","transform","flex","borderTopRightRadius","borderTopLeftRadius","fontSize","fontWeight","lineHeight","greyUltralight","opacity","animation","cardsWrapper","overflow","marginBottom","cardsContainer","flexWrap","Projects","memo","commercial","personal","undefined","setLastProject","history","useHistory","handleProjectClick","push","Routes","PROJECTS","map","key","Header","handleCloseClick","container","innerContainer","photo","midContainer","titleContainer","rightContainer","EmptyHeader","useSelector","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","paddingLeft","paddingRight","maxHeight","getWrapperStyles","marginLeft","marginRight","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props"],"mappings":"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","file":"static/js/0.7bbdcc34.chunk.js","sourcesContent":["import { createSelector, Selector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\ntype TCreatedSelector = Selector<TState, TProjectData | undefined>;\n\nexport const selectProject = (projectId: string): TCreatedSelector => createSelector<\n  TState,\n  TProjectsState,\n  TProjectData | undefined\n>(\n  [selectProjects],\n  (projects) => projects.find(({ id }) => id === projectId),\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  SectionWithIcon,\n  RowTable,\n  DateRange,\n  NoPage,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { useState } from './redux';\nimport { Header, EmptyHeader } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n  lastProject?: string;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n  lastProject,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const { data } = useState(projectId || lastProject);\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            {!data ? (\n              <>\n                <EmptyHeader />\n                <NoPage />\n              </>\n            ) : (<>\n              <Header\n                size={headerSize}\n                title={data.title}\n                subTitle={data.subTitle}\n              />\n              <ScrollContent onScroll={onScrollY}>\n                <ContentContainer>\n                  <SectionWithIcon\n                    iconType=\"work-result\"\n                    title=\"Work results\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"achievements\"\n                    title=\"Achievements\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"schedule\"\n                    title=\"Project schedule\"\n                    ContentComponent={(\n                      <DateRange\n                        from={['2019', 'October']}\n                        to={['2019', 'October']}\n                      />\n                    )}\n                  />\n                  <SectionWithIcon\n                    iconType=\"team\"\n                    title=\"Team\"\n                    ContentComponent={(\n                      <RowTable\n                        rows={[\n                          ['Dev', '6'],\n                          ['QA', '2'],\n                          ['PM', '1'],\n                          ['UI/UX', '1'],\n                        ]}\n                      />\n                    )}\n                  />\n                  <SectionWithIcon\n                    iconType=\"tech\"\n                    title=\"Technologies\"\n                    lines={[\n                      'react-native, react, redux, redux-saga, styled-components, react-navigation, react-router-dom, react-native-fbsdk, react-native-google-login, react-native-twitter-sigin, react-native-maps, google maps, google directions API, react-native-compass, geolib, react-native-video, mapbox modules, ios in app purchase',\n                    ]}\n                  />\n                </ContentContainer>\n              </ScrollContent>\n            </>)}\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import React, { useCallback } from 'react';\n\nimport { CategoryLabel, SvgProjectIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface ProjectCardProps {\n  id: string;\n  onClick: (projectId: string) => void;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  id,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(id);\n    }\n  }, [onClick, id]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={handleClick}\n    >\n      <div className={classes.imageContainer}>\n        <SvgProjectIcon\n          type=\"virtual-tours\"\n          color=\"rgba(255,255,255,0.5)\"\n          width={80}\n          height={80}\n        />\n      </div>\n      <div className={classes.text}>\n        Virtual Tours App\n      </div>\n      <div className={classes.labelsContainer}>\n        <CategoryLabel\n          type=\"mobile\"\n          label=\"Mobile\"\n          size=\"small\"\n        />\n      </div>\n      <svg\n        className={classes.svg}\n        width={266}\n        height={268}\n        viewBox={`0 0 ${266} ${268}`}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <rect x=\"2\" y=\"2\" width={266 - 4} height={268 - 4} rx=\"10\" stroke=\"#81AF65\" strokeWidth=\"2\" />\n      </svg>\n    </button>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      bgContent, greyUltralight,\n    },\n  },\n}) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 28 },\n    },\n    button: {\n      position: 'relative',\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      width: 266,\n      height: 268,\n      border: 'none',\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.25)',\n      outline: 'none',\n      cursor: 'pointer',\n      textDecoration: 'none',\n      margin: 15,\n      padding: 0,\n      transition: 'transform 0.4s ease',\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        transition: 'transform 0.4s ease',\n      },\n      '&:active svg path': {\n        stroke: 'blue',\n      },\n    },\n    imageContainer: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(255,255,255,0.05)',\n      borderTopRightRadius: 10,\n      borderTopLeftRadius: 10,\n\n    },\n    text: {\n      width: '100%',\n      height: 70,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n    },\n    labelsContainer: {\n      position: 'absolute',\n      right: 6,\n      top: 6,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-start',\n    },\n    svg: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      opacity: 0,\n\n      '&:hover': {\n        strokeDasharray: 7,\n        animation: '$dash 1s linear infinite',\n        opacity: 1,\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    cardsWrapper: {\n      width: '100%',\n      overflow: 'visible',\n      marginBottom: 70,\n    },\n    cardsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap',\n      margin: -15,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { memo, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  ContentHeader,\n  ScrollContent,\n  ContentContainer,\n  SectionTitle,\n} from 'components';\nimport { useContentSize } from 'hooks';\nimport { Routes } from 'types';\nimport { TProjectData } from 'types/data';\n\nimport { Project } from './screens';\nimport { ProjectCard } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectsProps {\n  commercial: TProjectData[];\n  personal: TProjectData[];\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nconst ProjectsComp: React.FC<ProjectsProps> = ({\n  commercial,\n  personal,\n}) => {\n  const [lastProject, setLastProject] = useState<string | undefined>(undefined);\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleProjectClick = useCallback((projectId: string) => {\n    setLastProject(projectId);\n    history.push(`${Routes.PROJECTS}/${projectId}`);\n  }, [setLastProject, history]);\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Projects\"\n        subTitle=\"My commercial and not really projects\"\n        size={headerSize}\n      />\n      <ScrollContent onScroll={onScrollY}>\n        <ContentContainer>\n          <SectionTitle>Personal projects</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              {personal.map((data) => (\n                <ProjectCard\n                  key={data.id}\n                  id={data.id}\n                  onClick={handleProjectClick}\n                />\n              ))}\n              <ProjectCard\n                id=\"1254234\"\n                onClick={handleProjectClick}\n              />\n            </div>\n          </div>\n          <SectionTitle>Commercial projects under NDA</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              {commercial.map((data) => (\n                <ProjectCard\n                  key={data.id}\n                  id={data.id}\n                  onClick={handleProjectClick}\n                />\n              ))}\n            </div>\n          </div>\n        </ContentContainer>\n      </ScrollContent>\n      <Project\n        offsetSize={headerSize}\n        lastProject={lastProject}\n      />\n    </>\n  );\n};\n\nexport const Projects = memo(ProjectsComp);\n","export { Header } from './Header';\n","export { EmptyHeader } from './EmptyHeader';\n","export { useState } from './useState';\n","export { Header } from './Header';\nexport { EmptyHeader } from './EmptyHeader';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","export { Projects as default } from './Projects';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CloseButton } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\nexport const EmptyHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport { selectProject } from './selectors';\n\n\ntype TData = {\n  data: TProjectData | undefined;\n}\n\nexport const useState = (projectId: string): TData => {\n  const data = useSelector(selectProject(projectId));\n\n  return {\n    data,\n  };\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { offsetHorizontal },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n    },\n    rightContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      paddingTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}