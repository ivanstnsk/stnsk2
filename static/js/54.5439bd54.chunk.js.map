{"version":3,"sources":["screens/Contacts/laptop/components/SocialButton/SocialButton.tsx","screens/Contacts/laptop/components/SocialButton/styles.ts"],"names":["SocialButton","type","onClick","useMouseHover","containerRef","hovered","classes","useStyles","iconColor","ref","className","container","icon","width","height","color","button","text","styles","display","flexDirection","justifyContent","alignItems","transition","marginTop","transform","props","useTStyles"],"mappings":"2MAcaA,EAA4C,SAAC,GAGnD,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,QACI,EAC4BC,cAD5B,mBACGC,EADH,KACiBC,EADjB,KAEEC,EAAUC,oBAAU,CAAEF,YACtBG,EAAYH,EACd,UACA,wBAEJ,OACE,yBACEI,IAAKL,EACLM,UAAWJ,EAAQK,UACnBT,QAASA,GAET,kBAAC,IAAD,CACEQ,UAAWJ,EAAQM,KACnBX,KAAMA,EACNY,MAAO,GACPC,OAAQ,GACRC,MAAOP,IAET,kBAAC,IAAD,CACEE,UAAWJ,EAAQU,OACnBC,KAAK,OACLJ,MAAO,IACPX,QAASA,O,iCCxCjB,4DAOMgB,EAAoB,WACxB,MAAO,CACLP,UAAW,CACTQ,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,SACZC,WAAY,iBAEdP,OAAQ,CACNQ,UAAW,IAEbZ,KAAM,kBAA+B,CACnCa,UADI,EAAGpB,QAEH,0BACA,sBACJkB,WAAY,oBAKLhB,EAAY,SAACmB,GAAD,OAAwCC,YAAWT,EAAQQ","file":"static/js/54.5439bd54.chunk.js","sourcesContent":["import React from 'react';\n\nimport { SvgIcon, Button } from 'components';\nimport { useMouseHover } from 'hooks';\n\nimport { TContactButtonTypes } from './types';\nimport { useStyles } from './styles';\n\n\ninterface SocialButtonProps {\n  type: TContactButtonTypes;\n  onClick?: () => void;\n}\n\nexport const SocialButton: React.FC<SocialButtonProps> = ({\n  type,\n  onClick,\n}) => {\n  const [containerRef, hovered] = useMouseHover<HTMLDivElement>();\n  const classes = useStyles({ hovered });\n  const iconColor = hovered\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.4)';\n\n  return (\n    <div\n      ref={containerRef}\n      className={classes.container}\n      onClick={onClick}\n    >\n      <SvgIcon\n        className={classes.icon}\n        type={type}\n        width={60}\n        height={60}\n        color={iconColor}\n      />\n      <Button\n        className={classes.button}\n        text=\"Open\"\n        width={110}\n        onClick={onClick}\n      />\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStyleProps = {\n  hovered: boolean;\n};\n\nconst styles: AppStyles = () => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      transition: 'all 0.4s ease',\n    },\n    button: {\n      marginTop: 30,\n    },\n    icon: ({ hovered }: TStyleProps) => ({\n      transform: hovered\n        ? 'scaleX(1.1) scaleY(1.1)'\n        : 'scaleX(1) scaleY(1)',\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}