{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/EmptyHeader/styles.ts","screens/Projects/laptop/screens/Project/components/CardText/styles.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/index.ts","screens/Projects/laptop/screens/Project/components/CardText/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx","screens/Projects/laptop/screens/Project/components/CardText/CardText.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts"],"names":["styles","offsetHorizontal","sizes","content","wrapper","display","boxSizing","paddingLeft","paddingRight","rightContainer","flex","flexDirection","justifyContent","paddingTop","useStyles","useTStyles","colors","typography","title","text","underline","primary","container","maxWidth","alignItems","width","border","padding","marginLeft","marginRight","marginBottom","fontSize","fontWeight","lineHeight","color","marginTop","fontFamily","Header","size","subTitle","tags","iconType","history","useHistory","classes","iconSize","handleCloseClick","useCallback","push","Routes","PROJECTS","className","innerContainer","type","height","photo","midContainer","titleContainer","map","tag","key","label","onClick","EmptyHeader","CardText","lines","ContentComponent","length","line","greyUltralight","contentMaxWidth","sidebarWidth","menu","maxHeight","getWrapperStyles","transition","opacity","getSubtitleStyles","minHeight","minWidth","getPhotoStyles","iconsContainer","getRightContainerStyles","props"],"mappings":"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","file":"static/js/8.6127a5bf.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { offsetHorizontal },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n    },\n    rightContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      paddingTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, text },\n    primary: { underline },\n  },\n}) => {\n  return {\n    container: {\n      maxWidth: 350,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      width: '100%',\n      boxSizing: 'border-box',\n      border: `1px solid ${underline}`,\n      padding: 40,\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 40,\n    },\n    title: {\n      fontSize: 30,\n      fontWeight: 300,\n      lineHeight: '37px',\n      color: title,\n      marginTop: 30,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      marginTop: 40,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","export { Header } from './Header';\n","export { EmptyHeader } from './EmptyHeader';\n","export { CardText } from './CardText';\n","export { Header } from './Header';\nexport { EmptyHeader } from './EmptyHeader';\nexport { CardText } from './CardText';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton, SvgProjectIcon } from 'components';\nimport { TSvgProjectIconType } from 'types/icons';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n  tags: string[];\n  iconType: TSvgProjectIconType;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n  tags,\n  iconType,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n  const iconSize = size === 'normal' ? 160 : 60;\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <SvgProjectIcon\n            type={iconType}\n            color=\"rgba(255,255,255,0.5)\"\n            width={iconSize}\n            height={iconSize}\n            className={classes.photo}\n          />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              {tags.map((tag) => (\n                <CategoryLabel\n                  key={tag}\n                  type={tag}\n                  label={tag}\n                />\n              ))}\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CloseButton } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\nexport const EmptyHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\nimport { TSvgIconType } from 'types/icons';\n\nimport { useStyles } from './styles';\n\n\ninterface CardTextProps {\n  iconType: TSvgIconType;\n  title: string;\n  lines?: string[];\n  ContentComponent?: JSX.Element;\n}\n\nexport const CardText: React.FC<CardTextProps> = ({\n  iconType,\n  title,\n  lines,\n  ContentComponent,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type={iconType}\n        width={100}\n        height={100}\n        color=\"rgba(255,255,255,0.15)\"\n      />\n      <div className={classes.title}>{title}</div>\n      <div className={classes.text}>\n        {lines && lines.length > 0 ? lines.map((line) => (\n          <div key={line}>{line}</div>\n        )) : null}\n      </div>\n      {ContentComponent}\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 300,\n      lineHeight: '42px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}