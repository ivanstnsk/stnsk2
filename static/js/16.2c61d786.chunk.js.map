{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts"],"names":["CloseButton","memo","onClick","classes","useStyles","className","button","type","width","height","color","styles","border","outline","background","cursor","padding","useTStyles"],"mappings":"yGAAA,4E,gCCAA,4E,gCCAA,sFA+BaA,EAAcC,gBApByB,SAAC,GAE9C,IADLC,EACI,EADJA,QAEMC,EAAUC,sBAEhB,OACE,4BACEC,UAAWF,EAAQG,OACnBJ,QAASA,GAET,kBAAC,IAAD,CACEK,KAAK,QACLC,MAAO,GACPC,OAAQ,GACRC,MAAM,+B,gCCxBd,4DAGMC,EAAoB,WACxB,MAAO,CACLL,OAAQ,CACNE,MAAO,GACPC,OAAQ,GACRG,OAAQ,OACRC,QAAS,OACTC,WAAY,cACZC,OAAQ,UACRC,QAAS,KAKFZ,EAAY,kBAAsBa,YAAWN","file":"static/js/16.2c61d786.chunk.js","sourcesContent":["export { CloseButton } from './CloseButton';\n","export { CloseButton } from './CloseButton';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}