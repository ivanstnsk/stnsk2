{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/screens/Project/styles.ts"],"names":["CloseButton","memo","onClick","classes","useStyles","className","button","type","width","height","color","styles","border","outline","background","cursor","padding","useTStyles","Header","size","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","wrapper","container","innerContainer","photo","titleContainer","title","subTitle","rightContainer","greyUltralight","colors","primary","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","display","boxSizing","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","flexDirection","justifyContent","alignItems","marginLeft","fontSize","fontWeight","lineHeight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props","SCROLL_RANGES","compact","Infinity","Project","offsetSize","useContentSize","headerSize","onScrollY","projectId","useParams","isVisible","in","timeout","unmountOnExit","state","transitionState","onScroll","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","borderColor","underline","backgroundColor"],"mappings":"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","file":"static/js/39.b54e61d5.chunk.js","sourcesContent":["export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={40}\n        height={40}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { CloseButton } from './components';\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.titleContainer}>\n            <div className={classes.title}>\n              Virtual Tours\n          </div>\n            <div className={classes.subTitle}>\n              The marketplace for creating, celling and<br />\n            purchasing virtual tours in the city (virtual guidance).<br />\n            Includes mobile app and the website.\n          </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  SectionTitle,\n  TransitionInnerScreenWrapper,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { Header } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            <Header size={headerSize} />\n            <ScrollContent onScroll={onScrollY}>\n              <ContentContainer>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n                <SectionTitle>Content here</SectionTitle>\n              </ContentContainer>\n            </ScrollContent>\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}