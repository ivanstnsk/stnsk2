{"version":3,"sources":["screens/Projects/laptop/screens/Project/redux/selectors.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/index.ts","screens/Projects/laptop/screens/Project/redux/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx","screens/Projects/laptop/screens/Project/redux/useState.ts","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/styles.ts"],"names":["selectProjects","state","projects","selectProject","projectId","createSelector","find","id","SCROLL_RANGES","compact","Infinity","Project","offsetSize","lastProject","useContentSize","headerSize","onScrollY","useParams","data","useState","classes","useStyles","isVisible","in","timeout","unmountOnExit","transitionState","className","wrapper","title","subTitle","tags","team","dates","size","onScroll","iconType","lines","ContentComponent","from","to","rows","styles","colors","primary","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","boxSizing","borderColor","underline","backgroundColor","display","flexDirection","justifyContent","alignItems","useTStyles","Header","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","container","innerContainer","photo","midContainer","titleContainer","map","tag","key","type","label","rightContainer","onClick","EmptyHeader","useSelector","greyUltralight","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","width","paddingLeft","paddingRight","height","maxHeight","getWrapperStyles","transition","flex","marginLeft","fontSize","fontWeight","lineHeight","color","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props"],"mappings":"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","file":"static/js/38.59564dc7.chunk.js","sourcesContent":["import { createSelector, Selector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\ntype TCreatedSelector = Selector<TState, TProjectData | undefined>;\n\nexport const selectProject = (projectId: string): TCreatedSelector => createSelector<\n  TState,\n  TProjectsState,\n  TProjectData | undefined\n>(\n  [selectProjects],\n  (projects) => projects.find(({ id }) => id === projectId),\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  SectionWithIcon,\n  RowTable,\n  DateRange,\n  NoPage,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { useState } from './redux';\nimport { Header, EmptyHeader } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n  lastProject?: string;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n  lastProject,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const { data } = useState(projectId || lastProject);\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  if (!data) {\n    return (\n      <Transition\n        in={isVisible}\n        timeout={300}\n        unmountOnExit\n      >\n        {(state) => (\n          <TransitionInnerScreenWrapper\n            transitionState={state}\n            offsetSize={offsetSize}\n          >\n            <div className={classes.wrapper}>\n              <EmptyHeader />\n              <NoPage />\n            </div>\n          </TransitionInnerScreenWrapper>\n        )}\n      </Transition>\n    );\n  }\n\n  const {\n    title,\n    subTitle,\n    tags,\n    team,\n    dates,\n  } = data;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            {!data ? (\n              <>\n                <EmptyHeader />\n                <NoPage />\n              </>\n            ) : (<>\n              <Header\n                size={headerSize}\n                title={title}\n                subTitle={subTitle}\n                tags={tags}\n              />\n              <ScrollContent onScroll={onScrollY}>\n                <ContentContainer>\n                  <SectionWithIcon\n                    iconType=\"work-result\"\n                    title=\"Work results\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"achievements\"\n                    title=\"Achievements\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"schedule\"\n                    title=\"Project schedule\"\n                    ContentComponent={(\n                      <DateRange\n                        from={dates.from}\n                        to={dates.to}\n                      />\n                    )}\n                  />\n                  <SectionWithIcon\n                    iconType=\"team\"\n                    title=\"Team\"\n                    ContentComponent={(\n                      <RowTable rows={team} />\n                    )}\n                  />\n                  <SectionWithIcon\n                    iconType=\"tech\"\n                    title=\"Technologies\"\n                    lines={[\n                      'react-native, react, redux, redux-saga, styled-components, react-navigation, react-router-dom, react-native-fbsdk, react-native-google-login, react-native-twitter-sigin, react-native-maps, google maps, google directions API, react-native-compass, geolib, react-native-video, mapbox modules, ios in app purchase',\n                    ]}\n                  />\n                </ContentContainer>\n              </ScrollContent>\n            </>)}\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","export { Header } from './Header';\n","export { EmptyHeader } from './EmptyHeader';\n","export { useState } from './useState';\n","export { Header } from './Header';\nexport { EmptyHeader } from './EmptyHeader';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n  tags: string[];\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n  tags,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              {tags.map((tag) => (\n                <CategoryLabel\n                  key={tag}\n                  type={tag}\n                  label={tag}\n                />\n              ))}\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CloseButton } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\nexport const EmptyHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport { selectProject } from './selectors';\n\n\ntype TData = {\n  data: TProjectData | undefined;\n}\n\nexport const useState = (projectId: string): TData => {\n  const data = useSelector(selectProject(projectId));\n\n  return {\n    data,\n  };\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { offsetHorizontal },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n    },\n    rightContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      paddingTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}