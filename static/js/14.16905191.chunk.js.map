{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts"],"names":["Header","size","title","subTitle","history","useHistory","classes","useStyles","handleCloseClick","useCallback","push","Routes","PROJECTS","className","wrapper","container","innerContainer","photo","midContainer","titleContainer","type","label","rightContainer","onClick","styles","greyUltralight","colors","primary","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","width","display","boxSizing","paddingLeft","paddingRight","height","maxHeight","getWrapperStyles","transition","flex","flexDirection","justifyContent","alignItems","marginLeft","fontSize","fontWeight","lineHeight","color","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props","useTStyles"],"mappings":"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","file":"static/js/14.16905191.chunk.js","sourcesContent":["export { Header } from './Header';\n","export { Header } from './Header';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}