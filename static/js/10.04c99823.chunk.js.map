{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts"],"names":["CloseButton","memo","onClick","classes","useStyles","className","button","type","width","height","color","styles","border","outline","background","cursor","padding","useTStyles","Header","size","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","wrapper","container","innerContainer","photo","midContainer","titleContainer","title","label","subTitle","rightContainer","greyUltralight","colors","primary","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","display","boxSizing","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","flexDirection","justifyContent","alignItems","marginLeft","fontSize","fontWeight","lineHeight","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props"],"mappings":"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","file":"static/js/10.04c99823.chunk.js","sourcesContent":["export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { CloseButton } from './components';\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>Virtual Tours</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>\n              The marketplace for creating, celling and<br />\n            purchasing virtual tours in the city (virtual guidance).<br />\n            Includes mobile app and the website.\n          </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}