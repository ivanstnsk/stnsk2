{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/EmptyHeader/styles.ts","screens/Projects/laptop/screens/Project/components/CardText/styles.ts","screens/Projects/laptop/screens/Project/redux/selectors.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/components/ProjectCard/ProjectCard.tsx","screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/components/ProjectCard/styles.ts","screens/Projects/laptop/styles.ts","screens/Projects/laptop/Projects.tsx","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/index.ts","screens/Projects/laptop/screens/Project/components/CardText/index.ts","screens/Projects/laptop/screens/Project/redux/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/index.ts","screens/Projects/laptop/components/ProjectCard/index.ts","screens/Projects/laptop/screens/index.ts","screens/Projects/laptop/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx","screens/Projects/laptop/screens/Project/components/CardText/CardText.tsx","screens/Projects/laptop/screens/Project/redux/useState.ts","screens/Projects/laptop/screens/Project/components/Header/styles.ts"],"names":["styles","offsetHorizontal","sizes","content","wrapper","display","boxSizing","paddingLeft","paddingRight","rightContainer","flex","flexDirection","justifyContent","paddingTop","useStyles","useTStyles","colors","typography","title","text","underline","primary","container","maxWidth","alignItems","width","border","padding","marginLeft","marginRight","marginBottom","transition","transform","boxShadow","fontSize","fontWeight","lineHeight","color","marginTop","fontFamily","selectProjects","state","projects","selectProject","projectId","createSelector","find","id","SCROLL_RANGES","compact","Infinity","Project","offsetSize","lastProject","useContentSize","headerSize","onScrollY","useParams","data","useState","classes","isVisible","in","timeout","unmountOnExit","transitionState","className","subTitle","iconType","tags","team","dates","technologies","workResults","achievements","size","onScroll","innerClassName","ContentComponent","from","to","rows","lines","ProjectCard","onClick","handleClick","useCallback","button","imageContainer","type","height","labelsContainer","map","tag","key","label","svg","viewBox","fill","xmlns","strokeDasharray","x","y","rx","stroke","strokeWidth","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","borderColor","backgroundColor","flexWrap","strokeDashoffset","borderRadius","outline","cursor","textDecoration","margin","borderTopRightRadius","borderTopLeftRadius","greyUltralight","opacity","animation","cardsWrapper","overflow","cardsContainer","Projects","memo","commercial","personal","undefined","setLastProject","history","useHistory","handleProjectClick","push","Routes","PROJECTS","Header","iconSize","handleCloseClick","innerContainer","photo","midContainer","titleContainer","EmptyHeader","CardText","length","line","useSelector","contentMaxWidth","sidebarWidth","menu","maxHeight","getWrapperStyles","getSubtitleStyles","minHeight","minWidth","getPhotoStyles","iconsContainer","getRightContainerStyles","props"],"mappings":"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","file":"static/js/37.0a32d723.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { offsetHorizontal },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n    },\n    rightContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      paddingTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, text },\n    primary: { underline },\n  },\n}) => {\n  return {\n    container: {\n      maxWidth: 350,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      width: '100%',\n      boxSizing: 'border-box',\n      border: `1px solid ${underline}`,\n      padding: 40,\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 40,\n\n      transition: 'all 0.4s ease',\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        boxShadow: '0px 3px 14px 3px rgba(0,0,0,0.31)',\n        transition: 'all 0.4s ease',\n      },\n    },\n    title: {\n      fontSize: 30,\n      fontWeight: 300,\n      lineHeight: '37px',\n      color: title,\n      marginTop: 30,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      marginTop: 40,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    content: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { createSelector, Selector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\ntype TCreatedSelector = Selector<TState, TProjectData | undefined>;\n\nexport const selectProject = (projectId: string): TCreatedSelector => createSelector<\n  TState,\n  TProjectsState,\n  TProjectData | undefined\n>(\n  [selectProjects],\n  (projects) => projects.find(({ id }) => id === projectId),\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  RowTable,\n  DateRange,\n  NoPage,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { useState } from './redux';\nimport { Header, EmptyHeader, CardText } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n  lastProject?: string;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n  lastProject,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const { data } = useState(projectId || lastProject);\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  if (!data) {\n    return (\n      <Transition\n        in={isVisible}\n        timeout={300}\n        unmountOnExit\n      >\n        {(state) => (\n          <TransitionInnerScreenWrapper\n            transitionState={state}\n            offsetSize={offsetSize}\n          >\n            <div className={classes.wrapper}>\n              <EmptyHeader />\n              <NoPage />\n            </div>\n          </TransitionInnerScreenWrapper>\n        )}\n      </Transition>\n    );\n  }\n\n  const {\n    title,\n    subTitle,\n    iconType,\n    tags,\n    team,\n    dates,\n    technologies,\n    workResults,\n    achievements,\n  } = data;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            {!data ? (\n              <>\n                <EmptyHeader />\n                <NoPage />\n              </>\n            ) : (<>\n              <Header\n                size={headerSize}\n                title={title}\n                subTitle={subTitle}\n                tags={tags}\n                iconType={iconType}\n              />\n              <ScrollContent onScroll={onScrollY}>\n                <ContentContainer innerClassName={classes.container}>\n                  <CardText\n                    iconType=\"schedule\"\n                    title=\"Project schedule\"\n                    ContentComponent={(\n                      <DateRange\n                        from={dates.from}\n                        to={dates.to}\n                      />\n                    )}\n                  />\n                  <CardText\n                    iconType=\"team\"\n                    title=\"Team\"\n                    ContentComponent={(\n                      <RowTable rows={team} />\n                    )}\n                  />\n                  <CardText\n                    iconType=\"tech\"\n                    title=\"Technologies\"\n                    lines={technologies}\n                  />\n                  <CardText\n                    iconType=\"work-result\"\n                    title=\"Work results\"\n                    lines={workResults}\n                  />\n                  <CardText\n                    iconType=\"achievements\"\n                    title=\"Achievements\"\n                    lines={achievements}\n                  />\n                </ContentContainer>\n              </ScrollContent>\n            </>)}\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import React, { useCallback } from 'react';\n\nimport { TProjectData } from 'types/data';\nimport { CategoryLabel, SvgProjectIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface ProjectCardProps {\n  data: TProjectData;\n  onClick: (projectId: string) => void;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  data,\n  onClick,\n}) => {\n  const classes = useStyles();\n  const { id, title, tags, iconType } = data;\n\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(id);\n    }\n  }, [onClick, id]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={handleClick}\n    >\n      <div className={classes.imageContainer}>\n        <SvgProjectIcon\n          type={iconType}\n          color=\"rgba(255,255,255,0.5)\"\n          width={80}\n          height={80}\n        />\n      </div>\n      <div className={classes.text}>{title}</div>\n      <div className={classes.labelsContainer}>\n        {tags.map((tag) => (\n          <CategoryLabel\n            key={`${id}${tag}`}\n            type={tag}\n            label={tag}\n            size=\"small\"\n          />\n        ))}\n      </div>\n      <svg\n        className={classes.svg}\n        width={266}\n        height={268}\n        viewBox={`0 0 ${266} ${268}`}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <rect x=\"2\" y=\"2\" width={266 - 4} height={268 - 4} rx=\"10\" stroke=\"#81AF65\" strokeWidth=\"2\" />\n      </svg>\n    </button>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n    container: {\n      flexDirection: 'row !important',\n      flexWrap: 'wrap',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      bgContent, greyUltralight,\n    },\n  },\n}) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 28 },\n    },\n    button: {\n      position: 'relative',\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      width: 266,\n      height: 268,\n      border: 'none',\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.25)',\n      outline: 'none',\n      cursor: 'pointer',\n      textDecoration: 'none',\n      margin: 15,\n      padding: 0,\n      transition: 'transform 0.4s ease',\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        transition: 'transform 0.4s ease',\n      },\n      '&:active svg path': {\n        stroke: 'blue',\n      },\n    },\n    imageContainer: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(255,255,255,0.05)',\n      borderTopRightRadius: 10,\n      borderTopLeftRadius: 10,\n\n    },\n    text: {\n      width: '100%',\n      height: 70,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    labelsContainer: {\n      position: 'absolute',\n      right: 6,\n      top: 6,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-start',\n    },\n    svg: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      opacity: 0,\n\n      '&:hover': {\n        strokeDasharray: 7,\n        animation: '$dash 1s linear infinite',\n        opacity: 1,\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    cardsWrapper: {\n      width: '100%',\n      overflow: 'visible',\n      marginBottom: 70,\n    },\n    cardsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap',\n      margin: -15,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { memo, useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  ContentHeader,\n  ScrollContent,\n  ContentContainer,\n  SectionTitle,\n} from 'components';\nimport { useContentSize } from 'hooks';\nimport { Routes } from 'types';\nimport { TProjectData } from 'types/data';\n\nimport { Project } from './screens';\nimport { ProjectCard } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectsProps {\n  commercial: TProjectData[];\n  personal: TProjectData[];\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nconst ProjectsComp: React.FC<ProjectsProps> = ({\n  commercial,\n  personal,\n}) => {\n  const [lastProject, setLastProject] = useState<string | undefined>(undefined);\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleProjectClick = useCallback((projectId: string) => {\n    setLastProject(projectId);\n    history.push(`${Routes.PROJECTS}/${projectId}`);\n  }, [setLastProject, history]);\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Projects\"\n        subTitle=\"My commercial and not really projects\"\n        size={headerSize}\n      />\n      <ScrollContent onScroll={onScrollY}>\n        <ContentContainer>\n          <SectionTitle>Personal projects</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              {personal.map((data) => (\n                <ProjectCard\n                  key={data.id}\n                  data={data}\n                  onClick={handleProjectClick}\n                />\n              ))}\n            </div>\n          </div>\n          <SectionTitle>Commercial projects under NDA</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              {commercial.map((data) => (\n                <ProjectCard\n                  key={data.id}\n                  data={data}\n                  onClick={handleProjectClick}\n                />\n              ))}\n            </div>\n          </div>\n        </ContentContainer>\n      </ScrollContent>\n      <Project\n        offsetSize={headerSize}\n        lastProject={lastProject}\n      />\n    </>\n  );\n};\n\nexport const Projects = memo(ProjectsComp);\n","export { Header } from './Header';\n","export { EmptyHeader } from './EmptyHeader';\n","export { CardText } from './CardText';\n","export { useState } from './useState';\n","export { Header } from './Header';\nexport { EmptyHeader } from './EmptyHeader';\nexport { CardText } from './CardText';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton, SvgProjectIcon } from 'components';\nimport { TSvgProjectIconType } from 'types/icons';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n  tags: string[];\n  iconType: TSvgProjectIconType;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n  tags,\n  iconType,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n  const iconSize = size === 'normal' ? 160 : 60;\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <SvgProjectIcon\n            type={iconType}\n            color=\"rgba(255,255,255,0.5)\"\n            width={iconSize}\n            height={iconSize}\n            className={classes.photo}\n          />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              {tags.map((tag) => (\n                <CategoryLabel\n                  key={tag}\n                  type={tag}\n                  label={tag}\n                />\n              ))}\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CloseButton } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\nexport const EmptyHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\nimport { TSvgIconType } from 'types/icons';\n\nimport { useStyles } from './styles';\n\n\ninterface CardTextProps {\n  iconType: TSvgIconType;\n  title: string;\n  lines?: string[];\n  ContentComponent?: JSX.Element;\n}\n\nexport const CardText: React.FC<CardTextProps> = ({\n  iconType,\n  title,\n  lines,\n  ContentComponent,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type={iconType}\n        width={100}\n        height={100}\n        color=\"rgba(255,255,255,0.15)\"\n      />\n      <div className={classes.title}>{title}</div>\n      <div className={classes.text}>\n        {lines && lines.length > 0 ? lines.map((line) => (\n          <div key={line}>{line}</div>\n        )) : null}\n      </div>\n      <div className={classes.content}>\n        {ContentComponent}\n      </div>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport { selectProject } from './selectors';\n\n\ntype TData = {\n  data: TProjectData | undefined;\n}\n\nexport const useState = (projectId: string): TData => {\n  const data = useSelector(selectProject(projectId));\n\n  return {\n    data,\n  };\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 300,\n      lineHeight: '42px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}