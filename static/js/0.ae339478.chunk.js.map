{"version":3,"sources":["screens/Projects/laptop/styles.ts","screens/Projects/laptop/Projects.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/index.ts","screens/Projects/laptop/components/ProjectCard/index.ts","screens/Projects/laptop/screens/index.ts","screens/Projects/laptop/components/index.ts","screens/Projects/laptop/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/components/ProjectCard/ProjectCard.tsx","screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/components/ProjectCard/styles.ts"],"names":["styles","cardsWrapper","width","overflow","marginBottom","cardsContainer","display","flexDirection","justifyContent","alignItems","flexWrap","margin","useStyles","useTStyles","SCROLL_RANGES","compact","Infinity","Projects","memo","useContentSize","headerSize","onScrollY","classes","title","subTitle","size","onScroll","className","id","offsetSize","CloseButton","onClick","button","type","height","color","border","outline","background","cursor","padding","Header","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","wrapper","container","innerContainer","photo","midContainer","titleContainer","label","rightContainer","greyUltralight","colors","primary","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","boxSizing","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","marginLeft","fontSize","fontWeight","lineHeight","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props","Project","projectId","useParams","isVisible","in","timeout","unmountOnExit","state","transitionState","iconType","ContentComponent","from","to","lines","rows","ProjectCard","imageContainer","text","labelsContainer","svg","viewBox","fill","xmlns","strokeDasharray","x","y","rx","stroke","strokeWidth","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","borderColor","underline","backgroundColor","strokeDashoffset","boxShadow","textDecoration","transform","borderTopRightRadius","borderTopLeftRadius","animation"],"mappings":"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","file":"static/js/0.ae339478.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    cardsWrapper: {\n      width: '100%',\n      overflow: 'visible',\n      marginBottom: 70,\n    },\n    cardsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      flexWrap: 'wrap',\n      margin: -15,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { memo } from 'react';\n\nimport {\n  ContentHeader,\n  ScrollContent,\n  ContentContainer,\n  SectionTitle,\n} from 'components';\nimport { useContentSize } from 'hooks';\n\nimport { Project } from './screens';\nimport { ProjectCard } from './components';\nimport { useStyles } from './styles';\n\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nconst ProjectsComp: React.FC<{}> = () => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const classes = useStyles();\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Projects\"\n        subTitle=\"My commercial and not really projects\"\n        size={headerSize}\n      />\n      <ScrollContent onScroll={onScrollY}>\n        <ContentContainer>\n          <SectionTitle>Personal projects</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n            </div>\n          </div>\n          <SectionTitle>Commercial projects under NDA</SectionTitle>\n          <div className={classes.cardsWrapper}>\n            <div className={classes.cardsContainer}>\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n              <ProjectCard id=\"virtual-tours\" />\n            </div>\n          </div>\n        </ContentContainer>\n      </ScrollContent>\n      <Project offsetSize={headerSize} />\n    </>\n  );\n};\n\nexport const Projects = memo(ProjectsComp);\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","export { Project } from './Project';\n","export { ProjectCard } from './ProjectCard';\n","export { Projects as default } from './Projects';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { CloseButton } from './components';\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>Virtual Tours</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>\n              The marketplace for creating, celling and<br />\n            purchasing virtual tours in the city (virtual guidance).<br />\n            Includes mobile app and the website.\n          </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  SectionWithIcon,\n  RowTable,\n  DateRange,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { Header } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            <Header size={headerSize} />\n            <ScrollContent onScroll={onScrollY}>\n              <ContentContainer>\n                <SectionWithIcon\n                  iconType=\"schedule\"\n                  title=\"Project schedule\"\n                  ContentComponent={(\n                    <DateRange\n                      from={['2019', 'October']}\n                      to={['2019', 'October']}\n                    />\n                  )}\n                />\n                <SectionWithIcon\n                  iconType=\"work-result\"\n                  title=\"Work results\"\n                  lines={[\n                    'Reviwed the work of the other React Native developer',\n                    'Created iOS and Android dev & production builds',\n                    'Configured Apple AppStore & Testflight and Google Play Market',\n                  ]}\n                />\n                <SectionWithIcon\n                  iconType=\"achievements\"\n                  title=\"Achievements\"\n                  lines={[\n                    'Reviwed the work of the other React Native developer',\n                    'Created iOS and Android dev & production builds',\n                    'Configured Apple AppStore & Testflight and Google Play Market',\n                  ]}\n                />\n                <SectionWithIcon\n                  iconType=\"team\"\n                  title=\"Team\"\n                  ContentComponent={(\n                    <RowTable\n                      rows={[\n                        ['Dev', '6'],\n                        ['QA', '2'],\n                        ['PM', '1'],\n                        ['UI/UX', '1'],\n                      ]}\n                    />\n                  )}\n                />\n              </ContentContainer>\n            </ScrollContent>\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { CategoryLabel, SvgProjectIcon } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface ProjectCardProps {\n  id: string;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  id,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Link\n      className={classes.button}\n      to={`${Routes.PROJECTS}/${id}`}\n    >\n      <div className={classes.imageContainer}>\n        <SvgProjectIcon\n          type=\"virtual-tours\"\n          color=\"rgba(255,255,255,0.5)\"\n          width={80}\n          height={80}\n        />\n      </div>\n      <div className={classes.text}>\n        Virtual Tours App\n      </div>\n      <div className={classes.labelsContainer}>\n        <CategoryLabel\n          type=\"mobile\"\n          label=\"Mobile\"\n          size=\"small\"\n        />\n      </div>\n      <svg\n        className={classes.svg}\n        width={266}\n        height={268}\n        viewBox={`0 0 ${266} ${268}`}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <rect x=\"2\" y=\"2\" width={266 - 4} height={268 - 4} rx=\"10\" stroke=\"#81AF65\" strokeWidth=\"2\" />\n      </svg>\n    </Link>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      bgContent, greyUltralight,\n    },\n  },\n}) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 28 },\n    },\n    button: {\n      position: 'relative',\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      width: 266,\n      height: 268,\n      border: 'none',\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.25)',\n      outline: 'none',\n      cursor: 'pointer',\n      textDecoration: 'none',\n      margin: 15,\n      padding: 0,\n      transition: 'transform 0.4s ease',\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        transition: 'transform 0.4s ease',\n      },\n      '&:active svg path': {\n        stroke: 'blue',\n      },\n    },\n    imageContainer: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(255,255,255,0.05)',\n      borderTopRightRadius: 10,\n      borderTopLeftRadius: 10,\n\n    },\n    text: {\n      width: '100%',\n      height: 70,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n    },\n    labelsContainer: {\n      position: 'absolute',\n      right: 6,\n      top: 6,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-start',\n    },\n    svg: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      opacity: 0,\n\n      '&:hover': {\n        strokeDasharray: 7,\n        animation: '$dash 1s linear infinite',\n        opacity: 1,\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}