{"version":3,"sources":["screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/Project.tsx"],"names":["styles","colors","primary","bgContent","wrapper","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","boxSizing","borderColor","underline","backgroundColor","display","flexDirection","justifyContent","alignItems","useStyles","useTStyles","CloseButton","memo","onClick","classes","className","button","type","width","height","color","border","outline","background","cursor","padding","Header","size","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","container","innerContainer","photo","midContainer","titleContainer","title","label","subTitle","rightContainer","greyUltralight","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","marginLeft","fontSize","fontWeight","lineHeight","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props","SCROLL_RANGES","compact","Infinity","Project","offsetSize","useContentSize","headerSize","onScrollY","projectId","useParams","isVisible","in","timeout","unmountOnExit","state","transitionState","onScroll","iconType","ContentComponent","from","to","lines","rows"],"mappings":"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","file":"static/js/5.712cd62f.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { Project } from './Project';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { CloseButton } from './components';\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>Virtual Tours</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>\n              The marketplace for creating, celling and<br />\n            purchasing virtual tours in the city (virtual guidance).<br />\n            Includes mobile app and the website.\n          </div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  SectionWithIcon,\n  RowTable,\n  DateRange,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { Header } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            <Header size={headerSize} />\n            <ScrollContent onScroll={onScrollY}>\n              <ContentContainer>\n                <SectionWithIcon\n                  iconType=\"schedule\"\n                  title=\"Project schedule\"\n                  ContentComponent={(\n                    <DateRange\n                      from={['2019', 'October']}\n                      to={['2019', 'October']}\n                    />\n                  )}\n                />\n                <SectionWithIcon\n                  iconType=\"work-result\"\n                  title=\"Work results\"\n                  lines={[\n                    'Reviwed the work of the other React Native developer',\n                    'Created iOS and Android dev & production builds',\n                    'Configured Apple AppStore & Testflight and Google Play Market',\n                  ]}\n                />\n                <SectionWithIcon\n                  iconType=\"achievements\"\n                  title=\"Achievements\"\n                  lines={[\n                    'Reviwed the work of the other React Native developer',\n                    'Created iOS and Android dev & production builds',\n                    'Configured Apple AppStore & Testflight and Google Play Market',\n                  ]}\n                />\n                <SectionWithIcon\n                  iconType=\"team\"\n                  title=\"Team\"\n                  ContentComponent={(\n                    <RowTable\n                      rows={[\n                        ['Dev', '6'],\n                        ['QA', '2'],\n                        ['PM', '1'],\n                        ['UI/UX', '1'],\n                      ]}\n                    />\n                  )}\n                />\n              </ContentContainer>\n            </ScrollContent>\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n"],"sourceRoot":""}