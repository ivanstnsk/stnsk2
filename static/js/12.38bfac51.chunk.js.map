{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx","screens/Projects/laptop/screens/Project/components/Header/styles.ts","screens/Projects/laptop/screens/Project/components/EmptyHeader/styles.ts"],"names":["Header","size","title","subTitle","tags","iconType","history","useHistory","classes","useStyles","handleCloseClick","useCallback","push","Routes","PROJECTS","className","wrapper","container","innerContainer","type","color","width","height","photo","midContainer","titleContainer","map","tag","key","label","rightContainer","onClick","EmptyHeader","styles","greyUltralight","colors","primary","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","display","boxSizing","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","flexDirection","justifyContent","alignItems","marginLeft","fontSize","fontWeight","lineHeight","fontFamily","marginRight","opacity","marginTop","getSubtitleStyles","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props","useTStyles"],"mappings":"kHAAA,kE,gCCAA,4E,gCCAA,sI,gCCAA,+FAmBaA,EAAgC,SAAC,GAMvC,IAAD,IALJC,YAKI,MALG,SAKH,EAJJC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,EAAUC,cACVC,EAAUC,oBAAU,CAAER,SAEtBS,EAAmBC,uBAAY,WACnCL,EAAQM,KAAKC,IAAOC,YACnB,CAACR,IAEJ,OACE,yBAAKS,UAAWP,EAAQQ,SACtB,yBAAKD,UAAWP,EAAQS,WACtB,yBAAKF,UAAWP,EAAQU,gBACtB,kBAAC,IAAD,CACEC,KAAMd,EACNe,MAAM,wBACNC,MAAO,IACPC,OAAQ,IACRP,UAAWP,EAAQe,QAErB,yBAAKR,UAAWP,EAAQgB,cACtB,yBAAKT,UAAWP,EAAQiB,gBACtB,yBAAKV,UAAWP,EAAQN,OAAQA,GAC/BE,EAAKsB,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CACEC,IAAKD,EACLR,KAAMQ,EACNE,MAAOF,QAIb,yBAAKZ,UAAWP,EAAQL,UAAWA,MAIzC,yBAAKY,UAAWP,EAAQsB,gBACtB,kBAAC,IAAD,CACEC,QAASrB,Q,gCC7DnB,oGASasB,EAA4B,WACvC,IAAM1B,EAAUC,cACVC,EAAUC,sBAEVC,EAAmBC,uBAAY,WACnCL,EAAQM,KAAKC,IAAOC,YACnB,CAACR,IAEJ,OACE,yBAAKS,UAAWP,EAAQQ,SACtB,yBAAKD,UAAWP,EAAQsB,gBACtB,kBAAC,IAAD,CACEC,QAASrB,Q,oGC+CbuB,EAAoB,SAAC,GAUpB,IAPDC,EAOA,EATJC,OACEC,QACEF,eAOA,IAJJG,MAII,IAHFC,QAAqBC,EAGnB,EAHSC,SAA2BC,EAGpC,EAHoCA,iBACvBC,EAEb,EAFFC,KAAQtB,MAGV,MAAO,CACLL,QAAS,gBAAGf,EAAH,EAAGA,KAAH,oBACP2C,QAAS,OACTC,UAAW,aACXC,YAAaL,EACbM,aAAcN,GA3EK,SAACxC,GACxB,MAAa,YAATA,EACM,CACNqB,OAAQ,OACR0B,UAAW,QAGP,CACN1B,OAAQ,QACR0B,UAAW,SAmENC,CAAiBhD,GALb,CAMPiD,WAAY,mBAEdjC,UAAW,CACT2B,QAAS,OACTO,KAAM,EACNC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEdpC,eAAgB,CACd0B,QAAS,OACTO,KAAM,EACN9B,MAAO,OACPmB,SAAUD,EACVa,cAAe,MACfC,eAAgB,aAChBC,WAAY,SACZT,UAAW,cAEbrB,aAAc,CACZoB,QAAS,OACTO,KAAM,EACNC,cAAe,SACfE,WAAY,aACZD,eAAgB,SAChBE,WAAY,IAEd9B,eAAgB,CACdmB,QAAS,OACTO,KAAM,EACNC,cAAe,MACfC,eAAgB,aAChBC,WAAY,UAEdpD,MAAO,CACLsD,SAAU,GACVC,WAAY,IACZC,WAAY,OACZtC,MAAOc,EACPyB,WAAY,wBACZC,YAAa,IAEfzD,SAAU,gBAAGF,EAAH,EAAGA,KAAH,oBACRuD,SAAU,GACVC,WAAY,IACZC,WAAY,OACZtC,MAAOc,EACPyB,WAAY,yBAjFQ,SAAC1D,GACzB,MAAa,YAATA,EACM,CACN4D,QAAS,IACTvC,OAAQ,MACRwC,UAAW,OAGP,CACND,QAAS,IACTvC,OAAQ,OACRwC,UAAW,QAuENC,CAAkB9D,GANb,CAORiD,WAAY,mBAEd3B,MAAO,gBAAGtB,EAAH,EAAGA,KAAH,sBAnHY,SAACA,GACtB,MAAa,YAATA,EACM,CACNqB,OAAQ,OACRD,MAAO,OACP2C,UAAW,OACXC,SAAU,QAGN,CACN3C,OAAQ,QACRD,MAAO,QACP2C,UAAW,QACXC,SAAU,SAuGLC,CAAejE,GADb,CAELiD,WAAY,mBAEdiB,eAAgB,CACdvB,QAAS,OACTQ,cAAe,MACfE,WAAY,SACZD,eAAgB,aAChBE,WAAY,IAEdzB,eAAgB,gBAAG7B,EAAH,EAAGA,KAAH,oBACdqB,OAAQ,OACRsB,QAAS,OACTvB,MAAOqB,EACPU,cAAe,MACfC,eAAgB,WAChBR,UAAW,cAnHe,SAAC5C,GAC/B,MAAa,YAATA,EACM,CACNqD,WAAY,SACZc,WAAY,OAGR,CACNd,WAAY,aACZc,WAAY,QA2GPC,CAAwBpE,GAPb,CAQdiD,WAAY,qBAKLzC,EAAY,SAAC6D,GAAD,OAAwCC,YAAWtC,EAAQqC,K,gCChKpF,4DAGMrC,EAAoB,SAAC,GAIpB,IAFQQ,EAET,EAHJJ,MACEC,QAAWG,iBAGb,MAAO,CACLzB,QAAS,CACP4B,QAAS,OACTC,UAAW,aACXC,YAAaL,EACbM,aAAcN,GAEhBX,eAAgB,CACdc,QAAS,OACTO,KAAM,EACNC,cAAe,MACfC,eAAgB,WAChBR,UAAW,aACXuB,WAAY,MAKL3D,EAAY,kBAAsB8D,YAAWtC","file":"static/js/12.38bfac51.chunk.js","sourcesContent":["export { Header } from './Header';\n","export { EmptyHeader } from './EmptyHeader';\n","export { Header } from './Header';\nexport { EmptyHeader } from './EmptyHeader';\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel, CloseButton, SvgProjectIcon } from 'components';\nimport { TSvgProjectIconType } from 'types/icons';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n  tags: string[];\n  iconType: TSvgProjectIconType;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n  tags,\n  iconType,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <SvgProjectIcon\n            type={iconType}\n            color=\"rgba(255,255,255,0.5)\"\n            width={160}\n            height={160}\n            className={classes.photo}\n          />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              {tags.map((tag) => (\n                <CategoryLabel\n                  key={tag}\n                  type={tag}\n                  label={tag}\n                />\n              ))}\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CloseButton } from 'components';\nimport { Routes } from 'types';\n\nimport { useStyles } from './styles';\n\n\nexport const EmptyHeader: React.FC<{}> = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 300,\n      lineHeight: '42px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: greyUltralight,\n      fontFamily: 'Quicksand, sans-serif',\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { offsetHorizontal },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n    },\n    rightContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      paddingTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n"],"sourceRoot":""}