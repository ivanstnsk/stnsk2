{"version":3,"sources":["screens/Projects/laptop/screens/Project/redux/selectors.ts","screens/Projects/laptop/screens/Project/redux/index.ts","screens/Projects/laptop/screens/Project/redux/useState.ts"],"names":["selectProjects","state","projects","selectProject","projectId","createSelector","find","id","useState","data","useSelector"],"mappings":"uGAAA,gHAMaA,EAAiB,SAACC,GAAD,OAAmCA,EAAMC,UAI1DC,EAAgB,SAACC,GAAD,OAAyCC,YAKpE,CAACL,IACD,SAACE,GAAD,OAAcA,EAASI,MAAK,qBAAGC,KAAgBH,U,gCChBjD,sE,gCCAA,qEAWaI,EAAW,SAACJ,GAGvB,MAAO,CACLK,KAHWC,YAAYP,wBAAcC","file":"static/js/31.86f5e105.chunk.js","sourcesContent":["import { createSelector, Selector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\ntype TCreatedSelector = Selector<TState, TProjectData | undefined>;\n\nexport const selectProject = (projectId: string): TCreatedSelector => createSelector<\n  TState,\n  TProjectsState,\n  TProjectData | undefined\n>(\n  [selectProjects],\n  (projects) => projects.find(({ id }) => id === projectId),\n);\n","export { useState } from './useState';\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport { selectProject } from './selectors';\n\n\ntype TData = {\n  data: TProjectData | undefined;\n}\n\nexport const useState = (projectId: string): TData => {\n  const data = useSelector(selectProject(projectId));\n\n  return {\n    data,\n  };\n};\n"],"sourceRoot":""}