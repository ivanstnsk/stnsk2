{"version":3,"sources":["hooks/useModule.ts","constants/sizes.ts","hooks/useThemedStyles.ts","hooks/useMouseMove.ts","hooks/useMouseHover.ts","hooks/useMouseScroll.ts","hooks/useContentSize.ts","utils/interpolate.ts","utils/geometry.ts","utils/common.ts","screens/Projects/redux/index.ts","screens/Home lazy /^/.//.*$/ groupOptions: {} namespace object","screens/About lazy /^/.//.*$/ groupOptions: {} namespace object","screens/Projects lazy /^/.//.*$/ groupOptions: {} namespace object","screens/Contacts lazy /^/.//.*$/ groupOptions: {} namespace object","screens/CV lazy /^/.//.*$/ groupOptions: {} namespace object","screens/Articles lazy /^/.//.*$/ groupOptions: {} namespace object","theme/colors.ts","store/reducer.ts","store/store.ts","store/initState.ts","AppContainer/styles.ts","AppContainer/AppContainer.tsx","theme/sizes.ts","theme/theme.ts","index.tsx","screens/Home/index.ts","screens/About/index.ts","screens/Projects/index.ts","screens/Contacts/index.ts","screens/CV/index.ts","screens/Articles/index.ts","screens/Projects/redux/selectors.ts","screens/Projects/redux/reducer.ts","screens/Projects/redux/useState.ts","screens/Home/HomeContainer.tsx","screens/About/AboutContainer.tsx","screens/Projects/ProjectsContainer.tsx","screens/Contacts/ContactsContainer.tsx","screens/CV/CVContainer.tsx","screens/Articles/ArticlesContainer.tsx","screens/Projects/redux/actions.ts","types/module.ts","types/route.ts","utils/styles.ts","components/SvgIcon/icons/CVIcon.tsx","components/SvgIcon/icons/ProjectsIcon.tsx","components/SvgIcon/icons/AboutIcon.tsx","components/SvgIcon/icons/ContactsIcon.tsx","components/SvgIcon/icons/ArticlesIcon.tsx","components/SvgIcon/icons/LogoIcon.tsx","components/SvgIcon/icons/WebIcon.tsx","components/SvgIcon/icons/MobileIcon.tsx","components/SvgIcon/icons/DesignIcon.tsx","components/SvgIcon/icons/BackendIcon.tsx","components/SvgIcon/icons/MailIcon.tsx","components/SvgIcon/icons/SkypeIcon.tsx","components/SvgIcon/icons/GithubIcon.tsx","components/SvgIcon/icons/LinkedInIcon.tsx","components/SvgIcon/icons/InstagramIcon.tsx","components/SvgIcon/icons/TelescopeIcon.tsx","components/SvgIcon/icons/CloseIcon.tsx","components/SvgIcon/icons/MaintenanceIcon.tsx","components/SvgIcon/icons/ProjectCalendarIcon.tsx","components/SvgIcon/icons/WorkResultIcon.tsx","components/SvgIcon/icons/AchievementsIcon.tsx","components/SvgIcon/icons/TeamIcon.tsx","components/SvgIcon/icons/DirectionArrowIcon.tsx","components/SvgIcon/icons/TechIcon.tsx","components/SvgIcon/SvgIcon.tsx","components/MainButton/styles.ts","components/MainButton/MainButton.tsx","components/IntroCircle/styles.ts","components/IntroCircle/IntroCircle.tsx","components/GradientBackground/styles.ts","components/GradientBackground/GradientBackground.tsx","components/Footer/styles.ts","components/Footer/Footer.tsx","components/Fallback/styles.ts","components/Fallback/Fallback.tsx","components/ContentHeader/styles.ts","components/ContentHeader/ContentHeader.tsx","components/Menu/components/MenuButton/styles.ts","components/Menu/components/MenuButton/MenuButton.tsx","components/Menu/styles.ts","components/Menu/Menu.tsx","components/TransitionScreenWrapper/styles.ts","components/TransitionScreenWrapper/TransitionScreenWrapper.tsx","components/SectionTitle/styles.ts","components/SectionTitle/SectionTitle.tsx","components/Button/styles.ts","components/Button/Button.tsx","components/ScrollContent/styles.ts","components/ScrollContent/ScrollContent.tsx","components/ContentContainer/styles.ts","components/ContentContainer/ContentContainer.tsx","components/NoPage/styles.ts","components/NoPage/NoPage.tsx","components/CategoryLabel/styles.ts","components/CategoryLabel/CategoryLabel.tsx","components/SvgProjectIcon/icons/TicketSalingIcon.tsx","components/SvgProjectIcon/icons/VirtualToursIcon.tsx","components/SvgProjectIcon/icons/MedicalIcon.tsx","components/SvgProjectIcon/icons/BankingIcon.tsx","components/SvgProjectIcon/icons/ServicesIcon.tsx","components/SvgProjectIcon/icons/SportFansIcon.tsx","components/SvgProjectIcon/icons/ControlPanelIcon.tsx","components/SvgProjectIcon/icons/OtherIcon.tsx","components/SvgProjectIcon/SvgProjectIcon.tsx","components/TransitionInnerScreenWrapper/styles.ts","components/TransitionInnerScreenWrapper/TransitionInnerScreenWrapper.tsx","components/AccessDenied/styles.ts","components/AccessDenied/AccessDenied.tsx","components/SectionWithIcon/styles.ts","components/SectionWithIcon/SectionWithIcon.tsx","components/RowTable/styles.ts","components/RowTable/RowTable.tsx","components/DateRange/styles.ts","components/DateRange/DateRange.tsx","components/CloseButton/styles.ts","components/CloseButton/CloseButton.tsx"],"names":["useModule","useState","EModules","LAPTOP","moduleName","setModuleName","useEffect","window","onresize","event","screenWidth","w","target","module","innerWidth","TABLET","MOBILE","useTStyles","styles","props","theme","useTheme","createUseStyles","useJSSStyles","handlers","Map","useMouseMove","handlerId","handler","unregister","cbHandler","get","removeEventListener","pageX","pageY","set","addEventListener","useMouseHover","hovered","setHovered","ref","useRef","handleMouseOver","handleMouseOut","node","current","useMouseScroll","onScroll","handleScroll","scrollTop","useContentSize","sizes","size","setSize","useCallback","scrollY","nextSize","normal","i","length","range","compact","getContentSize","interpolate","value","fromRange","toRange","getDistance","x1","y1","x2","y2","q1","Math","abs","q2","sqrt","delay","timeMs","Promise","resolve","setTimeout","SequenceAnimation","operations","pushOperation","type","meta","push","popOperation","pop","style","key","apply","a","operation","keys","Object","this","map","webpackAsyncContext","req","__webpack_require__","o","then","e","Error","code","ids","id","all","slice","t","exports","EColors","reducer","combineReducers","projects","projectsReducer","createStore","iconType","title","subTitle","tags","team","dates","from","to","technologies","workResults","achievements","composeWithDevTools","page","display","flex","position","backgroundColor","colors","primary","bg","AppContainer","Routes","ABOUT","About","PROJECTS","Projects","CONTACTS","Contacts","CV","ARTICLES","Articles","memo","ULTRA_DARK_BLUE","bgContent","DARK_BLUE","bgInfo","LIGHT_GREY","circleBg","underline","DARK_GREY","greenMedium","greyUltralight","greyUltraDark","typography","GREY","text","categoryLabels","bot","PURPLE","web","BLUE","mobile","GREEN_BLUE","other","gradients","content","offsetHorizontal","offsetTop","offsetBottom","maxWidth","contentSection","offsetTopCompact","header","offsetBottomCompact","buttons","mainCircleButtonSize","menu","width","buttonSize","buttonIconSize","buttonOffset","ReactDOM","render","document","getElementById","selectProjects","state","selectCommercialProjects","createSelector","filter","selectPersonalProjects","initState","payload","ProjectsActions","SET_PROJECTS","commercial","useSelector","personal","HomeContainer","history","useHistory","Home","React","lazy","handleNavigateAbout","fallback","onNavigateAbout","AboutContainer","AboutScreen","ProjectsContainer","ProjectsScreen","ContactsContainer","ContactsScreen","CVContainer","CVScreen","ArticlesContainer","ArticlesScreen","getProjects","GET_PROJECTS","setProjects","data","combineClasses","classes","it","join","CVIcon","color","height","viewBox","fill","xmlns","d","ProjectsIcon","clipPath","AboutIcon","ContactsIcon","ArticlesIcon","LogoIcon","WebIcon","MobileIcon","DesignIcon","BackendIcon","MailIcon","SkypeIcon","GithubIcon","fillRule","clipRule","LinkedInIcon","InstagramIcon","TelescopeIcon","CloseIcon","MaintenanceIcon","ProjectCalendarIcon","WorkResultIcon","AchievementsIcon","TeamIcon","DirectionArrowIcon","TechIcon","renderIcon","Icon","getIcon","SvgIcon","className","otherProps","strokeDashoffset","transform","button","background","minHeight","border","borderRadius","padding","cursor","fontSize","fontWeight","fontStyle","lineHeight","boxSizing","outline","transition","animation","svg","left","right","top","bottom","strokeDasharray","MainButton","children","onClick","x","y","rx","stroke","strokeWidth","container","justifyContent","alignItems","overflow","animationFillMode","opacity","flexDirection","textAlign","marginTop","marginBottom","bold","small","activated","FOLLOW_STYLES","IntroCircle","showMode","containerRef","contentRef","handleMouseMove","xm","ym","applyFollowStyles","semiW","semiH","innerHeight","nodeRef","styleId","getFollowStylesApplier","show","applyContainerStyles","GradientBackground","version","Footer","buildNumber","metadata","buildVersion","major","minor","patch","Fallback","headerSizes","marginLeft","marginRight","getContainerStyles","fontFamily","getTitleStyles","ContentHeader","active","MenuButton","innerRef","iconColor","handleClick","minWidth","maxHeight","paddingTop","buttonsInner","tick","activeButtonPosition","borderTopRightRadius","borderBottomRightRadius","isButtonActive","url","path","includes","Menu","location","useLocation","pathname","getNavigatorHandler","route","wrapper","transitionState","zIndex","TransitionScreenWrapper","prevProps","nextProps","SectionTitle","Button","forwardRef","innerScroll","overflowY","borderTopWidth","showTopUnderline","borderWidth","borderColor","borderStyle","paddingRight","ScrollContent","setShowTopUnderline","handleScrollY","contentMaxWidth","paddingBottom","paddingLeft","ContentContainer","NoPage","getBgColor","label","margin","getSizeStyles","CategoryLabel","TicketSalingIcon","VirtualToursIcon","MedicalIcon","BankingIcon","ServicesIcon","SportFansIcon","ControlPanelIcon","OtherIcon","SvgProjectIcon","offsetSize","TransitionInnerScreenWrapper","AccessDenied","href","titleContainer","SectionWithIcon","lines","ContentComponent","line","table","borderCollapse","cell","cellTitle","cellText","RowTable","rows","icon","DateRange","CloseButton"],"mappings":"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CA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,GAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,gBAAiB,CAChB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,gBAAiB,CAChB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOrB,QAAQC,UAAUuB,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMT,EAAIE,GAAMQ,EAAKD,EAAI,GAC7B,OAAO5B,QAAQ8B,IAAIF,EAAIG,MAAM,GAAGZ,IAAIG,EAAoBG,IAAID,MAAK,WAChE,OAAOF,EAAoBU,EAAEH,EAAID,EAAI,OAGvCR,EAAoBJ,KAAO,WAC1B,OAAOC,OAAOD,KAAKG,IAEpBC,EAAoBS,GAAK,IACzB/F,EAAOmG,QAAUb,G,oBC9QjB,IAAID,EAAM,CACT,KAAM,CACL,GACA,GAED,mBAAoB,CACnB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,UAAW,CACV,GACA,GAED,aAAc,CACb,GACA,GAED,WAAY,CACX,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,GAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,sBAAuB,CACtB,GACA,EACA,GAED,uBAAwB,CACvB,GACA,EACA,GAED,6BAA8B,CAC7B,GACA,EACA,GAED,8BAA+B,CAC9B,GACA,EACA,GAED,oCAAqC,CACpC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,wCAAyC,CACxC,GACA,EACA,IAED,yCAA0C,CACzC,GACA,EACA,IAED,sDAAuD,CACtD,GACA,EACA,IAED,uDAAwD,CACvD,GACA,EACA,IAED,oEAAqE,CACpE,GACA,EACA,IAED,wEAAyE,CACxE,GACA,EACA,IAED,4DAA6D,CAC5D,GACA,EACA,IAED,+DAAgE,CAC/D,GACA,EACA,IAED,6DAA8D,CAC7D,GACA,EACA,IAED,gEAAiE,CAChE,GACA,EACA,IAED,4DAA6D,CAC5D,IACA,EACA,IAED,+DAAgE,CAC/D,IACA,EACA,IAED,8CAA+C,CAC9C,GACA,EACA,IAED,iDAAkD,CACjD,GACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,KAED,mCAAoC,CACnC,GACA,EACA,GAED,sCAAuC,CACtC,GACA,EACA,GAED,oCAAqC,CACpC,IACA,EACA,IAED,uCAAwC,CACvC,IACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,GAED,+BAAgC,CAC/B,GACA,EACA,GAED,iBAAkB,CACjB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,GAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOrB,QAAQC,UAAUuB,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMT,EAAIE,GAAMQ,EAAKD,EAAI,GAC7B,OAAO5B,QAAQ8B,IAAIF,EAAIG,MAAM,GAAGZ,IAAIG,EAAoBG,IAAID,MAAK,WAChE,OAAOF,EAAoBU,EAAEH,EAAID,EAAI,OAGvCR,EAAoBJ,KAAO,WAC1B,OAAOC,OAAOD,KAAKG,IAEpBC,EAAoBS,GAAK,IACzB/F,EAAOmG,QAAUb,G,oBCvSjB,IAAID,EAAM,CACT,KAAM,CACL,GACA,GAED,sBAAuB,CACtB,GACA,GAED,0BAA2B,CAC1B,GACA,GAED,UAAW,CACV,GACA,GAED,aAAc,CACb,GACA,GAED,WAAY,CACX,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,GAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,sBAAuB,CACtB,GACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,IAED,kCAAmC,CAClC,GACA,EACA,IAED,mCAAoC,CACnC,GACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,IAED,wCAAyC,CACxC,GACA,EACA,IAED,2CAA4C,CAC3C,GACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,IAED,+BAAgC,CAC/B,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,GAED,mBAAoB,CACnB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,GAED,2BAA4B,CAC3B,GACA,EACA,GAED,4BAA6B,CAC5B,GACA,EACA,GAED,mCAAoC,CACnC,IACA,EACA,IAED,uCAAwC,CACvC,IACA,EACA,IAED,sCAAuC,CACtC,GACA,EACA,IAED,uCAAwC,CACvC,GACA,EACA,IAED,kDAAmD,CAClD,GACA,EACA,IAED,mDAAoD,CACnD,GACA,EACA,IAED,8DAA+D,CAC9D,GACA,EACA,IAED,kEAAmE,CAClE,GACA,EACA,IAED,wDAAyD,CACxD,GACA,EACA,IAED,2DAA4D,CAC3D,GACA,EACA,IAED,yDAA0D,CACzD,GACA,EACA,IAED,4DAA6D,CAC5D,GACA,EACA,IAED,6CAA8C,CAC7C,GACA,EACA,IAED,8CAA+C,CAC9C,GACA,EACA,IAED,oDAAqD,CACpD,GACA,EACA,IAED,wDAAyD,CACxD,GACA,EACA,IAED,2DAA4D,CAC3D,IACA,EACA,KAED,mDAAoD,CACnD,GACA,EACA,IAED,sDAAuD,CACtD,GACA,EACA,IAED,oDAAqD,CACpD,GACA,EACA,IAED,uDAAwD,CACvD,GACA,EACA,IAED,4CAA6C,CAC5C,GACA,EACA,IAED,+CAAgD,CAC/C,GACA,EACA,IAED,iCAAkC,CACjC,GACA,EACA,GAED,oCAAqC,CACpC,GACA,EACA,GAED,iCAAkC,CACjC,GACA,EACA,IAED,kCAAmC,CAClC,GACA,EACA,IAED,uCAAwC,CACvC,GACA,EACA,IAED,0CAA2C,CAC1C,GACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,0CAA2C,CAC1C,GACA,EACA,IAED,6CAA8C,CAC7C,GACA,EACA,IAED,kCAAmC,CAClC,IACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,GAED,4BAA6B,CAC5B,GACA,EACA,GAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,iBAAkB,CACjB,IACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,UAAW,CACV,GACA,GAED,WAAY,CACX,GACA,GAED,kBAAmB,CAClB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,gBAAiB,CAChB,GACA,GAED,mBAAoB,CACnB,GACA,GAED,kBAAmB,CAClB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,oBAAqB,CACpB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,mBAAoB,CACnB,GACA,GAED,sBAAuB,CACtB,GACA,GAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOrB,QAAQC,UAAUuB,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMT,EAAIE,GAAMQ,EAAKD,EAAI,GAC7B,OAAO5B,QAAQ8B,IAAIF,EAAIG,MAAM,GAAGZ,IAAIG,EAAoBG,IAAID,MAAK,WAChE,OAAOF,EAAoBU,EAAEH,EAAID,EAAI,OAGvCR,EAAoBJ,KAAO,WAC1B,OAAOC,OAAOD,KAAKG,IAEpBC,EAAoBS,GAAK,IACzB/F,EAAOmG,QAAUb,G,oBCnejB,IAAID,EAAM,CACT,KAAM,CACL,GACA,GAED,sBAAuB,CACtB,GACA,GAED,0BAA2B,CAC1B,GACA,GAED,UAAW,CACV,GACA,GAED,aAAc,CACb,GACA,GAED,WAAY,CACX,GACA,EACA,GAED,YAAa,CACZ,GACA,EACA,GAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,sBAAuB,CACtB,GACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,IAED,qCAAsC,CACrC,GACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,IAED,sDAAuD,CACtD,IACA,EACA,IAED,0CAA2C,CAC1C,GACA,EACA,IAED,6CAA8C,CAC7C,GACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,mCAAoC,CACnC,GACA,EACA,IAED,oCAAqC,CACpC,GACA,EACA,IAED,gDAAiD,CAChD,IACA,EACA,IAED,oDAAqD,CACpD,IACA,EACA,IAED,yCAA0C,CACzC,GACA,EACA,IAED,4CAA6C,CAC5C,GACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,4BAA6B,CAC5B,GACA,EACA,IAED,+BAAgC,CAC/B,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,GAED,oBAAqB,CACpB,GACA,EACA,GAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,IAED,kBAAmB,CAClB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,WAAY,CACX,GACA,EACA,IAED,YAAa,CACZ,GACA,EACA,IAED,oBAAqB,CACpB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,oBAAqB,CACpB,GAC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","file":"static/js/main.a4e85258.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  MOBILE_WINDOW_MAX_WIDTH_PX,\n  TABLET_WINDOW_MAX_WIDTH_PX,\n} from 'constants/sizes';\nimport { EModules } from 'types';\n\ntype TModuleHook = EModules;\n\nconst getModuleNameByScreenWidth = (screenWidth: number): EModules => {\n  if (screenWidth > TABLET_WINDOW_MAX_WIDTH_PX) {\n    return EModules.LAPTOP;\n  }\n  if (screenWidth > MOBILE_WINDOW_MAX_WIDTH_PX) {\n    return EModules.TABLET;\n  }\n  return EModules.MOBILE;\n};\n\nexport const useModule = (): TModuleHook => {\n  const [moduleName, setModuleName] = useState<EModules>(EModules.LAPTOP);\n\n  useEffect(() => {\n    window.onresize = (event: UIEvent) => {\n      const w = event.target as Window;\n      const module = getModuleNameByScreenWidth(w.innerWidth);\n      setModuleName(module);\n    };\n  }, [setModuleName]);\n\n  return moduleName;\n};\n","export const MOBILE_WINDOW_MAX_WIDTH_PX = 830;\nexport const TABLET_WINDOW_MAX_WIDTH_PX = 1200;\n","import { createUseStyles, useTheme } from 'react-jss';\n\nimport { AppTheme } from 'types/theme';\nimport { AppStyles, AppStylesProps } from 'types/style';\n\n\ntype TStyleHook = Record<string, string>;\n\nexport const useTStyles = <T extends AppStylesProps>(styles: AppStyles, props?: T): TStyleHook => {\n  const theme = useTheme() as AppTheme;\n  const useJSSStyles = createUseStyles(styles(theme));\n  const classes = useJSSStyles({ ...props, theme });\n\n  return classes;\n};\n","type THandler = (x: number, y: number) => void;\n\nconst handlers = new Map();\n\n// TODO: FINISH THIS\n\nexport const useMouseMove = (handlerId: string, handler: THandler, unregister = false): void => {\n  if (unregister) {\n    const cbHandler = handlers.get(handlerId);\n    if (cbHandler) {\n      window.removeEventListener('mousemove', cbHandler);\n    }\n  } else {\n    const cbHandler = (event: MouseEvent): void => {\n      const { pageX, pageY } = event;\n      handler(pageX, pageY);\n    };\n\n    handlers.set(handlerId, cbHandler);\n\n    window.addEventListener('mousemove', cbHandler);\n  }\n};\n","import { useEffect, useState, useRef } from 'react';\n\n\ntype THook<T extends HTMLElement> = [\n  React.RefObject<T>,\n  boolean,\n];\n\nexport const useMouseHover = <T extends HTMLElement>(): THook<T> => {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef<T>(null);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const handleMouseOver = (): void => setHovered(true);\n    const handleMouseOut = (): void => setHovered(false);\n    const node = ref && ref.current;\n\n    if (node) {\n      node.addEventListener('mouseover', handleMouseOver);\n      node.addEventListener('mouseout', handleMouseOut);\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    }\n  }, [ref]);\n\n  return [ref, hovered];\n};\n","import { useEffect, useRef } from 'react';\n\n\ntype THook<T extends HTMLElement> = [ React.RefObject<T> ];\n\ntype TScrollHandler = (scrollY: number) => void;\n\n\nexport const useMouseScroll = <T extends HTMLElement>(onScroll?: TScrollHandler): THook<T> => {\n  const ref = useRef<T>(null);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const handleScroll = (event: Event): void => {\n      if (onScroll) {\n        const { target } = event;\n        onScroll((target as T).scrollTop);\n      }\n    };\n    const node = ref && ref.current;\n\n    if (node) {\n      node.addEventListener('scroll', handleScroll);\n      return () => {\n        node.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [ref, onScroll]);\n\n  return [ref];\n};\n","import { useState, useCallback } from 'react';\n\nimport { TContentSize } from 'types/sizes';\n\n\ntype TScrollableRanges = number[][];\ntype THookProps = {\n  normal?: TScrollableRanges;\n  compact?: TScrollableRanges;\n}\n\ntype THook = [\n  TContentSize,\n  (scrollY: number) => void\n];\n\nconst getContentSize = (sizes: THookProps, scrollY: number): TContentSize => {\n  if (!sizes) {\n    return 'normal';\n  }\n  if (sizes.normal) {\n    for (let i = 0; i < sizes.normal.length; i += 1) {\n      const range = sizes.normal[i];\n      if (scrollY >= range[0] && scrollY < range[1]) {\n        return 'normal';\n      }\n    }\n  }\n  if (sizes.compact) {\n    for (let i = 0; i < sizes.compact.length; i += 1) {\n      const range = sizes.compact[i];\n      if (scrollY >= range[0] && scrollY < range[1]) {\n        return 'compact';\n      }\n    }\n  }\n  return 'normal';\n};\n\nexport const useContentSize = (sizes: THookProps): THook => {\n  const [size, setSize] = useState<TContentSize>('normal');\n\n  const handleScrollY = useCallback((scrollY: number) => {\n    const nextSize = getContentSize(sizes, scrollY);\n    setSize(nextSize);\n    // TODO Fix glitch on Projects screen\n    setSize('normal');\n  }, [setSize, sizes]);\n\n  return [\n    size,\n    handleScrollY,\n  ];\n};\n","export const interpolate = (\n  value: number,\n  fromRange: number,\n  toRange: number,\n): number => {\n  return (toRange / fromRange) * value;\n};\n","export const getDistance = (x1: number, y1: number, x2: number, y2: number): number => {\n  const q1 = Math.abs(x1 - x2) ** 2;\n  const q2 = Math.abs(y1 - y2) ** 2;\n  return Math.sqrt(q1 + q2);\n};\n","export const delay = (timeMs: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeMs);\n  });\n};\n\ntype OperationType = 'd' | 's';\n\ntype OperationMeta =\n  | number\n  | Record<string, string>;\n\ninterface Operation {\n  type: OperationType;\n  meta: OperationMeta;\n}\n\nexport class SequenceAnimation<T extends HTMLElement> {\n  private ref: React.RefObject<T>;\n\n  private operations: Operation[];\n\n\n  public constructor(ref: React.RefObject<T>) {\n    this.ref = ref;\n    this.operations = [];\n  }\n\n  private pushOperation = (type: OperationType, meta: OperationMeta): void => {\n    this.operations.push({\n      type,\n      meta,\n    });\n  }\n\n  private popOperation = (): Operation | undefined => {\n    return this.operations.pop();\n  }\n\n  public delay = (timeMs: number): SequenceAnimation<T> => {\n    this.pushOperation('d', timeMs);\n    return this;\n  }\n\n  public style = (key: string, value: string): SequenceAnimation<T> => {\n    this.pushOperation('s', {\n      [key]: value,\n    });\n    return this;\n  }\n\n  public apply = async (): Promise<void> => {\n    // eslint-disable-next-line\n    for (const operation of this.operations) {\n      if (operation.type === 'd') {\n        // eslint-disable-next-line no-await-in-loop\n        await delay(operation.meta as number);\n      } else if (operation.type === 's') {\n        if (this.ref && this.ref.current) {\n          const keys = Object.keys(operation.meta);\n          // eslint-disable-next-line\n          for (const key of keys) {\n            // eslint-disable-next-line\n            // console.log('apply ', key, ' with ', operation.meta[key]);\n            this.ref.current.style[key] = operation.meta[key];\n          }\n        }\n      }\n    }\n  }\n}\n","export { projectsReducer } from './reducer';\nexport { useState } from './useState';\n","var map = {\n\t\"./\": [\n\t\t21,\n\t\t9\n\t],\n\t\"./HomeContainer\": [\n\t\t32,\n\t\t9\n\t],\n\t\"./HomeContainer.tsx\": [\n\t\t32,\n\t\t9\n\t],\n\t\"./index\": [\n\t\t21,\n\t\t9\n\t],\n\t\"./index.ts\": [\n\t\t21,\n\t\t9\n\t],\n\t\"./laptop\": [\n\t\t63,\n\t\t9,\n\t\t1\n\t],\n\t\"./laptop/\": [\n\t\t63,\n\t\t9,\n\t\t1\n\t],\n\t\"./laptop/Home\": [\n\t\t129,\n\t\t9,\n\t\t37\n\t],\n\t\"./laptop/Home.tsx\": [\n\t\t129,\n\t\t9,\n\t\t37\n\t],\n\t\"./laptop/components\": [\n\t\t58,\n\t\t9,\n\t\t5\n\t],\n\t\"./laptop/components/\": [\n\t\t58,\n\t\t9,\n\t\t5\n\t],\n\t\"./laptop/components/CircleButtonsLayout\": [\n\t\t51,\n\t\t9,\n\t\t7\n\t],\n\t\"./laptop/components/CircleButtonsLayout/\": [\n\t\t51,\n\t\t9,\n\t\t7\n\t],\n\t\"./laptop/components/CircleButtonsLayout/CircleButtonsLayout\": [\n\t\t101,\n\t\t9,\n\t\t41\n\t],\n\t\"./laptop/components/CircleButtonsLayout/CircleButtonsLayout.tsx\": [\n\t\t101,\n\t\t9,\n\t\t41\n\t],\n\t\"./laptop/components/CircleButtonsLayout/index\": [\n\t\t51,\n\t\t9,\n\t\t7\n\t],\n\t\"./laptop/components/CircleButtonsLayout/index.ts\": [\n\t\t51,\n\t\t9,\n\t\t7\n\t],\n\t\"./laptop/components/CircleButtonsLayout/styles\": [\n\t\t107,\n\t\t9,\n\t\t85\n\t],\n\t\"./laptop/components/CircleButtonsLayout/styles.ts\": [\n\t\t107,\n\t\t9,\n\t\t85\n\t],\n\t\"./laptop/components/MainCircleButton\": [\n\t\t47,\n\t\t9,\n\t\t11\n\t],\n\t\"./laptop/components/MainCircleButton/\": [\n\t\t47,\n\t\t9,\n\t\t11\n\t],\n\t\"./laptop/components/MainCircleButton/MainCircleButton\": [\n\t\t94,\n\t\t9,\n\t\t43\n\t],\n\t\"./laptop/components/MainCircleButton/MainCircleButton.tsx\": [\n\t\t94,\n\t\t9,\n\t\t43\n\t],\n\t\"./laptop/components/MainCircleButton/index\": [\n\t\t47,\n\t\t9,\n\t\t11\n\t],\n\t\"./laptop/components/MainCircleButton/index.ts\": [\n\t\t47,\n\t\t9,\n\t\t11\n\t],\n\t\"./laptop/components/MainCircleButton/styles\": [\n\t\t99,\n\t\t9,\n\t\t44\n\t],\n\t\"./laptop/components/MainCircleButton/styles.ts\": [\n\t\t99,\n\t\t9,\n\t\t44\n\t],\n\t\"./laptop/components/MainCircleButton/types\": [\n\t\t147,\n\t\t7,\n\t\t86\n\t],\n\t\"./laptop/components/MainCircleButton/types.ts\": [\n\t\t147,\n\t\t7,\n\t\t86\n\t],\n\t\"./laptop/components/index\": [\n\t\t58,\n\t\t9,\n\t\t5\n\t],\n\t\"./laptop/components/index.ts\": [\n\t\t58,\n\t\t9,\n\t\t5\n\t],\n\t\"./laptop/index\": [\n\t\t63,\n\t\t9,\n\t\t1\n\t],\n\t\"./laptop/index.ts\": [\n\t\t63,\n\t\t9,\n\t\t1\n\t],\n\t\"./laptop/styles\": [\n\t\t113,\n\t\t9,\n\t\t87\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t113,\n\t\t9,\n\t\t87\n\t],\n\t\"./mobile\": [\n\t\t64,\n\t\t9,\n\t\t26\n\t],\n\t\"./mobile/\": [\n\t\t64,\n\t\t9,\n\t\t26\n\t],\n\t\"./mobile/Home\": [\n\t\t130,\n\t\t9,\n\t\t57\n\t],\n\t\"./mobile/Home.tsx\": [\n\t\t130,\n\t\t9,\n\t\t57\n\t],\n\t\"./mobile/index\": [\n\t\t64,\n\t\t9,\n\t\t26\n\t],\n\t\"./mobile/index.ts\": [\n\t\t64,\n\t\t9,\n\t\t26\n\t],\n\t\"./mobile/styles\": [\n\t\t114,\n\t\t9,\n\t\t88\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t114,\n\t\t9,\n\t\t88\n\t],\n\t\"./tablet\": [\n\t\t65,\n\t\t9,\n\t\t27\n\t],\n\t\"./tablet/\": [\n\t\t65,\n\t\t9,\n\t\t27\n\t],\n\t\"./tablet/Home\": [\n\t\t131,\n\t\t9,\n\t\t58\n\t],\n\t\"./tablet/Home.tsx\": [\n\t\t131,\n\t\t9,\n\t\t58\n\t],\n\t\"./tablet/index\": [\n\t\t65,\n\t\t9,\n\t\t27\n\t],\n\t\"./tablet/index.ts\": [\n\t\t65,\n\t\t9,\n\t\t27\n\t],\n\t\"./tablet/styles\": [\n\t\t115,\n\t\t9,\n\t\t89\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t115,\n\t\t9,\n\t\t89\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 166;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./\": [\n\t\t22,\n\t\t9\n\t],\n\t\"./AboutContainer\": [\n\t\t33,\n\t\t9\n\t],\n\t\"./AboutContainer.tsx\": [\n\t\t33,\n\t\t9\n\t],\n\t\"./index\": [\n\t\t22,\n\t\t9\n\t],\n\t\"./index.ts\": [\n\t\t22,\n\t\t9\n\t],\n\t\"./laptop\": [\n\t\t66,\n\t\t9,\n\t\t4\n\t],\n\t\"./laptop/\": [\n\t\t66,\n\t\t9,\n\t\t4\n\t],\n\t\"./laptop/About\": [\n\t\t132,\n\t\t9,\n\t\t39\n\t],\n\t\"./laptop/About.tsx\": [\n\t\t132,\n\t\t9,\n\t\t39\n\t],\n\t\"./laptop/components\": [\n\t\t59,\n\t\t9,\n\t\t8\n\t],\n\t\"./laptop/components/\": [\n\t\t59,\n\t\t9,\n\t\t8\n\t],\n\t\"./laptop/components/Header\": [\n\t\t52,\n\t\t9,\n\t\t9\n\t],\n\t\"./laptop/components/Header/\": [\n\t\t52,\n\t\t9,\n\t\t9\n\t],\n\t\"./laptop/components/Header/Header\": [\n\t\t102,\n\t\t9,\n\t\t42\n\t],\n\t\"./laptop/components/Header/Header.tsx\": [\n\t\t102,\n\t\t9,\n\t\t42\n\t],\n\t\"./laptop/components/Header/components\": [\n\t\t48,\n\t\t9,\n\t\t13\n\t],\n\t\"./laptop/components/Header/components/\": [\n\t\t48,\n\t\t9,\n\t\t13\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon\": [\n\t\t44,\n\t\t9,\n\t\t15\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/\": [\n\t\t44,\n\t\t9,\n\t\t15\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/MainSkillIcon\": [\n\t\t91,\n\t\t9,\n\t\t45\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/MainSkillIcon.tsx\": [\n\t\t91,\n\t\t9,\n\t\t45\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/index\": [\n\t\t44,\n\t\t9,\n\t\t15\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/index.ts\": [\n\t\t44,\n\t\t9,\n\t\t15\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/styles\": [\n\t\t96,\n\t\t9,\n\t\t65\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/styles.ts\": [\n\t\t96,\n\t\t9,\n\t\t65\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/types\": [\n\t\t148,\n\t\t7,\n\t\t66\n\t],\n\t\"./laptop/components/Header/components/MainSkillIcon/types.ts\": [\n\t\t148,\n\t\t7,\n\t\t66\n\t],\n\t\"./laptop/components/Header/components/index\": [\n\t\t48,\n\t\t9,\n\t\t13\n\t],\n\t\"./laptop/components/Header/components/index.ts\": [\n\t\t48,\n\t\t9,\n\t\t13\n\t],\n\t\"./laptop/components/Header/img/photo.jpg\": [\n\t\t174,\n\t\t7,\n\t\t102\n\t],\n\t\"./laptop/components/Header/index\": [\n\t\t52,\n\t\t9,\n\t\t9\n\t],\n\t\"./laptop/components/Header/index.ts\": [\n\t\t52,\n\t\t9,\n\t\t9\n\t],\n\t\"./laptop/components/Header/styles\": [\n\t\t108,\n\t\t9,\n\t\t46\n\t],\n\t\"./laptop/components/Header/styles.ts\": [\n\t\t108,\n\t\t9,\n\t\t46\n\t],\n\t\"./laptop/components/index\": [\n\t\t59,\n\t\t9,\n\t\t8\n\t],\n\t\"./laptop/components/index.ts\": [\n\t\t59,\n\t\t9,\n\t\t8\n\t],\n\t\"./laptop/index\": [\n\t\t66,\n\t\t9,\n\t\t4\n\t],\n\t\"./laptop/index.ts\": [\n\t\t66,\n\t\t9,\n\t\t4\n\t],\n\t\"./laptop/styles\": [\n\t\t116,\n\t\t9,\n\t\t67\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t116,\n\t\t9,\n\t\t67\n\t],\n\t\"./mobile\": [\n\t\t67,\n\t\t9,\n\t\t16\n\t],\n\t\"./mobile/\": [\n\t\t67,\n\t\t9,\n\t\t16\n\t],\n\t\"./mobile/About\": [\n\t\t133,\n\t\t9,\n\t\t47\n\t],\n\t\"./mobile/About.tsx\": [\n\t\t133,\n\t\t9,\n\t\t47\n\t],\n\t\"./mobile/index\": [\n\t\t67,\n\t\t9,\n\t\t16\n\t],\n\t\"./mobile/index.ts\": [\n\t\t67,\n\t\t9,\n\t\t16\n\t],\n\t\"./mobile/styles\": [\n\t\t117,\n\t\t9,\n\t\t68\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t117,\n\t\t9,\n\t\t68\n\t],\n\t\"./tablet\": [\n\t\t68,\n\t\t9,\n\t\t17\n\t],\n\t\"./tablet/\": [\n\t\t68,\n\t\t9,\n\t\t17\n\t],\n\t\"./tablet/About\": [\n\t\t134,\n\t\t9,\n\t\t48\n\t],\n\t\"./tablet/About.tsx\": [\n\t\t134,\n\t\t9,\n\t\t48\n\t],\n\t\"./tablet/index\": [\n\t\t68,\n\t\t9,\n\t\t17\n\t],\n\t\"./tablet/index.ts\": [\n\t\t68,\n\t\t9,\n\t\t17\n\t],\n\t\"./tablet/styles\": [\n\t\t118,\n\t\t9,\n\t\t69\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t118,\n\t\t9,\n\t\t69\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 167;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./\": [\n\t\t23,\n\t\t9\n\t],\n\t\"./ProjectsContainer\": [\n\t\t34,\n\t\t9\n\t],\n\t\"./ProjectsContainer.tsx\": [\n\t\t34,\n\t\t9\n\t],\n\t\"./index\": [\n\t\t23,\n\t\t9\n\t],\n\t\"./index.ts\": [\n\t\t23,\n\t\t9\n\t],\n\t\"./laptop\": [\n\t\t69,\n\t\t9,\n\t\t0\n\t],\n\t\"./laptop/\": [\n\t\t69,\n\t\t9,\n\t\t0\n\t],\n\t\"./laptop/Projects\": [\n\t\t135,\n\t\t9,\n\t\t36\n\t],\n\t\"./laptop/Projects.tsx\": [\n\t\t135,\n\t\t9,\n\t\t36\n\t],\n\t\"./laptop/components\": [\n\t\t61,\n\t\t9,\n\t\t14\n\t],\n\t\"./laptop/components/\": [\n\t\t61,\n\t\t9,\n\t\t14\n\t],\n\t\"./laptop/components/ProjectCard\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./laptop/components/ProjectCard/\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./laptop/components/ProjectCard/ProjectCard\": [\n\t\t104,\n\t\t9,\n\t\t59\n\t],\n\t\"./laptop/components/ProjectCard/ProjectCard.tsx\": [\n\t\t104,\n\t\t9,\n\t\t59\n\t],\n\t\"./laptop/components/ProjectCard/index\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./laptop/components/ProjectCard/index.ts\": [\n\t\t54,\n\t\t9,\n\t\t28\n\t],\n\t\"./laptop/components/ProjectCard/styles\": [\n\t\t110,\n\t\t9,\n\t\t90\n\t],\n\t\"./laptop/components/ProjectCard/styles.ts\": [\n\t\t110,\n\t\t9,\n\t\t90\n\t],\n\t\"./laptop/components/index\": [\n\t\t61,\n\t\t9,\n\t\t14\n\t],\n\t\"./laptop/components/index.ts\": [\n\t\t61,\n\t\t9,\n\t\t14\n\t],\n\t\"./laptop/index\": [\n\t\t69,\n\t\t9,\n\t\t0\n\t],\n\t\"./laptop/index.ts\": [\n\t\t69,\n\t\t9,\n\t\t0\n\t],\n\t\"./laptop/screens\": [\n\t\t60,\n\t\t9,\n\t\t2\n\t],\n\t\"./laptop/screens/\": [\n\t\t60,\n\t\t9,\n\t\t2\n\t],\n\t\"./laptop/screens/Project\": [\n\t\t53,\n\t\t9,\n\t\t3\n\t],\n\t\"./laptop/screens/Project/\": [\n\t\t53,\n\t\t9,\n\t\t3\n\t],\n\t\"./laptop/screens/Project/Project\": [\n\t\t103,\n\t\t9,\n\t\t38\n\t],\n\t\"./laptop/screens/Project/Project.tsx\": [\n\t\t103,\n\t\t9,\n\t\t38\n\t],\n\t\"./laptop/screens/Project/components\": [\n\t\t50,\n\t\t9,\n\t\t12\n\t],\n\t\"./laptop/screens/Project/components/\": [\n\t\t50,\n\t\t9,\n\t\t12\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader\": [\n\t\t46,\n\t\t9,\n\t\t29\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/\": [\n\t\t46,\n\t\t9,\n\t\t29\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/EmptyHeader\": [\n\t\t93,\n\t\t9,\n\t\t60\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/EmptyHeader.tsx\": [\n\t\t93,\n\t\t9,\n\t\t60\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/index\": [\n\t\t46,\n\t\t9,\n\t\t29\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/index.ts\": [\n\t\t46,\n\t\t9,\n\t\t29\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/styles\": [\n\t\t98,\n\t\t9,\n\t\t91\n\t],\n\t\"./laptop/screens/Project/components/EmptyHeader/styles.ts\": [\n\t\t98,\n\t\t9,\n\t\t91\n\t],\n\t\"./laptop/screens/Project/components/Header\": [\n\t\t45,\n\t\t9,\n\t\t30\n\t],\n\t\"./laptop/screens/Project/components/Header/\": [\n\t\t45,\n\t\t9,\n\t\t30\n\t],\n\t\"./laptop/screens/Project/components/Header/Header\": [\n\t\t92,\n\t\t9,\n\t\t61\n\t],\n\t\"./laptop/screens/Project/components/Header/Header.tsx\": [\n\t\t92,\n\t\t9,\n\t\t61\n\t],\n\t\"./laptop/screens/Project/components/Header/img/photo.jpg\": [\n\t\t176,\n\t\t7,\n\t\t103\n\t],\n\t\"./laptop/screens/Project/components/Header/index\": [\n\t\t45,\n\t\t9,\n\t\t30\n\t],\n\t\"./laptop/screens/Project/components/Header/index.ts\": [\n\t\t45,\n\t\t9,\n\t\t30\n\t],\n\t\"./laptop/screens/Project/components/Header/styles\": [\n\t\t97,\n\t\t9,\n\t\t92\n\t],\n\t\"./laptop/screens/Project/components/Header/styles.ts\": [\n\t\t97,\n\t\t9,\n\t\t92\n\t],\n\t\"./laptop/screens/Project/components/index\": [\n\t\t50,\n\t\t9,\n\t\t12\n\t],\n\t\"./laptop/screens/Project/components/index.ts\": [\n\t\t50,\n\t\t9,\n\t\t12\n\t],\n\t\"./laptop/screens/Project/index\": [\n\t\t53,\n\t\t9,\n\t\t3\n\t],\n\t\"./laptop/screens/Project/index.ts\": [\n\t\t53,\n\t\t9,\n\t\t3\n\t],\n\t\"./laptop/screens/Project/redux\": [\n\t\t49,\n\t\t9,\n\t\t31\n\t],\n\t\"./laptop/screens/Project/redux/\": [\n\t\t49,\n\t\t9,\n\t\t31\n\t],\n\t\"./laptop/screens/Project/redux/index\": [\n\t\t49,\n\t\t9,\n\t\t31\n\t],\n\t\"./laptop/screens/Project/redux/index.ts\": [\n\t\t49,\n\t\t9,\n\t\t31\n\t],\n\t\"./laptop/screens/Project/redux/selectors\": [\n\t\t100,\n\t\t9,\n\t\t93\n\t],\n\t\"./laptop/screens/Project/redux/selectors.ts\": [\n\t\t100,\n\t\t9,\n\t\t93\n\t],\n\t\"./laptop/screens/Project/redux/useState\": [\n\t\t95,\n\t\t9,\n\t\t62\n\t],\n\t\"./laptop/screens/Project/redux/useState.ts\": [\n\t\t95,\n\t\t9,\n\t\t62\n\t],\n\t\"./laptop/screens/Project/styles\": [\n\t\t109,\n\t\t9,\n\t\t94\n\t],\n\t\"./laptop/screens/Project/styles.ts\": [\n\t\t109,\n\t\t9,\n\t\t94\n\t],\n\t\"./laptop/screens/index\": [\n\t\t60,\n\t\t9,\n\t\t2\n\t],\n\t\"./laptop/screens/index.ts\": [\n\t\t60,\n\t\t9,\n\t\t2\n\t],\n\t\"./laptop/styles\": [\n\t\t119,\n\t\t9,\n\t\t95\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t119,\n\t\t9,\n\t\t95\n\t],\n\t\"./laptop/types\": [\n\t\t149,\n\t\t7,\n\t\t96\n\t],\n\t\"./laptop/types.ts\": [\n\t\t149,\n\t\t7,\n\t\t96\n\t],\n\t\"./mobile\": [\n\t\t70,\n\t\t9,\n\t\t32\n\t],\n\t\"./mobile/\": [\n\t\t70,\n\t\t9,\n\t\t32\n\t],\n\t\"./mobile/Projects\": [\n\t\t136,\n\t\t9,\n\t\t63\n\t],\n\t\"./mobile/Projects.tsx\": [\n\t\t136,\n\t\t9,\n\t\t63\n\t],\n\t\"./mobile/index\": [\n\t\t70,\n\t\t9,\n\t\t32\n\t],\n\t\"./mobile/index.ts\": [\n\t\t70,\n\t\t9,\n\t\t32\n\t],\n\t\"./mobile/styles\": [\n\t\t120,\n\t\t9,\n\t\t97\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t120,\n\t\t9,\n\t\t97\n\t],\n\t\"./redux\": [\n\t\t16,\n\t\t9\n\t],\n\t\"./redux/\": [\n\t\t16,\n\t\t9\n\t],\n\t\"./redux/actions\": [\n\t\t39,\n\t\t9\n\t],\n\t\"./redux/actions.ts\": [\n\t\t39,\n\t\t9\n\t],\n\t\"./redux/index\": [\n\t\t16,\n\t\t9\n\t],\n\t\"./redux/index.ts\": [\n\t\t16,\n\t\t9\n\t],\n\t\"./redux/reducer\": [\n\t\t30,\n\t\t9\n\t],\n\t\"./redux/reducer.ts\": [\n\t\t30,\n\t\t9\n\t],\n\t\"./redux/selectors\": [\n\t\t27,\n\t\t9\n\t],\n\t\"./redux/selectors.ts\": [\n\t\t27,\n\t\t9\n\t],\n\t\"./redux/useState\": [\n\t\t31,\n\t\t9\n\t],\n\t\"./redux/useState.ts\": [\n\t\t31,\n\t\t9\n\t],\n\t\"./tablet\": [\n\t\t71,\n\t\t9,\n\t\t33\n\t],\n\t\"./tablet/\": [\n\t\t71,\n\t\t9,\n\t\t33\n\t],\n\t\"./tablet/Projects\": [\n\t\t137,\n\t\t9,\n\t\t64\n\t],\n\t\"./tablet/Projects.tsx\": [\n\t\t137,\n\t\t9,\n\t\t64\n\t],\n\t\"./tablet/index\": [\n\t\t71,\n\t\t9,\n\t\t33\n\t],\n\t\"./tablet/index.ts\": [\n\t\t71,\n\t\t9,\n\t\t33\n\t],\n\t\"./tablet/styles\": [\n\t\t121,\n\t\t9,\n\t\t98\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t121,\n\t\t9,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 168;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./ContactsContainer\": [\n\t\t35,\n\t\t9\n\t],\n\t\"./ContactsContainer.tsx\": [\n\t\t35,\n\t\t9\n\t],\n\t\"./index\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./index.ts\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./laptop\": [\n\t\t72,\n\t\t9,\n\t\t6\n\t],\n\t\"./laptop/\": [\n\t\t72,\n\t\t9,\n\t\t6\n\t],\n\t\"./laptop/Contacts\": [\n\t\t138,\n\t\t9,\n\t\t40\n\t],\n\t\"./laptop/Contacts.tsx\": [\n\t\t138,\n\t\t9,\n\t\t40\n\t],\n\t\"./laptop/components\": [\n\t\t62,\n\t\t9,\n\t\t10\n\t],\n\t\"./laptop/components/\": [\n\t\t62,\n\t\t9,\n\t\t10\n\t],\n\t\"./laptop/components/ContactButton\": [\n\t\t55,\n\t\t9,\n\t\t22\n\t],\n\t\"./laptop/components/ContactButton/\": [\n\t\t55,\n\t\t9,\n\t\t22\n\t],\n\t\"./laptop/components/ContactButton/ContactButton\": [\n\t\t105,\n\t\t9,\n\t\t53\n\t],\n\t\"./laptop/components/ContactButton/ContactButton.tsx\": [\n\t\t105,\n\t\t9,\n\t\t53\n\t],\n\t\"./laptop/components/ContactButton/index\": [\n\t\t55,\n\t\t9,\n\t\t22\n\t],\n\t\"./laptop/components/ContactButton/index.ts\": [\n\t\t55,\n\t\t9,\n\t\t22\n\t],\n\t\"./laptop/components/ContactButton/styles\": [\n\t\t111,\n\t\t9,\n\t\t78\n\t],\n\t\"./laptop/components/ContactButton/styles.ts\": [\n\t\t111,\n\t\t9,\n\t\t78\n\t],\n\t\"./laptop/components/ContactButton/types\": [\n\t\t150,\n\t\t7,\n\t\t79\n\t],\n\t\"./laptop/components/ContactButton/types.ts\": [\n\t\t150,\n\t\t7,\n\t\t79\n\t],\n\t\"./laptop/components/SocialButton\": [\n\t\t56,\n\t\t9,\n\t\t23\n\t],\n\t\"./laptop/components/SocialButton/\": [\n\t\t56,\n\t\t9,\n\t\t23\n\t],\n\t\"./laptop/components/SocialButton/SocialButton\": [\n\t\t106,\n\t\t9,\n\t\t54\n\t],\n\t\"./laptop/components/SocialButton/SocialButton.tsx\": [\n\t\t106,\n\t\t9,\n\t\t54\n\t],\n\t\"./laptop/components/SocialButton/index\": [\n\t\t56,\n\t\t9,\n\t\t23\n\t],\n\t\"./laptop/components/SocialButton/index.ts\": [\n\t\t56,\n\t\t9,\n\t\t23\n\t],\n\t\"./laptop/components/SocialButton/styles\": [\n\t\t112,\n\t\t9,\n\t\t80\n\t],\n\t\"./laptop/components/SocialButton/styles.ts\": [\n\t\t112,\n\t\t9,\n\t\t80\n\t],\n\t\"./laptop/components/SocialButton/types\": [\n\t\t151,\n\t\t7,\n\t\t81\n\t],\n\t\"./laptop/components/SocialButton/types.ts\": [\n\t\t151,\n\t\t7,\n\t\t81\n\t],\n\t\"./laptop/components/index\": [\n\t\t62,\n\t\t9,\n\t\t10\n\t],\n\t\"./laptop/components/index.ts\": [\n\t\t62,\n\t\t9,\n\t\t10\n\t],\n\t\"./laptop/index\": [\n\t\t72,\n\t\t9,\n\t\t6\n\t],\n\t\"./laptop/index.ts\": [\n\t\t72,\n\t\t9,\n\t\t6\n\t],\n\t\"./laptop/styles\": [\n\t\t122,\n\t\t9,\n\t\t82\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t122,\n\t\t9,\n\t\t82\n\t],\n\t\"./mobile\": [\n\t\t73,\n\t\t9,\n\t\t24\n\t],\n\t\"./mobile/\": [\n\t\t73,\n\t\t9,\n\t\t24\n\t],\n\t\"./mobile/Contacts\": [\n\t\t139,\n\t\t9,\n\t\t55\n\t],\n\t\"./mobile/Contacts.tsx\": [\n\t\t139,\n\t\t9,\n\t\t55\n\t],\n\t\"./mobile/index\": [\n\t\t73,\n\t\t9,\n\t\t24\n\t],\n\t\"./mobile/index.ts\": [\n\t\t73,\n\t\t9,\n\t\t24\n\t],\n\t\"./mobile/styles\": [\n\t\t123,\n\t\t9,\n\t\t83\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t123,\n\t\t9,\n\t\t83\n\t],\n\t\"./tablet\": [\n\t\t74,\n\t\t9,\n\t\t25\n\t],\n\t\"./tablet/\": [\n\t\t74,\n\t\t9,\n\t\t25\n\t],\n\t\"./tablet/Contacts\": [\n\t\t140,\n\t\t9,\n\t\t56\n\t],\n\t\"./tablet/Contacts.tsx\": [\n\t\t140,\n\t\t9,\n\t\t56\n\t],\n\t\"./tablet/index\": [\n\t\t74,\n\t\t9,\n\t\t25\n\t],\n\t\"./tablet/index.ts\": [\n\t\t74,\n\t\t9,\n\t\t25\n\t],\n\t\"./tablet/styles\": [\n\t\t124,\n\t\t9,\n\t\t84\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t124,\n\t\t9,\n\t\t84\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 169;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./\": [\n\t\t25\n\t],\n\t\"./CVContainer\": [\n\t\t36\n\t],\n\t\"./CVContainer.tsx\": [\n\t\t36\n\t],\n\t\"./index\": [\n\t\t25\n\t],\n\t\"./index.ts\": [\n\t\t25\n\t],\n\t\"./laptop\": [\n\t\t75,\n\t\t35\n\t],\n\t\"./laptop/\": [\n\t\t75,\n\t\t35\n\t],\n\t\"./laptop/CV\": [\n\t\t141,\n\t\t74\n\t],\n\t\"./laptop/CV.tsx\": [\n\t\t141,\n\t\t74\n\t],\n\t\"./laptop/index\": [\n\t\t75,\n\t\t35\n\t],\n\t\"./laptop/index.ts\": [\n\t\t75,\n\t\t35\n\t],\n\t\"./laptop/styles\": [\n\t\t152,\n\t\t75\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t152,\n\t\t75\n\t],\n\t\"./mobile\": [\n\t\t76,\n\t\t20\n\t],\n\t\"./mobile/\": [\n\t\t76,\n\t\t20\n\t],\n\t\"./mobile/CV\": [\n\t\t142,\n\t\t51\n\t],\n\t\"./mobile/CV.tsx\": [\n\t\t142,\n\t\t51\n\t],\n\t\"./mobile/index\": [\n\t\t76,\n\t\t20\n\t],\n\t\"./mobile/index.ts\": [\n\t\t76,\n\t\t20\n\t],\n\t\"./mobile/styles\": [\n\t\t125,\n\t\t76\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t125,\n\t\t76\n\t],\n\t\"./tablet\": [\n\t\t77,\n\t\t21\n\t],\n\t\"./tablet/\": [\n\t\t77,\n\t\t21\n\t],\n\t\"./tablet/CV\": [\n\t\t143,\n\t\t52\n\t],\n\t\"./tablet/CV.tsx\": [\n\t\t143,\n\t\t52\n\t],\n\t\"./tablet/index\": [\n\t\t77,\n\t\t21\n\t],\n\t\"./tablet/index.ts\": [\n\t\t77,\n\t\t21\n\t],\n\t\"./tablet/styles\": [\n\t\t126,\n\t\t77\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t126,\n\t\t77\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 170;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./\": [\n\t\t26\n\t],\n\t\"./ArticlesContainer\": [\n\t\t37\n\t],\n\t\"./ArticlesContainer.tsx\": [\n\t\t37\n\t],\n\t\"./index\": [\n\t\t26\n\t],\n\t\"./index.ts\": [\n\t\t26\n\t],\n\t\"./laptop\": [\n\t\t78,\n\t\t34\n\t],\n\t\"./laptop/\": [\n\t\t78,\n\t\t34\n\t],\n\t\"./laptop/Articles\": [\n\t\t144,\n\t\t70\n\t],\n\t\"./laptop/Articles.tsx\": [\n\t\t144,\n\t\t70\n\t],\n\t\"./laptop/index\": [\n\t\t78,\n\t\t34\n\t],\n\t\"./laptop/index.ts\": [\n\t\t78,\n\t\t34\n\t],\n\t\"./laptop/styles\": [\n\t\t153,\n\t\t71\n\t],\n\t\"./laptop/styles.ts\": [\n\t\t153,\n\t\t71\n\t],\n\t\"./mobile\": [\n\t\t79,\n\t\t18\n\t],\n\t\"./mobile/\": [\n\t\t79,\n\t\t18\n\t],\n\t\"./mobile/Articles\": [\n\t\t145,\n\t\t49\n\t],\n\t\"./mobile/Articles.tsx\": [\n\t\t145,\n\t\t49\n\t],\n\t\"./mobile/index\": [\n\t\t79,\n\t\t18\n\t],\n\t\"./mobile/index.ts\": [\n\t\t79,\n\t\t18\n\t],\n\t\"./mobile/styles\": [\n\t\t127,\n\t\t72\n\t],\n\t\"./mobile/styles.ts\": [\n\t\t127,\n\t\t72\n\t],\n\t\"./tablet\": [\n\t\t80,\n\t\t19\n\t],\n\t\"./tablet/\": [\n\t\t80,\n\t\t19\n\t],\n\t\"./tablet/Articles\": [\n\t\t146,\n\t\t50\n\t],\n\t\"./tablet/Articles.tsx\": [\n\t\t146,\n\t\t50\n\t],\n\t\"./tablet/index\": [\n\t\t80,\n\t\t19\n\t],\n\t\"./tablet/index.ts\": [\n\t\t80,\n\t\t19\n\t],\n\t\"./tablet/styles\": [\n\t\t128,\n\t\t73\n\t],\n\t\"./tablet/styles.ts\": [\n\t\t128,\n\t\t73\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 171;\nmodule.exports = webpackAsyncContext;","export enum EColors {\n  ULTRA_DARK_BLUE = '#1D1F22',\n  DARK_BLUE = '#1F2124',\n  GREY = 'rgba(255,255,255,0.6)',\n  LIGHT_GREY = '#26292C',\n  DARK_GREY = 'rgba(255,255,255,0.05)',\n  PURPLE = '#5F28A4',\n  GREEN_BLUE = '#28A48D',\n  BLUE = '#284BA4',\n}\n","import { combineReducers } from 'redux';\n\nimport { TState } from 'types/store';\n\nimport { projectsReducer } from 'screens/Projects/redux';\n\n\nexport const reducer = combineReducers<TState>({\n  projects: projectsReducer,\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { reducer } from './reducer';\nimport { initState } from './initState';\n\n\nexport const store = createStore(\n  reducer,\n  initState,\n  composeWithDevTools(),\n);\n","import { TState } from 'types/store';\n\n\nexport const initState: TState = {\n  projects: [\n    {\n      id: 'UN1',\n      type: 'commercial',\n      iconType: 'ticket-saling',\n      title: 'ID authentication App',\n      subTitle: 'The mobile app for user ID authentication provided to be used by government & business.',\n      tags: ['mobile'],\n      team: [\n        ['PM', '1'],\n        ['DEV', '6'],\n        ['QA', '2'],\n      ],\n      dates: {\n        from: ['2018', 'August'],\n        to: ['2018', 'November'],\n      },\n      technologies: [\n        'react-native, react, redux, redux-saga, prop-types, styled-components, react-navigation, react-fbsdk, react-native-google-login, react-native-twitter-signin, push notifications, react-native-linkedIn-sdk',\n      ],\n      workResults: [\n        '- Refactored the existing mobile app code',\n        '- Updated the mobile app navigation',\n        '- Participated in meetings related to features & security',\n        '- Estimated new features',\n      ],\n      achievements: [\n        '- Was working as a key developer on the project',\n        '- Prepared a demo for the client in a first working week',\n      ],\n    },\n    {\n      id: 'UN2',\n      type: 'commercial',\n      iconType: 'medical',\n      title: 'Medical marketplace',\n      subTitle: 'The marketplace for purchasing medical drugs. Mobile app on the React Native framework.',\n      tags: ['mobile'],\n      team: [\n        ['PM', '1'],\n        ['DEV', '6'],\n        ['QA', '2'],\n      ],\n      dates: {\n        from: ['2018', 'October'],\n        to: ['2018', 'November'],\n      },\n      technologies: [\n        'react-native, react, redux, redux-saga, styled-components, react-navigation, react-fbsdk, react-native-google-login, react-native-twitter-signin, react-native-video, react-native-maps, push notifications, react-native-linkedIn-sdk, ios in app purchase',\n      ],\n      workResults: [\n        '- Created the mobile app architecture',\n        '- Reviwed the work of the other React Native developers',\n        '- Created iOS and Android dev & production builds',\n        '- Estimated new features',\n      ],\n      achievements: [\n        '- Produced the main part of the mobile app code',\n        '- Configured Apple AppStore & Testflight and Google Play Market',\n      ],\n    },\n    {\n      id: 'UN3',\n      type: 'commercial',\n      iconType: 'control-panel',\n      title: 'Web admin panel',\n      subTitle: 'Admin panel for Ukrainian government service.',\n      tags: ['web'],\n      team: [\n        ['PM', '1'],\n        ['DEV', '6'],\n        ['QA', '2'],\n      ],\n      dates: {\n        from: ['2019', 'April'],\n        to: ['2019', 'June'],\n      },\n      technologies: [\n        'create-react-app, yeoman, chrome dev tools, vs code, git, gitlab, swagger, postman, webpack, eslint, prettier',\n      ],\n      workResults: [\n        '- Created the admin panel architecture',\n        '- Participated in discussing new features',\n        '- Reviwed the work of the other React developers',\n      ],\n      achievements: [\n        '- Learned the Material UI framework',\n      ],\n    },\n    {\n      id: 'UN4',\n      type: 'commercial',\n      iconType: 'virtual-tours',\n      title: 'Virtual tours marketplace',\n      subTitle: 'The marketplace for creating, celling and purchasing virtual tours in the city (virtual guidance).',\n      tags: ['mobile', 'web'],\n      team: [\n        ['PM', '1'],\n        ['DEV', '6'],\n        ['QA', '2'],\n      ],\n      dates: {\n        from: ['2018', 'October'],\n        to: ['2019', 'July'],\n      },\n      technologies: [\n        'react native cli, android cli, android emulator, ios simulator, android studio, xcode, vs code,react native debugger, figma, babel, eslint, prettier, webpack, create-react-app, yarn, docker, git, gitlab',\n      ],\n      workResults: [\n        '- Created the mobile app architecture',\n        '- Reviwed the work of the other React Native developers',\n        '- Created iOS and Android dev & production builds',\n        '- Configured Apple AppStore & Testflight and Google Play Market',\n      ],\n      achievements: [\n        '- Produced the main part of the mobile app code',\n        '- Published the app to AppStore & Google Play Market',\n      ],\n    },\n    {\n      id: 'UN5',\n      type: 'commercial',\n      iconType: 'services',\n      title: 'Company internal services',\n      subTitle: 'The mobile app for directly access for all internal services in the company',\n      tags: ['mobile', 'web'],\n      team: [\n        ['DEV', '2'],\n        ['QA', '1'],\n      ],\n      dates: {\n        from: ['2019', 'July'],\n        to: ['2019', 'September'],\n      },\n      technologies: [\n        'react native cli, android cli, android emulator, ios simulator, android studio, xcode, vs code, react native debugger, figma, babel, eslint, prettier, lerna, webpack, create-react-app, yarn, yarn workspaces, git, github',\n      ],\n      workResults: [\n        '- Worked directly with the customer (via slack)',\n        '- Created all visible interface (both mobile and web)',\n        '- Created the project architecture',\n        '- Configured Firebase login/ analytics/ database services',\n        '- Provided iOS & Android builds via Expo',\n      ],\n      achievements: [\n        '- Configured the project as monorepository using Yarn workspaces & Lerna',\n        '- Published the app to AppStore & Google Play Market',\n      ],\n    },\n    {\n      id: 'UN6',\n      type: 'commercial',\n      iconType: 'banking',\n      title: 'Mobile banking app',\n      subTitle: 'The mobile banking app',\n      tags: ['mobile'],\n      team: [\n        ['DEV', '40 - 80'],\n        ['QA', '15 - 30'],\n      ],\n      dates: {\n        from: ['2019', 'November'],\n        to: ['2019', 'December'],\n      },\n      technologies: [\n        'react native cli, android cli, android emulator, ios simulator, android studio, xcode, vs code, react native debugger, figma, zeplin, azure, babel, eslint, prettier, husky, lerna, jest, enzyme, mockdate, postinstall, react-native-mock-render, events, git, bitbucket',\n      ],\n      workResults: [\n        '- Worked on bug fixing and optimizations;',\n        '- Covered new features with tests',\n        '- Reviewed Pull Request of other developers',\n        '- Participated in discussing new sprints',\n        '- Closely worked with outstaff QA team',\n      ],\n      achievements: [\n        '- Business trip to UAE',\n      ],\n    },\n    {\n      id: 'UN7',\n      type: 'commercial',\n      iconType: 'sport-fans',\n      title: 'Sport fans app',\n      subTitle: 'The mobile application for sport clubs fans',\n      tags: ['mobile'],\n      team: [\n        ['DEV', '10'],\n        ['QA', '3'],\n        ['PM', '1'],\n        ['BA', '1'],\n        ['UI/UX', '2'],\n      ],\n      dates: {\n        from: ['2019', 'September'],\n        to: ['2020', 'January'],\n      },\n      technologies: [\n        'react-native cli, android cli, babel, eslint, prettier, jest, vs code, android studio, xcode, android emulator, ios simulator, figma, jira, confluence, swagger, postman, git, bitbucket',\n      ],\n      workResults: [\n        '- Produced around 80% of the mobile app code',\n        '- Created the main project configuration',\n        '- Implemented the app native navigation',\n        '- Configured redux store and async-storage',\n        '- Created UI elements (components) of the interface',\n        '- Implemented chat module in the app using Socket.IO library',\n        '- Provided a new App build (android / iOS) for each work scope',\n        '- Reviewed Pull Request of other developers',\n        '- Participated in the project discussions',\n      ],\n      achievements: [\n        '- Created OpenAPI documentation (using Swagger) for existing and planned API endpoints',\n      ],\n    },\n  ],\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({ colors: { primary: { bg } } }) => {\n  return {\n    page: {\n      display: 'flex',\n      flex: 1,\n      position: 'relative',\n      backgroundColor: bg,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { memo } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport { store } from 'store';\nimport { Routes } from 'types';\nimport { Menu, TransitionScreenWrapper, AccessDenied, Footer } from 'components';\nimport {\n  Home,\n  About,\n  Projects,\n  Contacts,\n  CV,\n  Articles,\n} from 'screens';\n\nimport { useStyles } from './styles';\n\n\nconst routes = [\n  { path: Routes.ABOUT, Component: About },\n  { path: `${Routes.PROJECTS}/:projectId?`, Component: Projects },\n  { path: Routes.CONTACTS, Component: Contacts },\n  { path: Routes.CV, Component: CV },\n  { path: Routes.ARTICLES, Component: Articles },\n];\n\nconst AppContainerComp: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  if (process.env.NODE_ENV === 'production') {\n    return (\n      <>\n        <AccessDenied />\n        <Footer />\n      </>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path={Routes.HOME}>\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <div className={classes.page}>\n              {routes.map(({ path, Component }) => (\n                <Route\n                  key={path}\n                  path={path}\n                >\n                  {({ match }) => (\n                    <Transition\n                      in={match != null}\n                      timeout={600}\n                      unmountOnExit\n                    >\n                      {(state) => {\n                        return (\n                          <TransitionScreenWrapper transitionState={state}>\n                            <Component />\n                          </TransitionScreenWrapper>\n                        );\n                      }}\n                    </Transition>\n                  )}\n                </Route>\n              ))}\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport const AppContainer = memo(AppContainerComp, () => true);\n","import { TSizes } from 'types/sizes';\n\n\nexport const sizes: TSizes = {\n  content: {\n    offsetHorizontal: 100,\n    offsetTop: 40,\n    offsetBottom: 40,\n    maxWidth: 860,\n  },\n  contentSection: {\n    offsetTop: 30,\n    offsetBottom: 40,\n    maxWidth: 740,\n  },\n  page: {\n    offsetTop: 40,\n    offsetBottom: 0,\n    offsetTopCompact: 20,\n    header: {\n      offsetTop: 40,\n      offsetBottom: 30,\n      offsetTopCompact: 20,\n      offsetBottomCompact: 20,\n    },\n  },\n  buttons: {\n    mainCircleButtonSize: 134,\n  },\n  menu: {\n    width: 120,\n    buttonSize: 80,\n    buttonIconSize: 30,\n    buttonOffset: 15,\n  },\n};\n","import { AppTheme } from 'types/theme';\n\nimport { EColors } from './colors';\nimport { sizes } from './sizes';\n\n\nexport const theme: AppTheme = {\n  colors: {\n    primary: {\n      bg: EColors.ULTRA_DARK_BLUE,\n      bgContent: EColors.DARK_BLUE,\n      bgInfo: EColors.LIGHT_GREY,\n      circleBg: EColors.DARK_BLUE,\n      underline: EColors.DARK_GREY,\n      greenMedium: '#81AF65',\n      greyUltralight: 'rgba(255,255,255,0.6)',\n      greyUltraDark: 'rgba(255,255,255,0.1)',\n    },\n    typography: {\n      title: EColors.GREY,\n      subTitle: EColors.GREY,\n      text: EColors.GREY,\n    },\n    categoryLabels: {\n      bot: EColors.PURPLE,\n      web: EColors.BLUE,\n      mobile: EColors.GREEN_BLUE,\n      other: EColors.GREY,\n    },\n  },\n  gradients: {\n    bg: 'radial-gradient(66.25% 131.01% at 50% 50%, #1F2124 0%, #1F2124 60.94%, #7BA661 100%)',\n  },\n  sizes,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'react-jss';\n\nimport { AppContainer } from 'AppContainer';\nimport { theme } from 'theme/theme';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <AppContainer />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n","export { HomeContainer as Home } from './HomeContainer';\n","export { AboutContainer as About } from './AboutContainer';\n","export { ProjectsContainer as Projects } from './ProjectsContainer';\n","export { ContactsContainer as Contacts } from './ContactsContainer';\n","export { CVContainer as CV } from './CVContainer';\n","export { ArticlesContainer as Articles } from './ArticlesContainer';\n","import { createSelector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\nexport const selectCommercialProjects = createSelector<\n  TState,\n  TProjectsState,\n  TProjectData[]>(\n    selectProjects,\n    (projects) => projects.filter(({ type }) => type === 'commercial'),\n  );\n\nexport const selectPersonalProjects = createSelector<\n  TState,\n  TProjectsState,\n  TProjectData[]>(\n    selectProjects,\n    (projects) => projects.filter(({ type }) => type === 'personal'),\n  );\n","import { Reducer } from 'redux';\n\nimport { TProjectsState } from 'types/store';\nimport { TProjectsListData } from 'types/data';\n\nimport { ProjectsActions, TProjectsActionScheme } from './actions';\n\n\ntype TProjectsReducer = Reducer<TProjectsState, TProjectsActionScheme>;\n\nconst initState: TProjectsListData = [];\n\nexport const projectsReducer: TProjectsReducer = (\n  state = initState,\n  { type, payload },\n) => {\n  switch (type) {\n    case ProjectsActions.SET_PROJECTS:\n      return payload as TProjectsListData;\n    default:\n      return state;\n  }\n};\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport {\n  selectCommercialProjects,\n  selectPersonalProjects,\n} from './selectors';\n\n\ntype TData = {\n  commercial: TProjectData[];\n  personal: TProjectData[];\n}\n\nexport const useState = (): TData => ({\n  commercial: useSelector(selectCommercialProjects),\n  personal: useSelector(selectPersonalProjects),\n});\n","import React, { Suspense, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Fallback } from 'components';\nimport { useModule } from 'hooks';\n\n\nexport const HomeContainer: React.FC<{}> = () => {\n  const module = useModule();\n  const history = useHistory();\n  const Home = React.lazy(() => import(`./${module}`));\n\n  const handleNavigateAbout = useCallback(() => {\n    history.push('/about');\n  }, [history]);\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <Home\n        onNavigateAbout={handleNavigateAbout}\n      />\n    </Suspense>\n  );\n};\n","import React, { Suspense, memo } from 'react';\n\nimport { useModule } from 'hooks';\nimport { Fallback } from 'components';\n\n\nconst AboutContainerComp: React.FC<{}> = () => {\n  const module = useModule();\n  const AboutScreen = React.lazy(() => import(`./${module}`));\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <AboutScreen />\n    </Suspense>\n  );\n};\n\nexport const AboutContainer = memo(AboutContainerComp);\n","import React, { Suspense } from 'react';\n\nimport { Fallback } from 'components';\nimport { useModule } from 'hooks';\n\nimport { useState } from './redux';\n\n\nexport const ProjectsContainer: React.FC<{}> = () => {\n  const { commercial, personal } = useState();\n\n  const module = useModule();\n  const ProjectsScreen = React.lazy(() => import(`./${module}`));\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <ProjectsScreen\n        commercial={commercial}\n        personal={personal}\n      />\n    </Suspense>\n  );\n};\n","import React, { Suspense } from 'react';\n\nimport { useModule } from 'hooks';\nimport { Fallback } from 'components';\n\n\nexport const ContactsContainer: React.FC<{}> = () => {\n  const module = useModule();\n  const ContactsScreen = React.lazy(() => import(`./${module}`));\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <ContactsScreen />\n    </Suspense>\n  );\n};\n","import React, { Suspense } from 'react';\n\nimport { Fallback } from 'components';\nimport { useModule } from 'hooks';\n\n\nexport const CVContainer: React.FC<{}> = () => {\n  const module = useModule();\n  const CVScreen = React.lazy(() => import(`./${module}`));\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <CVScreen />\n    </Suspense>\n  );\n};\n","import React, { Suspense } from 'react';\n\nimport { Fallback } from 'components';\nimport { useModule } from 'hooks';\n\n\nexport const ArticlesContainer: React.FC<{}> = () => {\n  const module = useModule();\n  const ArticlesScreen = React.lazy(() => import(`./${module}`));\n\n  return (\n    <Suspense fallback={<Fallback />}>\n      <ArticlesScreen />\n    </Suspense>\n  );\n};\n","import { Action } from 'redux';\nimport { TProjectsListData } from 'types/data';\n\n\nexport enum ProjectsActions {\n  GET_PROJECTS = 'Projects/GET',\n  SET_PROJECTS = 'Projects/SET',\n}\n\nexport type TProjectsActionScheme = Action<ProjectsActions> & {\n  type: ProjectsActions;\n  payload?: TProjectsListData;\n}\n\nexport const getProjects = (): TProjectsActionScheme => ({\n  type: ProjectsActions.GET_PROJECTS,\n});\n\nexport const setProjects = (data: TProjectsListData): TProjectsActionScheme => {\n  return {\n    type: ProjectsActions.SET_PROJECTS,\n    payload: data,\n  };\n};\n","export enum EModules {\n  MOBILE = 'mobile',\n  TABLET = 'tablet',\n  LAPTOP = 'laptop',\n}\n","export enum Routes {\n  HOME = '/',\n  ABOUT = '/about',\n  PROJECTS = '/projects',\n  CV = '/cv',\n  CONTACTS = '/contacts',\n  ARTICLES = '/articles',\n}\n","type TClass = string | undefined;\n\nexport const combineClasses = (...classes: TClass[]): string => {\n  return classes\n    .filter((it) => it)\n    .join(' ');\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const CVIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 52 54\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M30.0177 24.6737C29.6646 24.4035 29.1535 24.4632 28.8761 24.8065L26.5587 27.6718L25.3673 26.3495C25.0715 26.0209 24.5577 25.988 24.22 26.2757C23.8822 26.5633 23.8482 27.0628 24.1441 27.3911L25.6511 29.0637C25.8887 29.3277 26.2241 29.4774 26.575 29.4774C26.5856 29.4774 26.5961 29.4773 26.6066 29.477C26.9703 29.4677 27.3117 29.2984 27.5431 29.0124L30.1543 25.7837C30.4318 25.4405 30.3707 24.9435 30.0177 24.6737Z\" fill={color} />\n      <path d=\"M46.933 24.5046H33.0595C32.6104 24.5046 32.2465 24.8585 32.2465 25.2951C32.2465 25.7318 32.6104 26.0856 33.0595 26.0856H46.933C47.3821 26.0856 47.7461 25.7318 47.7461 25.2951C47.7461 24.8585 47.3821 24.5046 46.933 24.5046Z\" fill={color} />\n      <path d=\"M46.933 27.8965H33.0595C32.6104 27.8965 32.2465 28.2503 32.2465 28.687C32.2465 29.1236 32.6104 29.4774 33.0595 29.4774H46.933C47.3821 29.4774 47.7461 29.1236 47.7461 28.687C47.7461 28.2503 47.3821 27.8965 46.933 27.8965Z\" fill={color} />\n      <path d=\"M30.0177 34.2152C29.6646 33.945 29.1535 34.0047 28.8761 34.348L26.5587 37.2133L25.3673 35.891C25.0715 35.5624 24.5577 35.5295 24.22 35.8172C23.8822 36.1048 23.8482 36.6043 24.1441 36.9326L25.6511 38.6052C25.8887 38.8692 26.2241 39.0189 26.575 39.0189C26.5856 39.0189 26.5961 39.0188 26.6066 39.0185C26.9703 39.0092 27.3117 38.8399 27.5431 38.5539L30.1543 35.3252C30.4318 34.9819 30.3707 34.4849 30.0177 34.2152Z\" fill={color} />\n      <path d=\"M46.933 34.0459H33.0595C32.6104 34.0459 32.2465 34.3997 32.2465 34.8364C32.2465 35.273 32.6104 35.6269 33.0595 35.6269H46.933C47.3821 35.6269 47.7461 35.273 47.7461 34.8364C47.7461 34.3997 47.3821 34.0459 46.933 34.0459Z\" fill={color} />\n      <path d=\"M47.7461 38.2282C47.7461 37.7916 47.3821 37.4377 46.933 37.4377H33.0595C32.6104 37.4377 32.2465 37.7916 32.2465 38.2282C32.2465 38.6649 32.6104 39.0187 33.0595 39.0187H46.933C47.3821 39.0187 47.7461 38.6649 47.7461 38.2282Z\" fill={color} />\n      <path d=\"M30.0177 43.7564C29.6646 43.4863 29.1535 43.5459 28.8761 43.8892L26.5587 46.7545L25.3673 45.4322C25.0715 45.1037 24.5577 45.0706 24.22 45.3584C23.8822 45.6461 23.8482 46.1455 24.1441 46.4739L25.6511 48.1465C25.8887 48.4105 26.2241 48.5602 26.575 48.5602C26.5856 48.5602 26.5961 48.5601 26.6066 48.5598C26.9703 48.5505 27.3117 48.3812 27.5431 48.0952L30.1543 44.8665C30.4318 44.5233 30.3707 44.0262 30.0177 43.7564Z\" fill={color} />\n      <path d=\"M38.5932 43.5874H33.0595C32.6104 43.5874 32.2465 43.9412 32.2465 44.3779C32.2465 44.8145 32.6104 45.1684 33.0595 45.1684H38.5932C39.0424 45.1684 39.4063 44.8145 39.4063 44.3779C39.4063 43.9412 39.0424 43.5874 38.5932 43.5874Z\" fill={color} />\n      <path d=\"M38.5932 46.979H33.0595C32.6104 46.979 32.2465 47.3328 32.2465 47.7695C32.2465 48.2061 32.6104 48.56 33.0595 48.56H38.5932C39.0424 48.56 39.4063 48.2061 39.4063 47.7695C39.4063 47.3328 39.0424 46.979 38.5932 46.979Z\" fill={color} />\n      <path d=\"M50.1028 0H45.1884C44.7392 0 44.3753 0.353815 44.3753 0.790471C44.3753 1.22713 44.7392 1.58094 45.1884 1.58094H50.1028C50.2523 1.58094 50.3739 1.69909 50.3739 1.84443V44.961H45.0634C43.6021 44.961 42.4132 46.1168 42.4132 47.5374V52.401H16.3275C16.6777 51.8695 16.8818 51.2386 16.8818 50.562V37.2931C17.3067 37.507 17.7897 37.6286 18.3023 37.6286C19.9633 37.6286 21.3147 36.3147 21.3147 34.6998V27.0524C21.3147 24.7795 20.5717 22.6219 19.166 20.8129C17.8066 19.0635 15.8743 17.7548 13.7248 17.1278C13.6289 17.0998 13.5619 17.0091 13.5619 16.9073V16.2993C16.2474 15.1508 18.1281 12.5408 18.1281 9.51031C18.1281 6.42368 16.1774 3.77265 13.412 2.65862V1.84443C13.412 1.69909 13.5335 1.58094 13.683 1.58094H41.4213C41.8704 1.58094 42.2343 1.22713 42.2343 0.790471C42.2343 0.353815 41.8704 0 41.4213 0H13.6829C12.6369 0 11.7857 0.827465 11.7857 1.84443V2.20373C11.3682 2.13459 10.9397 2.09664 10.5022 2.09664C6.29734 2.09664 2.8764 5.42252 2.8764 9.51052C2.8764 12.6564 4.9031 15.349 7.75295 16.424V16.9074C7.75295 17.0092 7.68595 17.0999 7.59001 17.1279C6.4567 17.4587 5.39354 17.9687 4.43022 18.6439C4.06597 18.8993 3.98358 19.3933 4.24615 19.7475C4.50882 20.1017 5.01693 20.1816 5.38129 19.9264C6.1975 19.3542 7.09794 18.9222 8.05736 18.6421C8.83573 18.4153 9.37918 17.7019 9.37918 16.9074V16.8433C9.74582 16.8962 10.1207 16.9244 10.5022 16.9244C10.9923 16.9244 11.471 16.8775 11.9357 16.7912V16.9074C11.9357 17.7019 12.4793 18.4153 13.2575 18.6421C15.0782 19.1733 16.7157 20.2827 17.8683 21.766C19.0591 23.2983 19.6885 25.1263 19.6885 27.0525V34.6999C19.6885 35.4431 19.0667 36.0478 18.3022 36.0478C17.5893 36.0478 16.9793 35.5292 16.8817 34.8804V26.056C16.8817 25.6194 16.5178 25.2656 16.0686 25.2656C15.6195 25.2656 15.2556 25.6194 15.2556 26.056V50.562C15.2556 51.576 14.407 52.401 13.364 52.401C12.321 52.401 11.4723 51.576 11.4723 50.562V36.3008C11.4723 35.8643 11.1084 35.5105 10.6594 35.5104C10.6593 35.5104 10.6594 35.5104 10.6593 35.5104C10.2103 35.5104 9.84631 35.8641 9.84621 36.3006L9.84252 50.562C9.84252 51.576 8.9939 52.401 7.9509 52.401C6.9079 52.401 6.05928 51.576 6.05928 50.562V25.9214C6.05928 25.4848 5.69535 25.131 5.24621 25.131C4.79708 25.131 4.43315 25.4848 4.43315 25.9214L4.42675 34.6293C4.42675 35.3848 3.7659 36.0477 3.01267 36.0477C2.24818 36.0477 1.62624 35.443 1.62624 34.6998V27.0524C1.62624 25.4006 2.10042 23.7916 2.9975 22.3993C3.23578 22.0293 3.12065 21.5415 2.74003 21.3097C2.3594 21.0784 1.85769 21.19 1.6193 21.56C0.560039 23.2042 0 25.1035 0 27.0524V34.6998C0 36.3147 1.35142 37.6286 3.01257 37.6286C3.52165 37.6286 4.00624 37.4972 4.43304 37.2681V50.5619C4.43304 52.4477 6.01115 53.9819 7.95079 53.9819C9.03791 53.9819 10.0116 53.4999 10.6574 52.7442C11.3032 53.4999 12.2767 53.9819 13.364 53.9819H42.1036C42.7161 53.9819 43.3417 54.1047 43.8459 53.7094C44.0827 53.5238 44.2949 53.2956 44.5154 53.0924C45.4419 52.2384 50.2622 47.795 51.7463 46.4276C51.9083 46.2784 52 46.071 52 45.854V1.84443C52 0.827465 51.149 0 50.1028 0V0ZM10.5022 15.3435C7.19399 15.3435 4.50253 12.7268 4.50253 9.51042C4.50253 6.29415 7.19399 3.67748 10.5022 3.67748C13.8104 3.67748 16.5018 6.29415 16.5018 9.51042C16.5018 12.7268 13.8104 15.3435 10.5022 15.3435V15.3435ZM44.0393 51.3351V47.5374C44.0393 46.9885 44.4987 46.542 45.0634 46.542H49.1679L44.0393 51.3351Z\" fill={color} />\n      <path d=\"M11.8904 12.5056C11.5328 12.2414 11.0229 12.309 10.751 12.6565C10.7341 12.6782 10.6959 12.7146 10.631 12.7146C10.5658 12.7146 10.5276 12.6778 10.5106 12.6559C10.2401 12.3073 9.73034 12.2382 9.37183 12.5011C9.01333 12.764 8.9421 13.2597 9.21258 13.6082C9.54659 14.0386 10.0769 14.2954 10.631 14.2954C11.1909 14.2954 11.7065 14.0468 12.0456 13.6132C12.3173 13.2658 12.2479 12.7698 11.8904 12.5056V12.5056Z\" fill={color} />\n      <path d=\"M28.5164 7C29.5007 7 30.3168 7.15263 30.9647 7.45788C31.625 7.76313 31.9552 8.15385 31.9552 8.63004C31.9552 8.83761 31.8867 9.02686 31.7496 9.1978C31.6126 9.35653 31.4381 9.4359 31.2263 9.4359C31.0643 9.4359 30.9335 9.41148 30.8339 9.36264C30.7466 9.3138 30.622 9.23443 30.4601 9.12454C30.3853 9.05128 30.267 8.96581 30.105 8.86813C29.9555 8.79487 29.7437 8.73382 29.4696 8.68498C29.1955 8.63614 28.9463 8.61172 28.722 8.61172C28.0741 8.61172 27.501 8.75824 27.0026 9.05128C26.5043 9.34432 26.118 9.75336 25.8439 10.2784C25.5698 10.7912 25.4328 11.3651 25.4328 12C25.4328 12.6471 25.5636 13.2271 25.8253 13.7399C26.0994 14.2527 26.4794 14.6557 26.9653 14.9487C27.4512 15.2418 28.0056 15.3883 28.6286 15.3883C29.2765 15.3883 29.7997 15.2906 30.1984 15.0952C30.2856 15.0464 30.404 14.967 30.5535 14.8571C30.6781 14.7595 30.784 14.6862 30.8712 14.6374C30.9709 14.5885 31.0893 14.5641 31.2263 14.5641C31.4755 14.5641 31.6686 14.6435 31.8057 14.8022C31.9552 14.9487 32.0299 15.1441 32.0299 15.3883C32.0299 15.6447 31.8617 15.9011 31.5253 16.1575C31.2014 16.4017 30.7591 16.6032 30.1984 16.7619C29.6502 16.9206 29.0584 17 28.423 17C27.4761 17 26.6413 16.7863 25.9187 16.359C25.1961 15.9194 24.6354 15.3211 24.2367 14.5641C23.8505 13.7949 23.6573 12.9402 23.6573 12C23.6573 11.0598 23.8629 10.2112 24.2741 9.45421C24.6852 8.68498 25.2584 8.08669 25.9935 7.65934C26.7285 7.21978 27.5695 7 28.5164 7Z\" fill={color} />\n      <path d=\"M41.3308 7.1282C41.5676 7.1282 41.7669 7.20757 41.9289 7.3663C42.0908 7.51282 42.1718 7.68987 42.1718 7.89744C42.1718 8.00733 42.1282 8.15995 42.041 8.35531L38.4901 16.2674C38.4154 16.4261 38.3095 16.5543 38.1724 16.652C38.0354 16.7497 37.8859 16.8046 37.7239 16.8169C37.5245 16.8413 37.3377 16.8046 37.1632 16.707C37.0013 16.6093 36.8767 16.4628 36.7895 16.2674L33.2386 8.35531C33.1763 8.17216 33.1451 8.01954 33.1451 7.89744C33.1451 7.70208 33.2261 7.52503 33.3881 7.3663C33.5501 7.20757 33.7619 7.1282 34.0235 7.1282C34.2104 7.1282 34.3786 7.17704 34.5281 7.27473C34.6776 7.3602 34.796 7.49451 34.8832 7.67766L37.7052 14.1062L40.5272 7.67766C40.7016 7.31135 40.9695 7.1282 41.3308 7.1282Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const ProjectsIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 54 54\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M43.1015 11.5097C43.3655 11.1624 43.2983 10.6667 42.951 10.4024C42.6036 10.1383 42.1079 10.2056 41.8437 10.5529C41.8273 10.5747 41.7901 10.6111 41.7271 10.6111C41.6639 10.6111 41.6268 10.5745 41.6104 10.5527C41.3477 10.2043 40.8521 10.1349 40.5039 10.3976C40.1555 10.6603 40.086 11.1558 40.3488 11.5041C40.6733 11.9345 41.1886 12.1913 41.7273 12.1913C42.271 12.1913 42.7719 11.9429 43.1015 11.5097V11.5097Z\" fill={color} />\n        <path d=\"M52.3355 48.4166H47.2622C47.6023 47.8855 47.8006 47.2551 47.8006 46.5788V42.9816C47.8006 42.5452 47.4469 42.1915 47.0105 42.1915C46.5741 42.1915 46.2204 42.5452 46.2204 42.9816V46.5788C46.2204 47.5922 45.3961 48.4166 44.3827 48.4166C43.3693 48.4166 42.5449 47.5922 42.5449 46.5788V34.1825C42.5449 33.7462 42.1912 33.3925 41.7549 33.3924C41.7549 33.3924 41.7549 33.3924 41.7548 33.3924C41.3186 33.3924 40.9648 33.746 40.9647 34.1823L40.9611 46.5787C40.9611 47.5921 40.1368 48.4165 39.1234 48.4165C38.1101 48.4165 37.2857 47.5921 37.2857 46.5787V23.8098C37.2857 23.3734 36.932 23.0197 36.4956 23.0197C36.0592 23.0197 35.7055 23.3734 35.7055 23.8098V32.6047C35.7 33.336 35.0834 33.9294 34.3256 33.9294C34.2138 33.9294 34.1056 33.9144 34.0017 33.8887V20.8242C34.2175 20.4196 34.4658 20.0294 34.7471 19.657C35.8671 18.1748 37.458 17.0661 39.2271 16.5352C39.9833 16.3084 40.5114 15.5955 40.5114 14.8015V14.7377C40.8676 14.7905 41.2317 14.8186 41.6023 14.8186C42.0784 14.8186 42.5435 14.7717 42.9949 14.6855V14.8015C42.9949 15.5955 43.5231 16.3085 44.2793 16.5352C46.0484 17.0661 47.6394 18.1748 48.7592 19.657C49.9162 21.1883 50.5278 23.0152 50.5278 24.9401V32.5825C50.5278 33.3252 49.9235 33.9294 49.1809 33.9294C48.4461 33.9294 47.8628 33.4398 47.8008 32.7955V23.9443C47.8008 23.5079 47.4471 23.1542 47.0107 23.1542C46.5743 23.1542 46.2206 23.5079 46.2206 23.9443V39.2944C46.2206 39.7308 46.5743 40.0845 47.0107 40.0845C47.4471 40.0845 47.8008 39.7308 47.8008 39.2944V35.1949C48.211 35.3961 48.6793 35.5096 49.1809 35.5096C50.7947 35.5096 52.1079 34.1964 52.1079 32.5825V24.9401C52.1079 22.6685 51.386 20.5122 50.0202 18.7043C48.6994 16.9561 46.8218 15.6483 44.7335 15.0216C44.6402 14.9936 44.5752 14.9031 44.5752 14.8014V14.1939C47.1844 13.0461 49.0117 10.4377 49.0117 7.40914C49.0113 3.32378 45.6876 0 41.6021 0C37.5166 0 34.1929 3.32378 34.1929 7.40924C34.1929 10.5532 36.162 13.2442 38.931 14.3184V14.8014C38.931 14.9031 38.866 14.9937 38.7728 15.0216C36.9429 15.5707 35.275 16.643 34.0015 18.0761V15.9287C34.0015 15.0593 33.2941 14.3519 32.4246 14.3519H25.9349C25.4985 14.3519 25.1448 14.7056 25.1448 15.142C25.1448 15.5784 25.4985 15.9321 25.9349 15.9321L32.4213 15.9287V48.4166H25.7798V23.7356C25.7798 22.8661 25.0725 22.1587 24.2029 22.1587H19.8868L19.8862 15.9321H22.2125C22.6489 15.9321 23.0026 15.5784 23.0026 15.142C23.0026 14.7056 22.6489 14.3519 22.2125 14.3519H19.8862C19.0167 14.3519 18.3094 15.0593 18.3094 15.9287V22.1587H11.6646C10.795 22.1587 10.0877 22.8661 10.0877 23.7356V30.6556H3.44589C2.57637 30.6556 1.86907 31.363 1.86907 32.2324V48.4166H1.66439C0.803321 48.4166 0.102783 49.1171 0.102783 49.9782V52.4384C0.102783 53.2995 0.803321 54.0001 1.66439 54.0001H52.3356C53.1967 54.0001 53.8973 53.2995 53.8973 52.4384V49.9782C53.8972 49.1171 53.1966 48.4166 52.3355 48.4166V48.4166ZM35.7731 7.40924C35.7731 4.19509 38.388 1.5802 41.6021 1.5802C44.8163 1.5802 47.4311 4.1952 47.4311 7.40924C47.4311 10.6235 44.8161 13.2384 41.6021 13.2384C38.388 13.2384 35.7731 10.6235 35.7731 7.40924ZM34.0015 35.4905C34.1079 35.5023 34.2159 35.5096 34.3254 35.5096C34.8235 35.5096 35.2929 35.3874 35.7053 35.1725V46.5787C35.7053 47.255 35.9035 47.8854 36.2437 48.4165H34.0014V35.4905H34.0015ZM24.1996 23.7356V48.4166H17.561V32.2324C17.561 31.363 16.8537 30.6556 15.9842 30.6556H11.6655L11.6646 23.7389L24.1996 23.7356ZM15.9808 32.2324V48.4166H3.44906L3.44589 32.2358L15.9808 32.2324ZM52.317 52.4198H1.68287V49.9968H52.317V52.4198Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"54\" height=\"54\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const AboutIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 54 54\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M23.0781 10.5364C22.7294 10.2732 22.2333 10.3426 21.9702 10.6914C21.7827 10.9397 21.4973 11.0822 21.1869 11.0822C20.8779 11.0822 20.5934 10.9408 20.4058 10.6943C20.1413 10.3466 19.6449 10.2792 19.2972 10.5437C18.9496 10.8083 18.8821 11.3045 19.1466 11.6523C19.6359 12.2955 20.3796 12.6644 21.1869 12.6644C21.9981 12.6644 22.744 12.2927 23.2332 11.6444C23.4962 11.2956 23.4268 10.7996 23.0781 10.5364V10.5364Z\" fill={color} />\n        <path d=\"M27.2079 43.3127C26.771 43.3127 26.4168 43.6668 26.4168 44.1038V50.0281C26.4168 51.3028 25.4116 52.3743 24.1759 52.4165C23.4778 52.4412 22.8141 52.1545 22.3528 51.6321C22.0793 51.3223 21.8807 50.6936 21.8807 50.1366V36.0176C21.8807 35.5807 21.5265 35.2266 21.0896 35.2266C20.6527 35.2266 20.2985 35.5807 20.2985 36.0176V50.1366C20.2985 51.3556 19.3768 52.3551 18.1999 52.412C18.162 52.4139 18.1238 52.4148 18.0855 52.4148C16.8046 52.4148 15.7626 51.3726 15.7626 50.0918V24.0697C15.7626 23.2054 15.3376 22.3983 14.6255 21.9093L10.3848 18.9089C10.0282 18.6564 9.53448 18.7411 9.28207 19.0977C9.02976 19.4543 9.11425 19.9481 9.47098 20.2004L13.7165 23.2043C13.7202 23.2068 13.7238 23.2095 13.7275 23.2119C14.0111 23.4055 14.1804 23.7262 14.1804 24.0697V50.0918C14.1804 52.2451 15.9322 53.9969 18.0855 53.9969C18.1497 53.9969 18.2135 53.9954 18.2767 53.9923C19.407 53.9376 20.4002 53.3838 21.0562 52.5451C21.0916 52.5911 21.1285 52.6358 21.1668 52.6792C21.9121 53.5232 22.9727 53.9999 24.0944 53.9999C24.1394 53.9999 24.1847 53.9992 24.2299 53.9976C26.3081 53.9265 27.9988 52.1456 27.9988 50.0279V44.1036C27.999 43.6668 27.6448 43.3127 27.2079 43.3127V43.3127Z\" fill={color} />\n        <path d=\"M45.0207 32.795C45.38 34.3378 46.7656 35.4911 48.4162 35.4911C50.339 35.4911 51.9035 33.9267 51.9035 32.0039C51.9035 30.081 50.3391 28.5166 48.4162 28.5166C46.7656 28.5166 45.38 29.6699 45.0207 31.2128H38.9695V21.5284H45.0207C45.38 23.0713 46.7656 24.2246 48.4162 24.2246C50.339 24.2246 51.9035 22.6602 51.9035 20.7374C51.9035 18.8145 50.3391 17.2501 48.4162 17.2501C46.7656 17.2501 45.38 18.4034 45.0207 19.9463H38.1784C37.7415 19.9463 37.3873 20.3004 37.3873 20.7374V31.2128H30.8618C30.5418 29.8391 29.4086 28.7743 27.9988 28.5573V24.0696C27.9988 23.7261 28.1681 23.4054 28.4517 23.2118C28.4554 23.2094 28.4591 23.2067 28.4627 23.2042L38.6518 15.9947C39.4275 15.4882 39.9393 14.672 40.0569 13.7523C40.1753 12.8265 39.8808 11.9017 39.2488 11.2148C38.2324 10.1101 36.5646 9.87567 35.2831 10.6572C35.2669 10.6671 35.2511 10.6774 35.2357 10.6885L29.3929 14.854L26.8463 16.3698C26.454 16.6031 25.9711 16.6313 25.5545 16.4445C25.0285 16.2086 24.6278 15.7792 24.4195 15.263C27.2111 14.0206 29.1634 11.2222 29.1634 7.97462C29.1636 3.57742 25.5861 0 21.1888 0C16.7915 0 13.2141 3.57742 13.2141 7.97473C13.2141 11.2119 15.1539 14.0026 17.9313 15.251C17.5181 16.1679 16.3204 16.9577 15.3328 16.3699C15.3243 16.3648 12.7861 14.854 12.7861 14.854L6.94333 10.6886C6.92793 10.6776 6.91211 10.6672 6.89597 10.6573C5.6143 9.87588 3.94657 10.1103 2.93029 11.2149C2.29826 11.9018 2.00376 12.8265 2.12211 13.7524C2.23972 14.6721 2.7515 15.4884 3.5273 15.9948L6.46973 18.0768C6.82625 18.3293 7.3201 18.2446 7.57251 17.8879C7.82493 17.5313 7.74033 17.0376 7.3836 16.7853L4.4283 14.6942C4.41901 14.6875 4.40952 14.6812 4.39992 14.675C4.00881 14.4228 3.75049 14.0134 3.69153 13.5517C3.63256 13.09 3.77939 12.6288 4.09456 12.2863C4.59559 11.7417 5.41421 11.6212 6.05035 11.9951L11.8942 16.1614C11.9119 16.1739 11.9302 16.1857 11.9488 16.1969C11.9488 16.1969 14.5191 17.7269 14.5235 17.7294C16.3465 18.8146 18.7064 17.5782 19.4384 15.7537C20.002 15.8805 20.5873 15.9496 21.1888 15.9496C21.782 15.9496 22.3595 15.8825 22.916 15.759C23.2629 16.69 23.9695 17.4678 24.9074 17.8883C25.7937 18.2856 26.8212 18.2263 27.6557 17.7293L30.2303 16.1968C30.249 16.1857 30.2672 16.1738 30.285 16.1613L36.1288 11.9949C36.7648 11.6212 37.5835 11.7417 38.0846 12.2862C38.3998 12.6287 38.5466 13.0899 38.4876 13.5516C38.4287 14.0133 38.1703 14.4228 37.7792 14.6748C37.7696 14.6811 37.7601 14.6874 37.7509 14.694L27.5538 21.9091C26.8416 22.3981 26.4166 23.2051 26.4166 24.0695V28.6782C25.0052 29.1247 23.9791 30.4465 23.9791 32.0037C23.9791 33.5608 25.0052 34.8826 26.4166 35.3291V40.4644C26.4166 40.9014 26.7708 41.2555 27.2077 41.2555C27.6446 41.2555 27.9988 40.9014 27.9988 40.4644V35.4504C29.4087 35.2334 30.5418 34.1686 30.8618 32.795H37.3873V43.2704C37.3873 43.7074 37.7415 44.0615 38.1784 44.0615H45.0207C45.38 45.6043 46.7656 46.7576 48.4162 46.7576C50.339 46.7576 51.9035 45.1933 51.9035 43.2704C51.9035 41.3475 50.3391 39.7831 48.4162 39.7831C46.7656 39.7831 45.38 40.9364 45.0207 42.4793H38.9695V32.795H45.0207ZM48.4162 30.0988C49.4666 30.0988 50.3213 30.9534 50.3213 32.0039C50.3213 33.0543 49.4667 33.9089 48.4162 33.9089C47.3658 33.9089 46.5112 33.0543 46.5112 32.0039C46.5112 30.9534 47.3659 30.0988 48.4162 30.0988ZM48.4162 18.8323C49.4666 18.8323 50.3213 19.6869 50.3213 20.7374C50.3213 21.7878 49.4667 22.6424 48.4162 22.6424C47.3658 22.6424 46.5112 21.7878 46.5112 20.7374C46.5112 19.6869 47.3659 18.8323 48.4162 18.8323ZM21.1888 14.3674C17.6639 14.3674 14.7962 11.4996 14.7962 7.97483C14.7962 4.45005 17.6639 1.58218 21.1888 1.58218C24.7137 1.58218 27.5813 4.44994 27.5813 7.97473C27.5813 11.4995 24.7137 14.3674 21.1888 14.3674V14.3674ZM27.4664 33.9089C26.416 33.9089 25.5613 33.0543 25.5613 32.0039C25.5613 30.9534 26.4159 30.0988 27.4664 30.0988C28.5168 30.0988 29.3714 30.9534 29.3714 32.0039C29.3714 33.0543 28.5168 33.9089 27.4664 33.9089ZM48.4162 41.3654C49.4666 41.3654 50.3213 42.22 50.3213 43.2705C50.3213 44.3209 49.4667 45.1755 48.4162 45.1755C47.3658 45.1755 46.5112 44.3209 46.5112 43.2705C46.5112 42.22 47.3659 41.3654 48.4162 41.3654Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width={width} height={height} fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const ContactsIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 54 54\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M51.4777 15.4324H36.6032C36.7844 14.685 36.8813 13.9051 36.8813 13.1027C36.8813 7.654 32.4484 3.22119 26.9997 3.22119C25.4388 3.22119 23.9452 3.57491 22.5602 4.27242C22.1701 4.46889 22.013 4.94452 22.2096 5.33462C22.4062 5.72471 22.8817 5.88174 23.2718 5.68527C24.434 5.09997 25.6882 4.8032 26.9997 4.8032C31.5762 4.8032 35.2994 8.52637 35.2994 13.1028C35.2994 17.6793 31.5761 21.4024 26.9997 21.4024C22.4234 21.4024 18.7002 17.6793 18.7002 13.1028C18.7002 11.1442 19.3952 9.24308 20.6571 7.74966C20.9391 7.41598 20.8972 6.91694 20.5635 6.63505C20.2298 6.35294 19.7308 6.39502 19.4489 6.7287C17.946 8.50728 17.1183 10.771 17.1183 13.1029C17.1183 13.9053 17.2151 14.6853 17.3964 15.4327H2.52229C1.13148 15.4324 0 16.5639 0 17.9547V48.2592C0 49.6084 1.06504 50.7136 2.39859 50.7783C2.41209 50.779 51.588 50.779 51.6015 50.7783C52.9351 50.7136 54.0001 49.6084 54.0001 48.2592V17.9547C54 16.5639 52.8685 15.4324 51.4777 15.4324ZM17.9264 17.0143C19.4447 20.5229 22.94 22.9842 26.9998 22.9842C31.0597 22.9842 34.555 20.5229 36.0734 17.0143H49.3767L28.1623 34.6945C27.4515 35.1379 26.5485 35.1379 25.8377 34.6945L4.62338 17.0143H17.9264ZM2.2154 49.1473C1.84735 49.0197 1.5819 48.6703 1.5819 48.2593V17.9547C1.5819 17.5438 1.84735 17.1945 2.2154 17.0668L21.462 33.107L2.2154 49.1473ZM52.4181 48.2593C52.4181 48.6703 52.1528 49.0195 51.7847 49.1472L38.6004 38.1524C38.2649 37.8725 37.7662 37.9178 37.4864 38.2533C37.2066 38.5888 37.2517 39.0875 37.5872 39.3673L49.3778 49.1998H4.62338L22.6975 34.1368L24.8634 35.9418C24.8873 35.9617 24.9121 35.9801 24.9382 35.997C25.5644 36.4049 26.2822 36.6089 27.0001 36.6089C27.7179 36.6089 28.4356 36.4049 29.0619 35.997C29.088 35.98 29.1128 35.9617 29.1367 35.9418L31.3026 34.1368L34.7526 37.012C35.0883 37.2918 35.5869 37.2466 35.8666 36.9109C36.1462 36.5753 36.101 36.0765 35.7654 35.7969L32.538 33.1073L51.7846 17.0671C52.1526 17.1947 52.4181 17.5441 52.4181 17.9551V48.2593Z\" fill={color} />\n        <path d=\"M23.8183 17.1021C24.3619 17.6972 25.1359 18.0395 25.942 18.0415H25.9488C26.7523 18.0415 27.5251 17.7031 28.07 17.1124L32.3863 12.4337C32.8471 11.9342 33.086 11.2851 33.0585 10.606C33.0311 9.92698 32.741 9.29918 32.2415 8.83842C31.2103 7.88706 29.5975 7.95203 28.6461 8.98322L25.9656 11.8889L25.3608 11.2332C24.8992 10.7328 24.2703 10.4422 23.5902 10.4147C22.9102 10.3883 22.2598 10.6264 21.7595 11.0881C20.7315 12.0364 20.6627 13.6478 21.606 14.6804L23.8183 17.1021ZM22.832 12.2507C23.012 12.0846 23.243 11.9945 23.4865 11.9945C23.4998 11.9945 23.5131 11.9947 23.5264 11.9953C23.7843 12.0057 24.0229 12.1159 24.198 12.3057L25.1426 13.3297C25.3539 13.5587 25.6538 13.6901 25.9655 13.6901H25.9656C26.2772 13.6901 26.5772 13.5588 26.7885 13.3298L29.8089 10.0557C30.1686 9.66565 30.7789 9.64118 31.1689 10.0009H31.169C31.3579 10.1752 31.4677 10.4126 31.478 10.6695C31.4884 10.9264 31.3981 11.1719 31.2237 11.3609L26.9075 16.0397C26.6577 16.3105 26.3174 16.4594 25.9492 16.4594C25.9481 16.4594 25.947 16.4594 25.9459 16.4594C25.5763 16.4586 25.2356 16.3078 24.9863 16.0349L22.7738 13.6131C22.416 13.2217 22.4422 12.6104 22.832 12.2507V12.2507Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width={width} height={height} fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const ArticlesIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M4.29004 9.1338C4.29004 9.3765 4.48674 9.57326 4.7295 9.57326H17.9741C18.2169 9.57326 18.4136 9.3765 18.4136 9.1338C18.4136 8.8911 18.2169 8.69434 17.9741 8.69434H4.7295C4.4868 8.69434 4.29004 8.8911 4.29004 9.1338V9.1338Z\" fill={color} />\n        <path d=\"M4.7295 11.8106H17.9741C18.2169 11.8106 18.4136 11.6138 18.4136 11.3711C18.4136 11.1284 18.2169 10.9316 17.9741 10.9316H4.7295C4.48674 10.9316 4.29004 11.1284 4.29004 11.3711C4.29004 11.6138 4.4868 11.8106 4.7295 11.8106V11.8106Z\" fill={color} />\n        <path d=\"M14.1096 7.33547C14.3523 7.33547 14.549 7.13871 14.549 6.89601C14.549 6.65331 14.3523 6.45654 14.1096 6.45654H8.59401C8.35125 6.45654 8.15454 6.65331 8.15454 6.89601C8.15454 7.13871 8.35125 7.33547 8.59401 7.33547H14.1096Z\" fill={color} />\n        <path d=\"M4.7295 14.0484H17.9741C18.2169 14.0484 18.4136 13.8516 18.4136 13.6089C18.4136 13.3662 18.2169 13.1694 17.9741 13.1694H4.7295C4.48674 13.1694 4.29004 13.3662 4.29004 13.6089C4.29004 13.8516 4.4868 14.0484 4.7295 14.0484V14.0484Z\" fill={color} />\n        <path d=\"M4.7295 16.2862H17.9741C18.2169 16.2862 18.4136 16.0894 18.4136 15.8467C18.4136 15.604 18.2169 15.4072 17.9741 15.4072H4.7295C4.48674 15.4072 4.29004 15.604 4.29004 15.8467C4.29004 16.0894 4.4868 16.2862 4.7295 16.2862V16.2862Z\" fill={color} />\n        <path d=\"M4.7295 18.524H17.9741C18.2169 18.524 18.4136 18.3272 18.4136 18.0845C18.4136 17.8418 18.2169 17.645 17.9741 17.645H4.7295C4.48674 17.645 4.29004 17.8418 4.29004 18.0845C4.29004 18.3272 4.4868 18.524 4.7295 18.524V18.524Z\" fill={color} />\n        <path d=\"M4.7295 20.7618H17.9741C18.2169 20.7618 18.4136 20.565 18.4136 20.3223C18.4136 20.0796 18.2169 19.8828 17.9741 19.8828H4.7295C4.48674 19.8828 4.29004 20.0796 4.29004 20.3223C4.29004 20.565 4.4868 20.7618 4.7295 20.7618V20.7618Z\" fill={color} />\n        <path d=\"M4.7295 22.9991H17.9741C18.2169 22.9991 18.4136 22.8023 18.4136 22.5596C18.4136 22.3169 18.2169 22.1201 17.9741 22.1201H4.7295C4.48674 22.1201 4.29004 22.3169 4.29004 22.5596C4.29004 22.8023 4.4868 22.9991 4.7295 22.9991V22.9991Z\" fill={color} />\n        <path d=\"M4.7295 25.2369H17.9741C18.2169 25.2369 18.4136 25.0401 18.4136 24.7974C18.4136 24.5547 18.2169 24.3579 17.9741 24.3579H4.7295C4.48674 24.3579 4.29004 24.5547 4.29004 24.7974C4.29004 25.0401 4.4868 25.2369 4.7295 25.2369V25.2369Z\" fill={color} />\n        <path d=\"M0.0188575 28.6755C0.0188575 29.4058 0.613014 30 1.34335 30H10.3265C10.5692 30 10.7659 29.8032 10.7659 29.5605C10.7659 29.3178 10.5692 29.1211 10.3265 29.1211H1.34329C1.09766 29.1211 0.897729 28.9212 0.897729 28.6755V6.73466H5.42897C6.1593 6.73466 6.75346 6.1405 6.75346 5.41017V0.87893H21.3603C21.606 0.87893 21.8059 1.0788 21.8059 1.32449V28.6756C21.8059 28.9213 21.606 29.1211 21.3603 29.1211H12.3773C12.1345 29.1211 11.9378 29.3179 11.9378 29.5606C11.9378 29.8033 12.1345 30.0001 12.3773 30.0001H21.3604C22.0907 30.0001 22.6849 29.4059 22.6849 28.6756V1.32449C22.6848 0.594157 22.0907 0 21.3603 0H6.31399C6.19317 0 6.08219 0.0497474 6.0032 0.128734L0.147474 5.98446C0.0632728 6.06872 0.0187988 6.18216 0.0187988 6.29519V28.6755H0.0188575ZM5.42902 5.85573H1.51925C2.15144 5.22354 5.24375 2.13117 5.87453 1.50039V5.41017C5.87453 5.65586 5.67466 5.85573 5.42902 5.85573V5.85573Z\" fill={color} />\n        <path d=\"M29.5415 15.4397C29.7842 15.4397 29.9809 15.2429 29.9809 15.0002V6.89619C29.9809 6.85247 29.974 6.80577 29.9595 6.76083C29.9593 6.76036 29.9592 6.75984 29.9591 6.75937C29.1377 4.25277 29.5729 5.5809 28.6079 2.63589C28.4895 2.27483 28.1675 2.0415 27.7876 2.0415C27.4076 2.0415 27.0857 2.27483 26.9673 2.63589C26.0021 5.5816 26.4375 4.25272 25.6161 6.75937C25.6159 6.75984 25.6159 6.76036 25.6157 6.76083C25.6013 6.80542 25.5942 6.85218 25.5942 6.89619V27.8069C25.5942 29.0163 26.5782 30.0003 27.7876 30.0003C28.997 30.0003 29.9809 29.0163 29.9809 27.8069C29.9809 27.3883 29.9809 17.6561 29.9809 17.0511C29.9809 16.8084 29.7842 16.6116 29.5415 16.6116C29.2987 16.6116 29.102 16.8084 29.102 17.0511V24.3582H28.227V7.33565H29.102V15.0002C29.102 15.2429 29.2987 15.4397 29.5415 15.4397ZM27.7876 2.95518L28.2017 4.21908H27.3734L27.7876 2.95518ZM29.102 27.8069C29.102 28.5317 28.5124 29.1213 27.7876 29.1213C27.0628 29.1213 26.4732 28.5317 26.4732 27.8069V27.0515H29.1019V27.8069H29.102ZM29.102 25.2371V26.1725H26.4732V25.2371H29.102ZM27.3481 24.3582H26.4732V7.33565H27.3481V24.3582ZM26.6402 6.45672L27.0854 5.09801H28.4898L28.9351 6.45672C28.1046 6.45672 27.4706 6.45672 26.6402 6.45672V6.45672Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"30\" height=\"30\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const LogoIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M39.4007 9.43417C35.7821 8.66096 32.142 8.06557 27.4074 9.25503C26.2282 9.55128 24.9854 9.82081 23.8983 9.78745C23.2909 9.76886 22.6854 9.62745 22.0999 9.4905L21.9958 9.46613C18.1964 8.58057 13.9308 7.93323 8.49309 9.1812C8.10645 9.26987 7.85371 9.64191 7.91356 10.0341L8.22606 12.0794C8.28161 12.4431 8.59036 12.7143 8.9581 12.7225C8.99521 12.7233 9.0256 12.727 9.04896 12.7315C9.15638 15.3099 9.67161 17.0727 10.6691 18.2769C11.7361 19.5647 13.3541 20.192 15.6156 20.1943C15.6184 20.1943 15.6211 20.1943 15.6241 20.1943C18.4049 20.1943 20.2953 18.7162 21.3919 17.4755C22.6215 16.0841 23.3583 14.4228 23.5431 13.3936C23.5915 13.1243 23.6586 13.0576 23.6589 13.0573C23.6699 13.0501 23.7237 13.0261 23.9515 13.02C24.1861 13.0137 24.1961 13.0133 24.3304 13.3969C24.3536 13.4628 24.3759 13.5259 24.3991 13.5847C25.313 15.8944 26.1152 17.5378 27.2897 18.5921C28.5317 19.7072 30.0567 20.0464 31.9645 20.2127C32.3083 20.2427 32.6374 20.2578 32.9521 20.2578C34.8464 20.2578 36.2167 19.7129 37.1235 18.6041C37.1466 18.5758 37.1675 18.5464 37.1897 18.5177C37.2303 19.01 37.2511 19.5046 37.2511 19.9999C37.2511 29.8523 29.2356 37.8678 19.3834 37.8678C9.53115 37.8678 1.5154 29.8522 1.5154 19.9999C1.5154 10.1477 9.53091 2.1321 19.3832 2.1321C23.3308 2.1321 27.0723 3.39336 30.2034 5.77962C30.5362 6.03337 31.0117 5.96907 31.2652 5.63634C31.5189 5.30352 31.4548 4.82813 31.1219 4.57446C27.7248 1.98522 23.6655 0.616699 19.3832 0.616699C8.6952 0.616699 0 9.3119 0 19.9999C0 30.688 8.6952 39.3832 19.3832 39.3832C30.0711 39.3832 38.7664 30.688 38.7664 19.9999C38.7664 18.5866 38.6119 17.1781 38.3104 15.8094C38.3851 15.4583 38.4469 15.1097 38.5061 14.7728C38.6071 14.1993 38.7023 13.6576 38.845 13.203C38.8835 13.0804 38.9111 13.0159 38.9276 12.9834C38.9448 12.9811 38.9696 12.9787 39.0033 12.978C39.379 12.9697 39.6918 12.6874 39.7384 12.3146L39.9941 10.2693C40.043 9.87894 39.7852 9.51636 39.4007 9.43417ZM38.301 11.5967C37.6772 11.8631 37.4907 12.4575 37.3991 12.7493C37.2268 13.2979 37.1233 13.8867 37.0136 14.5103C36.9476 14.8851 36.8829 15.252 36.806 15.6035C36.7988 15.629 36.7929 15.6549 36.7884 15.6812C36.3591 17.5809 35.5334 19.0033 32.0958 18.7031C28.5352 18.3927 27.5949 17.5439 25.808 13.0272C25.7918 12.9863 25.7764 12.9421 25.7604 12.8961C25.6135 12.4767 25.273 11.5043 23.9817 11.5043C23.9583 11.5043 23.9343 11.5046 23.9103 11.5053C23.4794 11.5169 22.3349 11.5477 22.0514 13.126C21.7957 14.5501 19.7175 18.6792 15.6237 18.6792C15.6216 18.6792 15.6191 18.6792 15.6171 18.6792C12.1072 18.6754 10.7369 17.0359 10.5615 12.63C10.5372 12.0185 10.1887 11.5473 9.64505 11.3333L9.51927 10.51C14.3342 9.53542 18.1928 10.1361 21.652 10.9421L21.7551 10.9662C22.3824 11.1129 23.0934 11.2791 23.8521 11.3023C25.1254 11.3411 26.4915 11.0479 27.7769 10.725C31.905 9.68792 35.1883 10.1146 38.4042 10.7738L38.301 11.5967Z\" fill={color} />\n        <path d=\"M29.6713 24.8502C29.2584 24.7817 28.8684 25.061 28.7998 25.4737C28.5541 26.9553 27.5806 28.1996 26.259 28.721C24.9026 29.2558 23.3591 29.0135 22.2304 28.0879C21.9067 27.8225 21.4292 27.8697 21.1639 28.1933C20.8986 28.5169 20.9458 28.9943 21.2694 29.2597C22.2768 30.0857 23.5243 30.5164 24.7859 30.5164C25.47 30.5164 26.1586 30.3897 26.8151 30.1307C28.6291 29.4151 29.9625 27.7256 30.2949 25.7217C30.3634 25.3089 30.0843 24.9187 29.6713 24.8502Z\" fill={color} />\n        <path d=\"M32.5998 7.5853C33.0183 7.5853 33.3576 7.24605 33.3576 6.82756C33.3576 6.40908 33.0183 6.06982 32.5998 6.06982C32.1814 6.06982 31.8421 6.40908 31.8421 6.82756C31.8421 7.24605 32.1814 7.5853 32.5998 7.5853Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width={width} height={height} fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const WebIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M55.6055 8.37891H52.528C52.0425 8.37891 51.6491 8.7723 51.6491 9.25781C51.6491 9.74332 52.0425 10.1367 52.528 10.1367H55.6055C57.0593 10.1367 58.2422 11.3196 58.2422 12.7734V16.8164H1.75781V12.7734C1.75781 11.3196 2.94059 10.1367 4.39453 10.1367H48.669C49.1545 10.1367 49.5479 9.74332 49.5479 9.25781C49.5479 8.7723 49.1545 8.37891 48.669 8.37891H4.39453C1.97133 8.37891 0 10.3502 0 12.7734V22.4626C0 22.9481 0.393516 23.3415 0.878906 23.3415C1.3643 23.3415 1.75781 22.9481 1.75781 22.4626V18.5742H58.2422V41.2343C58.2422 41.7198 58.6356 42.1132 59.1211 42.1132C59.6066 42.1132 60 41.7198 60 41.2343V12.7734C60 10.3502 58.0287 8.37891 55.6055 8.37891V8.37891Z\" fill={color} />\n      <path d=\"M59.1211 44.0613C58.6356 44.0613 58.2422 44.4547 58.2422 44.9402V47.226C58.2422 48.6799 57.0593 49.8627 55.6055 49.8627H4.39453C2.94059 49.8627 1.75781 48.6799 1.75781 47.226V26.2339C1.75781 25.7484 1.3643 25.355 0.878906 25.355C0.393516 25.355 0 25.7484 0 26.2339V47.226C0 49.6492 1.97133 51.6206 4.39453 51.6206H55.6055C58.0287 51.6206 60 49.6492 60 47.226V44.9402C60 44.4548 59.6066 44.0613 59.1211 44.0613Z\" fill={color} />\n      <path d=\"M12.7127 27.4756C12.3694 27.1325 11.8129 27.1325 11.4698 27.4756L6.18812 32.7572C6.02324 32.9221 5.93066 33.1456 5.93066 33.3788C5.93066 33.612 6.02324 33.8354 6.18812 34.0004L11.3999 39.2122C11.5715 39.3837 11.7965 39.4695 12.0214 39.4695C12.2463 39.4695 12.4713 39.3837 12.6428 39.2122C12.9861 38.8688 12.9861 38.3124 12.6428 37.9692L8.05246 33.3789L12.7127 28.7187C13.056 28.3754 13.056 27.819 12.7127 27.4756V27.4756Z\" fill={color} />\n      <path d=\"M24.5326 39.2122C24.7042 39.3837 24.9292 39.4695 25.154 39.4695C25.3789 39.4695 25.6039 39.3837 25.7755 39.2122L30.9874 34.0004C31.1522 33.8355 31.2447 33.612 31.2447 33.3788C31.2447 33.1456 31.1522 32.9222 30.9874 32.7572L25.7056 27.4756C25.3624 27.1325 24.8059 27.1325 24.4628 27.4756C24.1195 27.819 24.1195 28.3754 24.4628 28.7186L29.1231 33.3788L24.5327 37.969C24.1894 38.3125 24.1894 38.8689 24.5326 39.2122V39.2122Z\" fill={color} />\n      <path d=\"M15.4676 42.4492C15.822 42.4492 16.1561 42.2331 16.2894 41.8818L22.5348 25.429C22.707 24.9751 22.4788 24.4675 22.025 24.2953C21.5713 24.1229 21.0636 24.3513 20.8915 24.805L14.6461 41.2582C14.4738 41.7119 14.7021 42.2195 15.1558 42.3917C15.2585 42.4308 15.3638 42.4492 15.4676 42.4492V42.4492Z\" fill={color} />\n      <path d=\"M3.86792 13.5195C3.86792 14.9734 5.05069 16.1563 6.50464 16.1563C7.95858 16.1563 9.14135 14.9734 9.14135 13.5195C9.14135 12.0657 7.95858 10.8828 6.50464 10.8828C5.05069 10.8828 3.86792 12.0657 3.86792 13.5195V13.5195ZM7.38354 13.5195C7.38354 14.0042 6.98932 14.3984 6.50464 14.3984C6.01995 14.3984 5.62573 14.0042 5.62573 13.5195C5.62573 13.0348 6.01995 12.6406 6.50464 12.6406C6.98932 12.6406 7.38354 13.0348 7.38354 13.5195Z\" fill={color} />\n      <path d=\"M10.6836 13.5195C10.6836 14.9734 11.8664 16.1563 13.3203 16.1563C14.7743 16.1563 15.957 14.9734 15.957 13.5195C15.957 12.0657 14.7743 10.8828 13.3203 10.8828C11.8664 10.8828 10.6836 12.0657 10.6836 13.5195V13.5195ZM14.1992 13.5195C14.1992 14.0042 13.805 14.3984 13.3203 14.3984C12.8356 14.3984 12.4414 14.0042 12.4414 13.5195C12.4414 13.0348 12.8356 12.6406 13.3203 12.6406C13.805 12.6406 14.1992 13.0348 14.1992 13.5195Z\" fill={color} />\n      <path d=\"M17.499 13.5195C17.499 14.9734 18.6818 16.1563 20.1357 16.1563C21.5897 16.1563 22.7725 14.9734 22.7725 13.5195C22.7725 12.0657 21.5897 10.8828 20.1357 10.8828C18.6818 10.8828 17.499 12.0657 17.499 13.5195V13.5195ZM21.0146 13.5195C21.0146 14.0042 20.6204 14.3984 20.1357 14.3984C19.6511 14.3984 19.2568 14.0042 19.2568 13.5195C19.2568 13.0348 19.6511 12.6406 20.1357 12.6406C20.6204 12.6406 21.0146 13.0348 21.0146 13.5195Z\" fill={color} />\n      <path d=\"M39.3164 28.4023H44.8242C46.278 28.4023 47.4609 27.2195 47.4609 25.7656C47.4609 24.3118 46.278 23.1289 44.8242 23.1289H39.3164C37.8626 23.1289 36.6797 24.3118 36.6797 25.7656C36.6797 27.2195 37.8626 28.4023 39.3164 28.4023ZM39.3164 24.8867H44.8242C45.3089 24.8867 45.7031 25.2809 45.7031 25.7656C45.7031 26.2503 45.3089 26.6445 44.8242 26.6445H39.3164C38.8317 26.6445 38.4375 26.2503 38.4375 25.7656C38.4375 25.2809 38.8317 24.8867 39.3164 24.8867Z\" fill={color} />\n      <path d=\"M39.3164 35.4336H53.8477C55.3015 35.4336 56.4844 34.2507 56.4844 32.7969C56.4844 31.343 55.3015 30.1602 53.8477 30.1602H39.3164C37.8626 30.1602 36.6797 31.343 36.6797 32.7969C36.6797 34.2507 37.8626 35.4336 39.3164 35.4336ZM39.3164 31.918H53.8477C54.3323 31.918 54.7266 32.3122 54.7266 32.7969C54.7266 33.2816 54.3323 33.6758 53.8477 33.6758H39.3164C38.8317 33.6758 38.4375 33.2816 38.4375 32.7969C38.4375 32.3122 38.8317 31.918 39.3164 31.918Z\" fill={color} />\n      <path d=\"M39.3164 42.4648H49.5311C50.9849 42.4648 52.1678 41.282 52.1678 39.8281C52.1678 38.3743 50.9849 37.1914 49.5311 37.1914H39.3164C37.8626 37.1914 36.6797 38.3743 36.6797 39.8281C36.6797 41.282 37.8626 42.4648 39.3164 42.4648ZM39.3164 38.9492H49.5311C50.0157 38.9492 50.41 39.3434 50.41 39.8281C50.41 40.3128 50.0157 40.707 49.5311 40.707H39.3164C38.8317 40.707 38.4375 40.3128 38.4375 39.8281C38.4375 39.3434 38.8317 38.9492 39.3164 38.9492Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const MobileIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M29.9776 53.4453C29.0208 53.4453 28.2422 54.224 28.2422 55.1807C28.2422 56.1374 29.0208 56.9156 29.9776 56.9156C30.9343 56.9156 31.7125 56.137 31.7125 55.1807C31.7125 54.224 30.9343 53.4453 29.9776 53.4453ZM29.9776 55.2832C29.9208 55.2832 29.8746 55.237 29.8746 55.1807C29.8746 55.1239 29.9208 55.0777 29.9776 55.0777C30.0339 55.0777 30.0801 55.1239 30.0801 55.1807C30.0801 55.237 30.0339 55.2832 29.9776 55.2832Z\" fill={color} />\n      <path d=\"M43.0916 0H41.3516C40.8664 0 40.4727 0.393677 40.4727 0.878906C40.4727 1.36414 40.8664 1.75781 41.3516 1.75781H43.0916C45.2174 1.75781 46.9469 3.48724 46.9469 5.6131V7.51511H13.0078V5.6131C13.0078 3.48724 14.7372 1.75781 16.8631 1.75781H37.8639C38.3492 1.75781 38.7428 1.36414 38.7428 0.878906C38.7428 0.393677 38.3492 0 37.8639 0H16.8631C13.7682 0 11.25 2.51816 11.25 5.6131V54.3869C11.25 57.4823 13.7682 60 16.8631 60H43.0916C46.1865 60 48.7047 57.4823 48.7047 54.3869V5.6131C48.7047 2.51816 46.187 0 43.0916 0ZM43.0916 58.2422H16.8631C14.7372 58.2422 13.0078 56.5128 13.0078 54.3869V9.27292H46.9469V50.414H15.661C15.1753 50.414 14.7821 50.8076 14.7821 51.2929C14.7821 51.7781 15.1753 52.1718 15.661 52.1718H46.9469V54.3869C46.9469 56.5128 45.2174 58.2422 43.0916 58.2422Z\" fill={color} />\n      <path d=\"M23.9213 33.9725C24.093 34.1441 24.3177 34.2298 24.5429 34.2298C24.7677 34.2298 24.9925 34.1441 25.1641 33.9725C25.5074 33.6292 25.5074 33.0725 25.1641 32.7297L21.3876 28.9527L25.1641 25.1761C25.5074 24.8328 25.5074 24.2761 25.1641 23.9333C24.8213 23.59 24.2646 23.59 23.9213 23.9333L19.5231 28.3315C19.3583 28.4958 19.2654 28.7197 19.2654 28.9527C19.2654 29.1857 19.3583 29.4095 19.5231 29.5743L23.9213 33.9725Z\" fill={color} />\n      <path d=\"M34.7905 33.9725C34.9621 34.1441 35.1869 34.2298 35.4121 34.2298C35.6369 34.2298 35.8616 34.1441 36.0333 33.9725L40.4315 29.5743C40.7748 29.231 40.7748 28.6743 40.4315 28.3315L36.0333 23.9333C35.69 23.59 35.1338 23.59 34.7905 23.9333C34.4471 24.2761 34.4471 24.8328 34.7905 25.1761L38.5675 28.9527L34.7905 32.7297C34.4471 33.0725 34.4471 33.6292 34.7905 33.9725Z\" fill={color} />\n      <path d=\"M28.0491 37.7322C28.1064 37.7432 28.1631 37.7487 28.2194 37.7487C28.631 37.7487 28.9985 37.4584 29.0809 37.0391L32.191 21.206C32.2844 20.7299 31.974 20.268 31.4979 20.1742C31.0214 20.0812 30.5595 20.3912 30.4661 20.8672L27.3561 36.7004C27.2622 37.1765 27.5726 37.6388 28.0491 37.7322Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const DesignIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M56.0513 8.72754H48.5651C48.079 8.72754 47.6849 9.12161 47.6849 9.60768C47.6849 10.0938 48.079 10.4878 48.5651 10.4878H56.0513C57.2273 10.4878 58.1841 11.4446 58.1841 12.6206V43.6968H1.81571V12.6206C1.81571 11.4446 2.77248 10.4878 3.94847 10.4878H11.3174C11.8035 10.4878 12.1975 10.0938 12.1975 9.60768C12.1975 9.12161 11.8035 8.72754 11.3174 8.72754H3.94847C1.80186 8.72754 0.0554199 10.474 0.0554199 12.6206V46.531C0.0554199 48.6776 1.80186 50.4241 3.94847 50.4241H18.7263V54.3869L16.3354 57.721C16.0194 58.1617 15.9769 58.7352 16.2246 59.2176C16.4723 59.7001 16.963 59.9998 17.5054 59.9998H42.3771C42.9194 59.9998 43.4101 59.7001 43.6579 59.2176C43.9056 58.7352 43.8631 58.1617 43.5471 57.721L41.2621 54.5346C41.2453 54.4259 41.209 54.3238 41.1563 54.232V50.4241H56.0515C58.1981 50.4241 59.9445 48.6776 59.9445 46.531V12.6206C59.9444 10.474 58.198 8.72754 56.0513 8.72754ZM56.0513 48.6637H36.425C35.9389 48.6637 35.5448 49.0577 35.5448 49.5438C35.5448 50.0299 35.9389 50.4239 36.425 50.4239H39.3959V53.7896H37.8434C37.3573 53.7896 36.9633 54.1837 36.9633 54.6698C36.9633 55.1558 37.3573 55.5499 37.8434 55.5499H39.8241L41.7526 58.2394H18.1296L20.0582 55.5499H22.1562C22.6423 55.5499 23.0363 55.1558 23.0363 54.6698C23.0363 54.1837 22.6423 53.7896 22.1562 53.7896H20.4864V50.4239H32.6739C33.16 50.4239 33.554 50.0299 33.554 49.5438C33.554 49.0577 33.16 48.6637 32.6739 48.6637H3.94847C2.77248 48.6637 1.81571 47.7069 1.81571 46.5309V45.457H58.1841V46.5309C58.1841 47.707 57.2273 48.6637 56.0513 48.6637Z\" fill={color} />\n        <path d=\"M14.7225 10.5716L29.2417 18.3593C29.4608 18.4768 29.7011 18.5356 29.9413 18.5356C30.1814 18.5356 30.4216 18.4769 30.6405 18.3594L45.1598 10.5717C45.6411 10.3135 45.94 9.81393 45.94 9.26777C45.94 8.72173 45.6411 8.22204 45.1598 7.96398L30.6404 0.176117C30.2026 -0.0587056 29.6796 -0.0587056 29.2419 0.176117L14.7225 7.96387C14.2413 8.22204 13.9424 8.72161 13.9424 9.26765C13.9423 9.81381 14.2413 10.3135 14.7225 10.5716ZM29.9412 1.79852L43.8666 9.26777L29.9412 16.7369L16.0158 9.26765L29.9412 1.79852Z\" fill={color} />\n        <path d=\"M45.1599 18.5887L39.9645 15.8019C39.5362 15.5723 39.0026 15.7332 38.7729 16.1615C38.5431 16.5898 38.7042 17.1233 39.1325 17.3531L43.8667 19.8925L29.9413 27.3617L26.4828 25.5066C26.0547 25.2768 25.5211 25.4379 25.2912 25.8662C25.0615 26.2945 25.2225 26.828 25.6508 27.0578L29.2419 28.984C29.461 29.1015 29.7012 29.1603 29.9414 29.1603C30.1815 29.1603 30.4218 29.1016 30.6406 28.9841L45.1599 21.1964C45.6412 20.9382 45.9402 20.4385 45.9401 19.8925C45.9401 19.3463 45.6411 18.8467 45.1599 18.5887Z\" fill={color} />\n        <path d=\"M14.7227 21.1968L22.2415 25.2297C22.3738 25.3007 22.5163 25.3344 22.6568 25.3344C22.9706 25.3344 23.2744 25.166 23.4332 24.87C23.6629 24.4417 23.5019 23.9082 23.0736 23.6784L16.0161 19.893L20.7504 17.3536C21.1787 17.1238 21.3397 16.5903 21.1099 16.162C20.8802 15.7336 20.3467 15.5728 19.9183 15.8024L14.7229 18.5892C14.2416 18.8472 13.9426 19.3469 13.9426 19.893C13.9424 20.4389 14.2414 20.9386 14.7227 21.1968Z\" fill={color} />\n        <path d=\"M38.4377 34.4286C38.5965 34.7246 38.9002 34.893 39.2141 34.893C39.3545 34.893 39.4971 34.8593 39.6294 34.7883L45.1599 31.8219C45.6412 31.5637 45.9401 31.0641 45.9401 30.5181C45.9401 29.972 45.6412 29.4724 45.1599 29.2142L39.9644 26.4274C39.5364 26.1978 39.0025 26.3586 38.7728 26.787C38.543 27.2153 38.704 27.7488 39.1323 27.9786L43.8667 30.518L38.7974 33.2369C38.3689 33.4667 38.2079 34.0003 38.4377 34.4286Z\" fill={color} />\n        <path d=\"M14.7225 31.8218L29.242 39.6096C29.4609 39.727 29.7011 39.7858 29.9412 39.7858C30.1813 39.7858 30.4215 39.7271 30.6405 39.6096L36.2889 36.5799C36.7172 36.3502 36.8783 35.8167 36.6485 35.3883C36.4187 34.96 35.8852 34.7991 35.4569 35.0288L29.9412 37.9872L16.0158 30.518L20.75 27.9786C21.1783 27.7488 21.3394 27.2153 21.1096 26.787C20.8798 26.3586 20.3463 26.1978 19.918 26.4274L14.7224 29.2142C14.2412 29.4724 13.9423 29.972 13.9424 30.5181C13.9423 31.0641 14.2413 31.5637 14.7225 31.8218Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width={width} height={height} fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const BackendIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M49.7675 12.276C49.2418 10.2026 47.3568 8.66357 45.1182 8.66357C44.1429 8.66357 43.2353 8.95631 42.4775 9.45729C42.4368 9.48037 42.3991 9.50709 42.3632 9.5358C41.1303 10.4028 40.3225 11.8334 40.3225 13.4497C40.3225 16.0888 42.4738 18.2358 45.1182 18.2358C47.7625 18.2358 49.9138 16.0888 49.9138 13.4497C49.9138 13.0521 49.8641 12.666 49.7722 12.2965C49.7706 12.2896 49.7691 12.2828 49.7675 12.276ZM47.6055 11.7144C46.4781 11.8771 45.3823 12.2159 44.3623 12.7194C44.2778 12.0202 44.1424 11.329 43.9577 10.6514C44.3154 10.5035 44.7072 10.4214 45.1179 10.4214C46.1459 10.4214 47.0555 10.9334 47.6055 11.7144ZM45.1181 16.478C43.443 16.478 42.0802 15.1196 42.0802 13.4497C42.0802 12.9162 42.2199 12.4147 42.4639 11.9789C42.5843 12.5861 42.6624 13.2031 42.6937 13.8259C42.7145 14.2207 42.936 14.5662 43.2859 14.7502C43.4472 14.835 43.625 14.8772 43.803 14.8772C44.0065 14.8772 44.2104 14.822 44.3899 14.712C45.5336 14.0047 46.8221 13.5638 48.1552 13.4165C48.1553 13.4276 48.156 13.4385 48.156 13.4497C48.1559 15.1196 46.7933 16.478 45.1181 16.478Z\" fill={color} />\n        <path d=\"M59.9959 22.1804C59.8937 17.8529 57.1958 14.0109 53.2045 12.3938C53.6266 12.0628 54.1572 11.561 54.5302 11.1959C55.189 10.5509 55.3268 9.54375 54.8655 8.74676L54.0712 7.37438C53.6111 6.57949 52.6712 6.19605 51.7855 6.44168C51.2745 6.58336 50.5607 6.79453 50.0621 6.99574C49.9923 7.02387 49.9095 7.01707 49.841 6.97758L48.3711 6.13102C48.3028 6.09176 48.2558 6.02379 48.2454 5.94961C48.1704 5.4177 47.9975 4.69828 47.8657 4.18852C47.6354 3.29719 46.8322 2.6748 45.9125 2.6748H44.3216C43.4019 2.6748 42.5987 3.2973 42.3684 4.18852C42.2366 4.69828 42.0637 5.41758 41.9886 5.94973C41.9782 6.02391 41.9312 6.09176 41.8629 6.13102L41.8333 6.14801C39.1199 2.28305 34.7554 0 29.9942 0C26.3697 0 22.902 1.34648 20.2297 3.79125C19.8716 4.11891 19.8468 4.67484 20.1745 5.03297C20.5023 5.39121 21.0582 5.41582 21.4162 5.08816C23.7637 2.94059 26.81 1.75781 29.9942 1.75781C34.1155 1.75781 37.8984 3.70535 40.2895 7.01063C40.2494 7.01496 40.2089 7.01051 40.172 6.99563C39.6729 6.7943 38.9592 6.58324 38.4484 6.44156C37.5627 6.19594 36.6226 6.57937 36.1626 7.37414L35.3682 8.74664C34.907 9.54375 35.0449 10.5509 35.7036 11.1957C36.0807 11.565 36.6194 12.0746 37.0439 12.4054C37.1027 12.4512 37.1377 12.5254 37.1377 12.6038V14.2948C37.1377 14.3732 37.1026 14.4475 37.0439 14.4932C36.6198 14.8236 36.0809 15.3334 35.7036 15.7028C35.0449 16.3475 34.907 17.3546 35.3682 18.1519L36.1626 19.5244C36.6227 20.3193 37.5629 20.7029 38.4484 20.457C38.9588 20.3154 39.6723 20.1045 40.1717 19.9029C40.2416 19.8748 40.3241 19.8814 40.3929 19.9211L41.8627 20.7676C41.9311 20.8069 41.9779 20.8747 41.9885 20.9491C42.0635 21.4809 42.2363 22.2004 42.3682 22.7101C42.5986 23.6013 43.4018 24.2238 44.3213 24.2238H45.9122C46.8318 24.2238 47.635 23.6013 47.8653 22.7101C47.9972 22.2001 48.1701 21.4807 48.245 20.9489C48.2554 20.8746 48.3025 20.8068 48.3706 20.7675L49.8406 19.9209C49.9093 19.8813 49.9919 19.8745 50.0615 19.9028C50.5609 20.1042 51.2744 20.3153 51.785 20.4568C52.6711 20.7025 53.6108 20.319 54.0708 19.5243L54.865 18.1518C55.3264 17.3546 55.1885 16.3475 54.5298 15.7027C54.1524 15.3333 53.6136 14.8235 53.1895 14.493C53.1308 14.4472 53.0956 14.373 53.0956 14.2946V14.2679C56.1368 15.7406 58.1573 18.8 58.2382 22.2216C58.2959 24.6914 57.3787 27.0232 55.6554 28.7872C53.9322 30.5517 51.6248 31.5234 49.1587 31.5234H27.1057C26.6203 31.5234 26.2268 31.917 26.2268 32.4023C26.2268 32.8877 26.6203 33.2812 27.1057 33.2812H37.6746V38.5547H22.3233V33.2812H23.2686C23.754 33.2812 24.1475 32.8877 24.1475 32.4023C24.1475 31.917 23.754 31.5234 23.2686 31.5234H10.8391C8.37302 31.5234 6.06571 30.5517 4.34212 28.7875C2.61876 27.0233 1.70153 24.6916 1.75931 22.222C1.87696 17.2651 6.01134 13.2885 10.9699 13.3604C12.609 13.3832 14.2106 13.8489 15.6041 14.7088C15.9374 14.9132 16.3591 14.9268 16.7049 14.7451C17.0549 14.561 17.2762 14.2153 17.2972 13.8187C17.4056 11.6837 18.0566 9.59707 19.1798 7.7843C19.4355 7.37168 19.3084 6.82992 18.8958 6.57422C18.4831 6.3184 17.9414 6.44566 17.6857 6.85828C16.5847 8.63496 15.8822 10.6424 15.629 12.7158C14.1915 12.0074 12.6079 11.625 10.9945 11.6027C5.07102 11.5195 0.142353 16.2635 0.00184474 22.1805C-0.0670615 25.1276 1.0277 27.9102 3.08458 30.0157C5.14181 32.1216 7.89559 33.2812 10.8391 33.2812H20.5654V38.5547H17.4601C16.3015 38.5547 15.2812 39.2788 14.9211 40.3573L12.9044 46.4182C12.8806 46.4897 12.7141 47.289 12.7141 47.6366V56.5429C12.7141 58.4491 14.2649 59.9999 16.1711 59.9999H43.8269C45.7332 59.9999 47.284 58.4491 47.284 56.5429V47.6366C47.284 47.2132 47.2071 46.8076 47.0672 46.4324C47.0661 46.4289 47.0655 46.4254 47.0645 46.422L45.0766 40.3563C44.7168 39.2787 43.6966 38.5546 42.5379 38.5546H39.4325V33.2811H49.1588C52.1022 33.2811 54.8561 32.1214 56.9133 30.0157C58.97 27.9102 60.0648 25.1277 59.9959 22.1804ZM53.3005 16.959C53.3849 17.0416 53.4028 17.1701 53.3441 17.2716L52.5498 18.6441C52.4908 18.746 52.3697 18.7949 52.2551 18.7634C51.595 18.5803 51.0497 18.4062 50.7194 18.2729C50.1444 18.0411 49.5044 18.0868 48.9637 18.3981L47.4937 19.2446C46.952 19.5567 46.5916 20.0886 46.5048 20.7039V20.704C46.4553 21.0554 46.3342 21.6117 46.1639 22.2705C46.1341 22.3859 46.0308 22.4664 45.9125 22.4664H44.3216C44.2033 22.4664 44.1 22.3859 44.0702 22.2705C43.8999 21.6118 43.7788 21.0554 43.7292 20.7041C43.6425 20.0888 43.282 19.5568 42.7401 19.2448L41.2704 18.3982C40.9576 18.218 40.6115 18.1268 40.2641 18.1268C40.0108 18.1268 39.7569 18.1752 39.5145 18.273C39.1842 18.4063 38.6388 18.5804 37.9789 18.7635C37.8644 18.795 37.7431 18.7461 37.6842 18.6442L36.8899 17.2718C36.8312 17.1703 36.8491 17.0419 36.9335 16.9593C37.4212 16.4818 37.8441 16.0985 38.1246 15.8801C38.6148 15.498 38.8958 14.9204 38.8958 14.2951V12.6041C38.8958 11.9788 38.6147 11.4011 38.1246 11.0193C37.8439 10.8006 37.421 10.4173 36.9335 9.94008C36.8491 9.85746 36.8312 9.72891 36.8898 9.62754L37.6842 8.25504C37.7431 8.15309 37.8644 8.10398 37.9789 8.13574C38.6391 8.31879 39.1845 8.49293 39.5145 8.62605C40.0895 8.85797 40.7295 8.81238 41.2702 8.5009L42.0181 8.07012C42.0187 8.06977 42.0193 8.06953 42.0199 8.06918C42.0201 8.06906 42.0204 8.06883 42.0206 8.06871L42.7401 7.65434C43.282 7.34227 43.6425 6.81035 43.7291 6.19523C43.7788 5.84355 43.8998 5.28715 44.0701 4.62844C44.0999 4.51324 44.2032 4.43273 44.3215 4.43273H45.9123C46.0305 4.43273 46.1339 4.51324 46.1636 4.62855C46.3339 5.28727 46.455 5.84355 46.5047 6.19523C46.5915 6.81047 46.9518 7.34227 47.4936 7.65434L48.9636 8.50102C49.5044 8.8125 50.1444 8.85809 50.7194 8.62605C51.0492 8.49305 51.5946 8.31891 52.2549 8.13574C52.3692 8.10398 52.4906 8.15309 52.5495 8.25504L53.3438 9.62742C53.4025 9.72891 53.3846 9.85734 53.3002 9.93996C52.8127 10.4171 52.3897 10.8005 52.1093 11.019C51.6191 11.4009 51.3379 11.9786 51.3379 12.604V14.295C51.3379 14.9203 51.6191 15.498 52.1093 15.88C52.3898 16.0983 52.8127 16.4816 53.3005 16.959ZM45.526 56.543C45.526 57.4799 44.7637 58.2422 43.8268 58.2422H16.171C15.2341 58.2422 14.4718 57.4799 14.4718 56.543V47.6367C14.4718 46.6998 15.2341 45.9375 16.171 45.9375H43.8268C44.7637 45.9375 45.526 46.6998 45.526 47.6367V56.543ZM43.4076 40.9084L44.5015 44.2463C44.2831 44.2029 44.0577 44.1797 43.8267 44.1797H16.171C15.934 44.1797 15.7023 44.2038 15.4784 44.2494L16.5886 40.9131C16.7086 40.5538 17.0587 40.3125 17.46 40.3125H42.5377C42.939 40.3125 43.2892 40.5539 43.4076 40.9084Z\" fill={color} />\n        <path d=\"M42.8902 47.6953H17.1094C16.624 47.6953 16.2305 48.0888 16.2305 48.5742V55.6055C16.2305 56.0909 16.624 56.4844 17.1094 56.4844H33.6799C34.1653 56.4844 34.5588 56.0909 34.5588 55.6055C34.5588 55.1201 34.1653 54.7266 33.6799 54.7266H17.9883V49.4531H19.8625V50.5664C19.8625 52.0202 21.0452 53.2031 22.4991 53.2031C23.953 53.2031 25.1358 52.0204 25.1358 50.5664V49.4531H25.7224V50.5664C25.7224 52.0202 26.9052 53.2031 28.359 53.2031C29.813 53.2031 30.9957 52.0204 30.9957 50.5664V49.4531H42.0111V54.7266H37.506C37.0206 54.7266 36.6271 55.1201 36.6271 55.6055C36.6271 56.0909 37.0206 56.4844 37.506 56.4844H42.8901C43.3754 56.4844 43.769 56.0909 43.769 55.6055V48.5742C43.7691 48.0888 43.3756 47.6953 42.8902 47.6953ZM23.378 50.5664C23.378 51.051 22.9838 51.4453 22.4991 51.4453C22.0145 51.4453 21.6203 51.0511 21.6203 50.5664V49.4531H23.378V50.5664ZM29.2381 50.5664C29.2381 51.051 28.8438 51.4453 28.3591 51.4453C27.8746 51.4453 27.4804 51.0511 27.4804 50.5664V49.4531H29.2381V50.5664Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width={width} height={height} fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const MailIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M51.2132 8.78684C45.5469 3.12047 38.0132 0 30 0C21.9868 0 14.4531 3.12047 8.78695 8.78684C3.12047 14.4531 0 21.9868 0 30C0 38.0132 3.12047 45.5469 8.78695 51.2132C14.4531 56.8795 21.9868 60 30 60C38.0132 60 45.5469 56.8795 51.2132 51.2132C56.8794 45.5468 60 38.0132 60 30C60 21.9868 56.8795 14.4531 51.2132 8.78684ZM30 1.89469C36.2283 1.89469 41.9887 3.93246 46.6527 7.37426L30 19.97L13.3473 7.37426C18.0113 3.93246 23.7717 1.89469 30 1.89469ZM7.57898 46.9269C4.0132 42.2154 1.89469 36.3507 1.89469 30C1.89469 24.1575 3.6873 18.7263 6.75047 14.2259L7.57887 14.8759V46.9269H7.57898ZM41.0243 21.4092C40.5772 21.76 40.5375 22.4227 40.9393 22.8245C41.2782 23.1634 41.817 23.1959 42.1941 22.8998L50.5263 16.3623V49.1763C45.3935 54.667 38.0913 58.1052 30 58.1052C21.9087 58.1052 14.6065 54.667 9.47367 49.1763V16.3623L29.4151 32.0084C29.5868 32.143 29.7933 32.2105 30 32.2105C30.2066 32.2105 30.4132 32.1431 30.5849 32.0084L38.5371 25.7691C38.9842 25.4183 39.024 24.7556 38.6223 24.3538C38.2834 24.0149 37.7447 23.9824 37.3676 24.2784L30 30.0589L7.86902 12.695C9.04277 11.1973 10.3658 9.82242 11.814 8.59031L29.4285 21.9135C29.7664 22.1692 30.2334 22.1692 30.5715 21.9135L48.1861 8.5902C49.6343 9.8223 50.9573 11.1973 52.1311 12.6949L41.0243 21.4092ZM52.421 14.8758L53.2494 14.2257C56.3126 18.7262 58.1052 24.1574 58.1052 29.9999C58.1052 36.3506 55.9868 42.2153 52.421 46.9268V14.8758Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const SkypeIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M51.2132 8.78684C45.5469 3.12047 38.0132 0 30 0C21.9868 0 14.4531 3.12047 8.78695 8.78684C3.12047 14.4531 0 21.9868 0 30C0 38.0132 3.12047 45.5469 8.78695 51.2132C14.4531 56.8795 21.9868 60 30 60C38.0132 60 45.5469 56.8795 51.2132 51.2132C56.8794 45.5468 60 38.0132 60 30C60 21.9868 56.8795 14.4531 51.2132 8.78684ZM30 58.1053C14.5027 58.1053 1.89469 45.4973 1.89469 30C1.89469 14.5027 14.5027 1.89469 30 1.89469C45.4973 1.89469 58.1053 14.5027 58.1053 30C58.1053 45.4973 45.4973 58.1053 30 58.1053Z\" fill={color} />\n      <path d=\"M47.7454 35.689C48.1104 34.5503 48.3616 33.3818 48.5004 32.1947C48.5658 31.6343 48.1236 31.1433 47.5594 31.1433C47.0815 31.1433 46.6768 31.4995 46.6211 31.9739C46.4749 33.2177 46.1902 34.4378 45.769 35.6198C45.6456 35.9658 45.7303 36.3516 45.9901 36.6115L46.3008 36.9222C48.8865 39.5078 48.8865 43.7151 46.3007 46.3007C45.0452 47.5563 43.3748 48.2464 41.5986 48.243C39.81 48.2396 38.1047 47.483 36.8401 46.2182L36.6118 45.9899C36.4309 45.8092 36.1888 45.7124 35.9418 45.7124C35.835 45.7124 35.7275 45.7305 35.6236 45.7675C33.7467 46.4369 31.7735 46.7628 29.7632 46.735C20.5915 46.6082 13.1793 39.0142 13.2641 29.8421C13.2815 27.9691 13.6066 26.1319 14.2317 24.3789C14.355 24.0332 14.2697 23.6477 14.0102 23.3882L13.6996 23.0775C11.1138 20.4919 11.1138 16.2846 13.6997 13.699C14.9551 12.4435 16.6255 11.7534 18.4017 11.7568C20.1904 11.7602 21.8957 12.5167 23.1602 13.7815L23.3885 14.0098C23.6475 14.2687 24.0325 14.3552 24.3766 14.2322C26.1797 13.5891 28.0718 13.2631 30.0002 13.2631C38.4216 13.2631 45.4091 19.5153 46.5674 27.6214C46.6335 28.0836 47.0356 28.4232 47.5024 28.4232H47.5043C48.0783 28.4232 48.5237 27.9155 48.4423 27.3471C47.1505 18.3258 39.3729 11.3684 29.9999 11.3684C28.0562 11.3684 26.1454 11.6663 24.3107 12.2545C22.7131 10.7106 20.616 9.8623 18.3885 9.8623C16.1111 9.8623 13.9699 10.7492 12.3594 12.3597C9.07043 15.6488 9.03528 20.9784 12.2544 24.3108C11.6673 26.142 11.3694 28.049 11.3684 29.9888C11.3623 40.2687 19.72 48.6314 30.0001 48.6314C31.9436 48.6314 33.8545 48.3336 35.6892 47.7454C37.2868 49.2892 39.3839 50.1375 41.6114 50.1375C43.8888 50.1375 46.03 49.2507 47.6405 47.6402C50.9295 44.3511 50.9645 39.0215 47.7454 35.689Z\" fill={color} />\n      <path d=\"M36.5085 28.1C38.1604 27.9999 39.4738 26.6243 39.4738 24.9479C39.4738 21.8136 36.9239 19.2637 33.7896 19.2637H32.6009C32.0776 19.2637 31.6535 19.6879 31.6535 20.211C31.6535 20.7343 32.0778 21.1584 32.6009 21.1584H33.7896C35.851 21.1584 37.5331 22.8127 37.5782 24.8635C37.5937 25.5657 37.0658 26.1838 36.364 26.2101C35.6434 26.237 35.0489 25.6565 35.0528 24.9407C35.0567 24.2405 34.4578 23.6846 33.7576 23.6846H27.5358C26.1678 23.6846 25.0011 24.7463 24.9494 26.1134C24.8949 27.5506 26.0485 28.7372 27.4738 28.7372H32.4316C35.1906 28.7372 37.5123 30.9098 37.5775 33.6681C37.6446 36.5096 35.3527 38.8425 32.5262 38.8425H26.2104C24.1491 38.8425 22.467 37.1882 22.4219 35.1374C22.4065 34.4352 22.9342 33.8171 23.6361 33.7908C24.3566 33.7639 24.9512 34.3444 24.9473 35.0602C24.9434 35.7604 25.5422 36.3163 26.2424 36.3163H32.4643C33.8323 36.3163 34.999 35.2546 35.0508 33.8875C35.1053 32.4503 33.9517 31.2637 32.5264 31.2637H27.5686C24.8096 31.2637 22.4878 29.0911 22.4227 26.3328C22.3555 23.4913 24.6474 21.1584 27.4738 21.1584H27.9862C28.5094 21.1584 28.9335 20.7341 28.9335 20.211C28.9335 19.6878 28.5093 19.2637 27.9862 19.2637H27.5889C23.7614 19.2637 20.5666 22.3105 20.5268 26.1378C20.5022 28.5183 21.6814 30.6303 23.4917 31.9011C21.8398 32.0011 20.5264 33.3767 20.5264 35.0532C20.5264 38.1875 23.0762 40.7373 26.2105 40.7373H32.4113C36.2387 40.7373 39.4336 37.6905 39.4733 33.8632C39.498 31.4828 38.3188 29.3709 36.5085 28.1ZM32.5264 26.8427H27.4737C27.1254 26.8427 26.8421 26.5593 26.8421 26.2111C26.8421 25.8629 27.1254 25.5796 27.4737 25.5796H33.2213C33.3284 26.105 33.5663 26.5833 33.8994 26.9791C33.4554 26.8894 32.9964 26.8427 32.5264 26.8427ZM27.4737 33.1584H32.5264C32.8746 33.1584 33.1579 33.4417 33.1579 33.7899C33.1579 34.138 32.8745 34.4214 32.5264 34.4214H26.7788C26.6717 33.8961 26.4338 33.4177 26.1006 33.022C26.5446 33.1115 27.0037 33.1584 27.4737 33.1584Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const GithubIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M51.2132 8.78684C45.5469 3.12047 38.0132 0 30 0C21.9868 0 14.4531 3.12047 8.78684 8.78684C3.12047 14.4531 0 21.9868 0 30C0 38.0132 3.12047 45.5469 8.78684 51.2132C14.4531 56.8795 21.9868 60 30 60C38.0132 60 45.5469 56.8795 51.2132 51.2132C56.8794 45.5468 60 38.0132 60 30C60 21.9868 56.8795 14.4531 51.2132 8.78684ZM30 58.1053C14.5027 58.1053 1.89469 45.4973 1.89469 30C1.89469 14.5027 14.5027 1.89469 30 1.89469C45.4973 1.89469 58.1053 14.5027 58.1053 30C58.1053 45.4973 45.4973 58.1053 30 58.1053Z\" fill={color} />\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.99719 41.4491L9.99677 41.4466Z\" fill={color} />\n      <path d=\"M36.5 43.5C39.7826 43.5 42.5322 42.382 45.2072 39.7071C46.6977 38.2165 48.2995 35.5098 48.5619 32C48.5619 31.7091 48.5 31.5 47.5 31.5C46.7 31.5 46.5366 31.8333 46.5549 32C46.2975 34.9154 44.9603 37.1255 43.7929 38.2929C41.4678 40.6179 39.2175 41.5 36.5 41.5C35.8553 41.5 35.3033 41.5637 34.8716 41.7334C34.4177 41.9119 33.9265 42.2921 33.8557 42.9564C33.7976 43.5011 34.0703 43.9352 34.2421 44.1607C34.4102 44.3813 34.6132 44.5729 34.8026 44.7244C35.7664 45.8987 36.3019 47.7428 36.5317 49.7275C36.7626 51.7223 36.666 53.6886 36.5088 54.8678C36.5059 55.0785 36.7 55.5 37.5 55.5C38.3 55.5 38.4942 55.2548 38.4913 55.1321C38.6674 53.8114 38.7708 51.6777 38.5184 49.4975C38.2773 47.4149 37.6936 45.124 36.3854 43.5009C36.4222 43.5003 36.4604 43.5 36.5 43.5Z\" fill={color} />\n      <path d=\"M44.8163 14.0513C43.4584 13.5987 40.3999 13.7604 36.8036 16.3954C34.4251 15.7316 29.3635 15.0419 23.8133 16.3884C22.4691 15.1584 19.5735 13.6257 15.4095 14.0041L14.9038 14.05L14.6425 14.4855C13.9944 15.5659 13.3342 18.2541 14.4015 21.8412C13.2294 23.6486 11.9592 26.456 11.6307 29.5443C11.2724 32.9123 12.0369 36.6614 15.3054 39.7195C16.4029 40.8115 19.3872 43.0563 22.876 43.4922C23.0766 43.5079 23.4675 43.5348 23.5014 43.5229C22.832 44.1113 22.4315 44.7306 22.2967 45.3679C22.2402 45.635 22.2342 45.8899 22.2675 46.1257C21.846 46.3419 21.318 46.4995 20.7549 46.4757C19.9499 46.4415 18.8879 46.0288 17.8321 44.4451C15.133 40.3965 10.7179 40.1364 8.80388 40.5192L8 40.68V41.4998C8 41.9369 8.20904 42.6234 8.79303 43.2072C8.95585 43.37 9.14822 43.4865 9.2846 43.5631C9.43226 43.6461 9.60098 43.7288 9.75695 43.8049L9.79897 43.8254C10.1145 43.9792 10.4462 44.1409 10.7884 44.3515C11.4905 44.7835 12.1779 45.3872 12.5715 46.3712C13.6264 49.0082 16.6725 52.6227 22.1165 52.5472C22.2113 53.5369 22.2616 54.8084 22.1422 56C22.0948 56.1667 22.2 56.5 23 56.5C24 56.5 24.1476 56.4502 24.1744 56C24.3082 54.1809 24.1232 52.291 23.9899 51.3583L23.8556 50.4179L22.9095 50.5039C17.9665 50.9532 15.3123 47.838 14.4285 45.6284C13.8221 44.1124 12.7595 43.2161 11.8366 42.6481C11.7686 42.6063 11.7011 42.5661 11.6344 42.5275C13.1421 42.8241 14.9007 43.6536 16.1679 45.5545C17.5121 47.5707 19.1168 48.408 20.6702 48.4739C22.159 48.537 23.4229 47.8829 24.1508 47.259C24.6715 46.6663 24.6732 46.3023 24.609 46.1945L24.2471 45.8327C24.2471 45.4425 24.8157 44.9817 25.1 44.8C25.3409 44.6193 25.5564 44.4257 25.725 44.214C25.8909 44.0057 26.0523 43.7282 26.0964 43.388C26.2038 42.5592 25.5961 42.0949 25.2518 41.9144C24.8876 41.7234 24.4543 41.6286 24.0964 41.5762C23.7438 41.5246 23.3812 41.5029 23.0662 41.5002C20.1915 41.1198 17.6139 39.1996 16.7072 38.2929L16.695 38.2807L16.6824 38.2689C13.9613 35.7293 13.3115 32.6502 13.6194 29.7558C13.9313 26.8248 15.2278 24.1327 16.3193 22.5734L16.6079 22.1611L16.4487 21.6837C15.5222 18.9042 15.8404 16.8847 16.1623 15.9571C19.899 15.7916 22.1429 17.4335 22.7318 18.1402L23.1407 18.6307L23.7577 18.4662C29.5447 16.9232 34.8441 17.8355 36.6838 18.4487L37.1916 18.6179L37.614 18.2893C40.5393 16.0141 42.8309 15.7745 43.8043 15.8756C44.9369 18.5236 44.1392 20.7384 43.668 21.4453L43.1432 22.2324L43.9001 22.8C44.3208 23.1155 45.7584 24.7725 46.5238 28.2167C46.5683 28.4056 46.8258 28.7266 47.5 28.5C48.3428 28.2167 48.4524 28.0657 48.4762 27.7828C47.8124 24.7957 46.6461 22.8289 45.7374 21.8047C46.4213 20.2645 46.8899 17.5435 45.3945 14.5528L45.2092 14.1823L44.8163 14.0513Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const LinkedInIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M51.2132 8.78695C45.5469 3.12047 38.0132 0 30 0C21.9868 0 14.4531 3.12047 8.78684 8.78695C3.12047 14.4531 0 21.9868 0 30C0 38.0132 3.12047 45.5469 8.78684 51.2132C14.4531 56.8795 21.9868 60 30 60C38.0132 60 45.5469 56.8795 51.2132 51.213C56.8795 45.5469 60 38.0132 60 30C60 21.9868 56.8795 14.4531 51.2132 8.78695ZM30 58.1053C14.5027 58.1053 1.89469 45.4973 1.89469 30C1.89469 14.5027 14.5027 1.89469 30 1.89469C45.4973 1.89469 58.1053 14.5027 58.1053 30C58.1053 45.4973 45.4973 58.1053 30 58.1053Z\" fill={color} />\n      <path d=\"M21.1578 24H14.842C14.3188 24 13.8947 24.4241 13.8947 24.9473V43.8947C13.8947 44.4181 14.3189 44.842 14.842 44.842H21.1578C21.6811 44.842 22.1052 44.4179 22.1052 43.8947V24.9473C22.1053 24.4241 21.6811 24 21.1578 24ZM20.2105 42.9474H15.7895V25.8947H20.2105V42.9474Z\" fill={color} />\n      <path d=\"M17.3683 12.6318C14.7563 12.6318 12.6315 14.7567 12.6315 17.3687C12.6315 19.9807 14.7563 22.1055 17.3683 22.1055C19.9803 22.1055 22.1051 19.9807 22.1051 17.3687C22.1051 14.7567 19.9803 12.6318 17.3683 12.6318ZM17.3683 20.2108C15.8012 20.2108 14.5262 18.9358 14.5262 17.3687C14.5262 15.8016 15.801 14.5265 17.3683 14.5265C18.9355 14.5265 20.2105 15.8015 20.2105 17.3687C20.2105 18.9358 18.9356 20.2108 17.3683 20.2108Z\" fill={color} />\n      <path d=\"M38.8421 24C36.9607 24 35.1073 24.487 33.4736 25.3941V24.9475C33.4736 24.4242 33.0494 24.0001 32.5262 24.0001H27.4736C26.9503 24.0001 26.5262 24.4243 26.5262 24.9475V43.8948C26.5262 44.418 26.9505 44.8421 27.4736 44.8421H33.7894C34.3127 44.8421 34.7368 44.4179 34.7368 43.8948V37.0932C34.7368 34.8657 35.2298 32.2106 37.5789 32.2106C39.3319 32.2106 40.051 33.6894 40.3032 35.3657C40.3723 35.8253 40.7706 36.1635 41.2356 36.1635C41.8191 36.1635 42.2577 35.6403 42.1677 35.064C41.6921 32.0202 40.0785 30.3159 37.5789 30.3159C34.5686 30.3159 32.8421 32.7862 32.8421 37.0932V42.9474H28.421V25.8947H31.5789V27.1404C31.5789 27.4342 31.7012 27.7212 31.9309 27.9043C32.2875 28.1886 32.7787 28.1788 33.119 27.9057C34.7597 26.5902 36.7387 25.8947 38.8421 25.8947C44.2956 25.8947 46.7368 30.4942 46.7368 35.0525V42.9472H42.3157V39.8277C42.3157 39.306 41.8928 38.883 41.3712 38.883H41.3657C40.844 38.883 40.4212 39.306 40.4212 39.8277V43.8946C40.4212 44.4178 40.8454 44.8419 41.3685 44.8419H47.6843C48.2076 44.8419 48.6317 44.4177 48.6317 43.8946V35.0524C48.6314 28.545 44.6059 24 38.8421 24Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const InstagramIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M51.2132 8.78684C45.5469 3.12047 38.0132 0 30 0C21.9868 0 14.4531 3.12047 8.78684 8.78684C3.12047 14.4531 0 21.9868 0 30C0 38.0132 3.12047 45.5469 8.78684 51.2132C14.4531 56.8795 21.9868 60 30 60C38.0132 60 45.5469 56.8795 51.2132 51.2132C56.8794 45.5468 60 38.0132 60 30C60 21.9868 56.8795 14.4531 51.2132 8.78684ZM30 58.1053C14.5027 58.1053 1.89469 45.4973 1.89469 30C1.89469 14.5027 14.5027 1.89469 30 1.89469C45.4973 1.89469 58.1053 14.5027 58.1053 30C58.1053 45.4973 45.4973 58.1053 30 58.1053Z\" fill={color} />\n      <path d=\"M40.7631 11.3691H19.237C14.8982 11.3691 11.3685 14.8989 11.3685 19.2376V40.764C11.3685 45.1025 14.8983 48.6323 19.237 48.6323H40.7634C45.1019 48.6323 48.6317 45.1025 48.6317 40.7639V19.2376C48.6316 14.8988 45.1019 11.3691 40.7631 11.3691ZM46.7369 40.7637C46.7369 44.0577 44.057 46.7375 40.7631 46.7375H19.237C15.9431 46.7375 13.2632 44.0577 13.2632 40.7637V19.2376C13.2632 15.9437 15.9431 13.2638 19.237 13.2638H40.7634C44.0572 13.2638 46.737 15.9437 46.737 19.2376V40.7637H46.7369Z\" fill={color} />\n      <path d=\"M39.7737 29.4401C39.4935 24.4558 35.4376 20.446 30.4505 20.2211C24.6957 19.9617 19.9582 24.7014 20.221 30.457C20.4489 35.4445 24.462 39.4985 29.4469 39.7746C31.5506 39.8912 33.5206 39.3378 35.166 38.3104C35.6786 37.9904 35.7622 37.2775 35.3349 36.8504C35.3303 36.8458 35.3259 36.8414 35.3214 36.8369C35.0101 36.5254 34.5271 36.4784 34.153 36.7109C32.9235 37.4749 31.4703 37.911 29.9157 37.8948C25.5264 37.8486 21.9849 34.163 22.1085 29.7753C22.2329 25.3595 26.0009 21.8392 30.5059 22.1215C34.3878 22.3648 37.5476 25.4602 37.8675 29.3367C37.9976 30.9158 37.658 32.4077 36.9757 33.691C36.7803 34.0585 36.8405 34.5092 37.1348 34.8035C37.1396 34.8083 37.1445 34.8132 37.1493 34.818C37.5915 35.2601 38.3393 35.1562 38.6347 34.6052C39.4529 33.0787 39.8791 31.3124 39.7737 29.4401Z\" fill={color} />\n      <path d=\"M40.1053 21.1581C41.5006 21.1581 42.6316 20.027 42.6316 18.6318C42.6316 17.2365 41.5006 16.1055 40.1053 16.1055C38.7101 16.1055 37.579 17.2365 37.579 18.6318C37.579 20.027 38.7101 21.1581 40.1053 21.1581Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const TelescopeIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 200 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M198.948 30.5746C195.645 18.5532 185.347 10.4653 173.718 9.29418L173.093 7.018C171.796 2.29847 166.928 -0.47145 162.207 0.825034C157.499 2.11878 154.721 7.00199 156.015 11.7106L156.036 11.7879L126.689 20.8332C123.293 21.8801 121.068 24.8668 120.863 28.2133L49.1641 50.3118C45.7199 51.3735 43.5981 54.6328 43.8879 58.0903L19.0692 66.252C17.4965 61.1844 12.2258 58.3512 7.17464 59.7383C1.98557 61.1641 -1.07615 66.5457 0.350027 71.7348L7.17932 96.5871C8.61135 101.798 14.0074 104.832 19.1758 103.412C24.259 102.015 27.2973 96.8219 26.0793 91.7328L51.577 86.068C52.834 88.6512 55.441 90.2743 58.2903 90.2743C59.8883 90.2743 59.2082 90.1965 78.5516 85.5914L54.5184 145.729C53.918 147.231 54.6492 148.936 56.152 149.536C56.5086 149.679 56.8762 149.746 57.2383 149.746C58.4012 149.746 59.5016 149.049 59.9598 147.903L83.7629 88.341C85.8672 89.8582 88.2754 90.9762 90.8785 91.5871L52.9356 186.531C52.6672 187.201 52.0285 187.634 51.3067 187.634H46.6707C45.4324 187.634 44.5813 186.384 45.0426 185.229L54.8574 160.67C55.4578 159.168 54.7266 157.463 53.2239 156.863C51.7219 156.263 50.0168 156.993 49.416 158.496L39.6016 183.055C37.6071 188.044 41.2801 193.493 46.6703 193.493H51.3063C54.4379 193.493 57.2133 191.614 58.3758 188.705L83.2766 126.397H107.639L132.54 188.705C133.702 191.614 136.477 193.493 139.609 193.493H144.245C149.618 193.493 153.314 188.06 151.314 183.055L111.668 83.8496C113.188 81.7625 114.315 79.3731 114.94 76.7887L132.999 72.42C134.522 74.6637 137.065 76.0282 139.809 76.0278C141.587 76.0278 140.151 76.102 171.888 68.5086C173.846 72.0231 177.992 73.8321 181.968 72.7395C186.677 71.4461 189.455 66.5625 188.161 61.8539L188.135 61.759C197.522 54.818 202.256 42.611 198.948 30.5746ZM17.6231 97.7621C15.5485 98.3313 13.3989 97.1082 12.8289 95.0348L6.00003 70.1825C5.4301 68.1086 6.65354 65.9582 8.72737 65.3883C10.8141 64.8153 12.9528 66.0453 13.5211 68.1157L20.3504 92.9684C20.9199 95.0418 19.6965 97.1922 17.6231 97.7621ZM24.5328 86.0746L20.6387 71.9039L45.3157 63.7887L49.8914 80.4407L24.5328 86.0746ZM81.2684 72.0731C81.2684 64.2493 87.6336 57.884 95.4574 57.884C103.281 57.884 109.647 64.2493 109.647 72.0731C109.647 79.8969 103.281 86.2621 95.4574 86.2621C87.6336 86.2621 81.2684 79.8973 81.2684 72.0731ZM85.6184 120.538L95.4582 95.9168L105.298 120.538H85.6184ZM145.873 185.23C146.332 186.377 145.49 187.634 144.245 187.634H139.609C138.888 187.634 138.249 187.202 137.981 186.532L100.038 91.5875C102.641 90.9766 105.049 89.8586 107.153 88.3414L145.873 185.23ZM115.449 70.6375C114.709 60.2512 106.029 52.025 95.4578 52.025C84.4035 52.025 75.4094 61.0188 75.4094 72.0735C75.4094 74.8625 75.9832 77.5196 77.0168 79.9348L58.7082 84.3641C57.8309 84.5754 56.9621 84.0614 56.7246 83.1942L49.7821 57.9301C49.5438 57.0629 50.0305 56.1762 50.8899 55.9114L121.98 34L131.013 66.8723L115.449 70.6375ZM180.416 67.0899C178.822 67.5274 177.17 66.5875 176.732 64.995L173.866 54.5614C173.437 53.0012 171.826 52.084 170.264 52.5125C168.704 52.9411 167.787 54.5536 168.215 56.1137L170.085 62.9172L140.412 70.0954C139.13 70.4047 137.853 69.6524 137.504 68.3809L126.791 29.3926C126.441 28.1215 127.155 26.8211 128.414 26.4328L157.589 17.4407L164.586 42.9055C165.014 44.4657 166.625 45.3832 168.187 44.9543C169.747 44.5254 170.664 42.9133 170.236 41.3532L161.664 10.1586C161.226 8.56527 162.166 6.91292 163.759 6.47503C165.352 6.03675 167.003 6.96996 167.443 8.57035C171.81 24.4657 177.671 45.7926 182.511 63.4071C182.949 65 182.009 66.6524 180.416 67.0899ZM186.438 55.5829L175.416 15.4703C183.888 17.1918 190.957 23.6059 193.299 32.1274C195.64 40.6485 192.841 49.7739 186.438 55.5829Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const CloseIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M39.6781 1.77957C39.921 1.53663 40.2611 0.904987 39.6781 0.321934C39.095 -0.261119 38.4634 0.0789948 38.2204 0.321934L20 18.5424L1.77957 0.321934C1.53663 0.0789948 0.904989 -0.261119 0.321936 0.321934C-0.261118 0.904987 0.0789965 1.53663 0.321936 1.77957L18.5424 20L0.321934 38.2204C0.0789961 38.4634 -0.26112 39.095 0.321934 39.6781C0.904988 40.2611 1.53663 39.921 1.77957 39.6781L20 21.4576L38.2204 39.6781C38.4634 39.921 39.095 40.2611 39.6781 39.6781C40.2611 39.095 39.921 38.4634 39.6781 38.2204L21.4576 20L39.6781 1.77957Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const MaintenanceIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 200 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M198.326 38.2342C197.869 36.5682 196.6 35.3096 194.933 34.8686C193.274 34.4283 191.558 34.892 190.343 36.1064L166.645 59.8049C165.615 60.8357 163.937 60.8365 162.906 59.8049L144.378 41.2771C143.348 40.2463 143.348 38.5689 144.378 37.5377L168.076 13.8396C169.291 12.6252 169.754 10.9096 169.315 9.2498C168.881 7.60723 167.591 6.30722 165.949 5.85644C149.898 1.44902 132.625 6.01582 120.868 17.7721C108.626 30.0139 104.253 47.781 109.372 64.2893L90.0507 83.6103L49.2737 42.8342C48.0378 41.5982 46.3226 40.9006 44.5788 40.9459C44.1679 40.9057 43.9862 40.7303 43.9503 40.3166C43.9858 38.5689 43.2976 36.858 42.0616 35.6221L21.921 15.4814C19.2659 12.8268 14.946 12.8268 12.2905 15.4814L1.99131 25.7807C-0.66377 28.4357 -0.66377 32.7561 1.99131 35.4111L22.1319 55.5518C23.3675 56.7877 25.0718 57.4869 26.8269 57.4404C27.2382 57.4881 27.4198 57.6518 27.4558 58.0685C27.4198 59.8162 28.1081 61.5279 29.3444 62.7639L70.121 103.541L63.7116 109.95C62.5718 111.09 62.5718 112.938 63.7116 114.078C64.2815 114.647 65.0284 114.933 65.7753 114.933C66.5222 114.933 67.269 114.647 67.839 114.078L113.958 67.9588C115.234 66.6826 115.682 64.8299 115.126 63.1225C110.375 48.5342 114.157 32.7389 124.996 21.9002C134.837 12.058 149.107 7.98418 162.622 11.0396L140.251 33.4107C136.944 36.7174 136.944 42.0986 140.251 45.4053L158.778 63.933C162.085 67.2393 167.466 67.2393 170.772 63.933L193.144 41.5607C195.688 52.751 193.42 64.4064 186.812 73.8053C185.885 75.124 186.202 76.9439 187.521 77.8713C188.839 78.7978 190.66 78.4814 191.587 77.1623C199.552 65.8334 202.008 51.6447 198.326 38.2342V38.2342ZM33.4714 58.6365C33.3534 58.5185 33.2878 58.3553 33.2913 58.1885C33.3276 56.4154 32.6565 54.7478 31.4026 53.4939C30.1483 52.24 28.4812 51.5592 26.7085 51.6053C26.5378 51.5955 26.3776 51.5424 26.2593 51.4244L6.11865 31.2838C5.73936 30.9045 5.73936 30.2877 6.11865 29.9084L16.4179 19.6092C16.7968 19.2303 17.4144 19.2295 17.7937 19.6092L37.9343 39.7498C38.0522 39.8678 38.1179 40.0311 38.1147 40.1978C38.0784 41.9713 38.7495 43.6389 40.0034 44.8928C41.2577 46.1471 42.9296 46.8342 44.6983 46.7814C44.8608 46.7826 45.0284 46.8439 45.1464 46.9619L85.923 87.7385L74.248 99.4135L33.4714 58.6365Z\" fill={color} />\n        <path d=\"M139.893 94.8118C154.067 99.202 169.527 96.5547 181.382 87.6754C182.672 86.709 182.935 84.8801 181.969 83.5899C181.003 82.2997 179.173 82.0376 177.883 83.0036C167.368 90.879 153.603 93.1426 141.061 89.0583C139.356 88.502 137.502 88.9489 136.224 90.2254L68.7506 157.7C68.1928 158.257 67.5615 158.735 66.8729 159.12L58.0518 164.052C54.4623 166.058 51.8967 169.513 51.0127 173.53C50.6604 175.131 49.8619 176.588 48.7033 177.747L36.7213 189.729C36.4131 190.038 35.9123 190.038 35.6041 189.729L14.4545 168.58C14.1463 168.272 14.1463 167.77 14.4541 167.462L26.3748 155.541C27.5334 154.383 28.9916 153.584 30.59 153.232L30.6928 153.21C34.7092 152.326 38.1639 149.76 40.1705 146.171L45.2014 137.172C45.5865 136.484 46.0646 135.852 46.6221 135.295L58.2623 123.654C59.4021 122.515 59.4021 120.667 58.2623 119.527C57.1228 118.387 55.2748 118.387 54.135 119.527L42.4947 131.167C41.5576 132.104 40.7545 133.166 40.1068 134.323L35.0756 143.322C33.8818 145.457 31.8268 146.983 29.44 147.509L29.3373 147.531C26.6467 148.123 24.1947 149.466 22.2471 151.414L10.3264 163.334C7.74277 165.918 7.74277 170.122 10.3264 172.707L31.4764 193.856C34.0604 196.44 38.2643 196.44 40.8482 193.856L52.8299 181.874C54.7783 179.926 56.1209 177.475 56.7127 174.784C57.2385 172.395 58.7647 170.34 60.8998 169.145L69.7205 164.214C70.8775 163.567 71.9397 162.764 72.8775 161.827L100.642 134.062L107.742 141.162C106.645 142.654 106.044 144.444 106.044 146.33C106.044 148.669 106.954 150.867 108.608 152.521L135.522 179.436C140.119 184.032 145.436 187.76 151.326 190.516C152.786 191.199 154.523 190.569 155.206 189.109C155.889 187.65 155.259 185.912 153.799 185.229C148.526 182.762 143.765 179.424 139.65 175.309L112.735 148.394C112.184 147.843 111.881 147.11 111.881 146.331C111.881 145.551 112.184 144.818 112.735 144.267L130.776 126.226C131.328 125.675 132.06 125.372 132.84 125.372C133.619 125.372 134.352 125.675 134.903 126.227L161.818 153.141C168.229 159.552 172.776 167.592 174.965 176.391C175.262 177.985 176.602 180.775 175.02 182.096L168.605 188.511C167.931 189.185 166.936 189.461 166.012 189.231C164.448 188.84 162.864 189.794 162.475 191.359C162.086 192.923 163.038 194.506 164.603 194.895C167.479 195.616 170.618 194.758 172.733 192.638L179.147 186.223C182.328 183.288 181.883 178.722 180.629 174.981C178.184 165.154 173.106 156.175 165.946 149.014L139.031 122.1C137.377 120.446 135.179 119.535 132.84 119.535C130.953 119.535 129.163 120.136 127.672 121.233L120.572 114.133L139.893 94.8118ZM123.466 125.282L111.791 136.957L104.77 129.935L116.445 118.26L123.466 125.282Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"200\" height=\"200\" fill={color} />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const ProjectCalendarIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 100 88\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M72.5456 38.886C61.0485 38.886 51.695 48.2395 51.695 59.7366C51.695 71.2336 61.0485 80.5872 72.5456 80.5872C84.0426 80.5872 93.3962 71.2336 93.3962 59.7366C93.3962 48.2395 84.0426 38.886 72.5456 38.886ZM72.5456 77.6575C62.6639 77.6575 54.6247 69.6182 54.6247 59.7366C54.6247 49.8549 62.6639 41.8157 72.5456 41.8157C82.4272 41.8157 90.4665 49.8549 90.4665 59.7366C90.4665 69.6182 82.4272 77.6575 72.5456 77.6575Z\" fill={color} />\n      <path d=\"M72.5453 47.7817C73.3545 47.7817 74.0101 47.1261 74.0101 46.3169V45.646C74.0101 44.8368 73.3545 44.1811 72.5453 44.1811C71.7361 44.1811 71.0804 44.8368 71.0804 45.646V46.3169C71.0804 47.1261 71.7363 47.7817 72.5453 47.7817Z\" fill={color} />\n      <path d=\"M81.473 48.7372L80.9984 49.2118C80.4263 49.7841 80.4263 50.7114 80.9984 51.2835C81.2846 51.5694 81.6595 51.7124 82.0344 51.7124C82.4092 51.7124 82.7842 51.5694 83.0703 51.2835L83.5449 50.8089C84.117 50.2366 84.117 49.3093 83.5449 48.7372C82.9726 48.1653 82.0453 48.1653 81.473 48.7372Z\" fill={color} />\n      <path d=\"M84.5001 59.7367C84.5001 60.5458 85.1557 61.2015 85.9649 61.2015H86.636C87.4452 61.2015 88.1008 60.5458 88.1008 59.7367C88.1008 58.9275 87.4452 58.2718 86.636 58.2718H85.9649C85.1559 58.2718 84.5001 58.9275 84.5001 59.7367Z\" fill={color} />\n      <path d=\"M59.1255 58.2718H58.4544C57.6452 58.2718 56.9895 58.9275 56.9895 59.7367C56.9895 60.5458 57.6452 61.2015 58.4544 61.2015H59.1255C59.9346 61.2015 60.5903 60.5458 60.5903 59.7367C60.5903 58.9275 59.9346 58.2718 59.1255 58.2718Z\" fill={color} />\n      <path d=\"M83.0699 68.1894C82.4979 67.6173 81.5703 67.6173 80.9984 68.19C80.4266 68.762 80.4268 69.6896 80.999 70.2614L81.4736 70.7358C81.7596 71.0218 82.1344 71.1646 82.5092 71.1646C82.8842 71.1646 83.2592 71.0216 83.5453 70.7353C84.1172 70.1632 84.117 69.2357 83.5447 68.6638L83.0699 68.1894Z\" fill={color} />\n      <path d=\"M72.5453 71.6913C71.7361 71.6913 71.0804 72.347 71.0804 73.1561V73.8272C71.0804 74.6364 71.7361 75.2921 72.5453 75.2921C73.3545 75.2921 74.0101 74.6364 74.0101 73.8272V73.1561C74.0101 72.347 73.3545 71.6913 72.5453 71.6913Z\" fill={color} />\n      <path d=\"M62.0202 68.1897L61.5458 68.6641C60.9737 69.2363 60.9737 70.1637 61.5458 70.7358C61.8319 71.0217 62.2069 71.1647 62.5817 71.1647C62.9565 71.1647 63.3315 71.0217 63.6177 70.7358L64.0921 70.2613C64.6642 69.6891 64.6642 68.7617 64.0921 68.1897C63.5198 67.618 62.5925 67.618 62.0202 68.1897Z\" fill={color} />\n      <path d=\"M62.0202 51.2829C62.3064 51.5692 62.6814 51.7122 63.0564 51.7122C63.4312 51.7122 63.806 51.5692 64.0919 51.2835C64.6642 50.7114 64.6644 49.7839 64.0925 49.212L63.6181 48.7374C63.0458 48.1647 62.1183 48.1653 61.5466 48.7368C60.9743 49.3089 60.9741 50.2364 61.546 50.8083L62.0202 51.2829Z\" fill={color} />\n      <path d=\"M76.5381 58.2716H74.0103V52.0052C74.0103 51.196 73.3547 50.5403 72.5455 50.5403C71.7363 50.5403 71.0806 51.196 71.0806 52.0052V59.7364C71.0806 60.5456 71.7363 61.2013 72.5455 61.2013H76.5381C77.3472 61.2013 78.0029 60.5456 78.0029 59.7364C78.0029 58.9273 77.347 58.2716 76.5381 58.2716Z\" fill={color} />\n      <path d=\"M94.8284 43.6975C94.355 43.0412 93.44 42.8932 92.7833 43.366C92.1273 43.8393 91.9788 44.7547 92.4519 45.4112C95.4734 49.6014 97.0702 54.5551 97.0702 59.7367C97.0702 73.2599 86.0683 84.2618 72.5453 84.2618C59.0221 84.2618 48.0202 73.2599 48.0202 59.7367C48.0202 46.2137 59.0221 35.2118 72.5453 35.2118C78.5082 35.2118 84.2566 37.3788 88.7314 41.3133C89.3388 41.8469 90.2644 41.7881 90.7988 41.1803C91.3327 40.5729 91.2736 39.6471 90.6658 39.1129C87.1796 36.0477 83.0031 33.9421 78.5361 32.944L82.031 17.9316C82.9271 14.0822 80.0074 10.3964 76.0488 10.3964H56.7333V6.50115C56.7333 3.36229 54.1796 0.808594 51.0407 0.808594H31.1529C28.0141 0.808594 25.4604 3.3621 25.4604 6.50115V10.3963H16.6151C15.8059 10.3963 15.1502 11.0519 15.1502 11.8611C15.1502 12.6703 15.8059 13.3259 16.6151 13.3259H76.049C78.116 13.3259 79.6472 15.2503 79.1779 17.2671L75.6418 32.4567C74.6186 32.3407 73.585 32.2819 72.5455 32.2819C67.4553 32.2819 62.6852 33.676 58.594 36.1001H48.7858V34.4012C48.7858 32.3956 47.1542 30.7639 45.1486 30.7639H37.0455C35.0398 30.7639 33.4082 32.3956 33.4082 34.4012V36.1001H10.1825C8.54069 36.1001 7.13855 34.976 6.76941 33.3905L3.01571 17.2669C2.54716 15.254 4.07391 13.3259 6.1448 13.3259H10.7581C11.5672 13.3259 12.2229 12.6703 12.2229 11.8611C12.2229 11.0519 11.5672 10.3963 10.7581 10.3963H6.1448C2.17802 10.3963 -0.731736 14.0906 0.162401 17.9312L3.9161 34.0546C4.14149 35.0225 4.57469 35.8932 5.16101 36.6262V55.7871C5.16101 59.6672 8.31784 62.824 12.1979 62.824H21.3117C22.1209 62.824 22.7766 62.1683 22.7766 61.3591C22.7766 60.55 22.1209 59.8943 21.3117 59.8943H12.1981C9.93326 59.8943 8.09089 58.0517 8.09089 55.7871V38.6842C8.74889 38.9084 9.45299 39.0299 10.1827 39.0299H33.4082V40.7118C33.4082 42.7174 35.04 44.349 37.0455 44.349H45.1486C47.1542 44.349 48.7858 42.7174 48.7858 40.7118V39.0299H54.5378C48.5794 44.2182 45.0464 51.7482 45.0927 59.8945H27.1689C26.3598 59.8945 25.7041 60.5502 25.7041 61.3593C25.7041 62.1685 26.3598 62.8242 27.1689 62.8242H45.2654C46.8046 76.5145 58.4508 87.1917 72.5455 87.1917C87.6841 87.1917 100 74.8753 100 59.7369C100 53.9361 98.2116 48.3899 94.8284 43.6975ZM28.39 6.50115C28.39 4.97772 29.6295 3.73827 31.1529 3.73827H51.0405C52.5642 3.73827 53.8034 4.97772 53.8034 6.50115V10.3963H28.39V6.50115ZM45.8562 40.7116C45.8562 41.1018 45.5388 41.4192 45.1486 41.4192H37.0455C36.6552 41.4192 36.3378 41.1018 36.3378 40.7116V34.401C36.3378 34.0108 36.6552 33.6934 37.0455 33.6934H45.1486C45.5388 33.6934 45.8562 34.0108 45.8562 34.401V40.7116Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const WorkResultIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M88.4834 70.5708C87.935 70.3434 87.3037 70.469 86.8838 70.8888L70.8435 86.929C70.4238 87.349 70.2982 87.9802 70.5256 88.5287C70.7525 89.0773 71.2881 89.4347 71.8816 89.4347H87.9219C88.7326 89.4347 89.3897 88.7777 89.3897 87.9669V71.9267C89.3895 71.3331 89.0319 70.7979 88.4834 70.5708ZM75.4246 86.4994L86.4537 75.4702V86.4994H75.4246Z\" fill={color} />\n      <path d=\"M99.0941 47.0444C98.5457 46.8171 97.9145 46.9427 97.4945 47.3624L93.0986 51.7583V21.8694C93.0986 21.0586 92.4414 20.4016 91.6309 20.4016H80.3533L84.4471 16.3078C84.4476 16.3073 84.4482 16.3065 84.4488 16.3059L88.3933 12.3614C89.2385 11.5162 89.7039 10.392 89.7039 9.1967C89.7039 8.00138 89.2385 6.87755 88.3933 6.03204L83.832 1.47071C82.9869 0.625587 81.8627 0.160156 80.6674 0.160156C79.472 0.160156 78.348 0.625587 77.5027 1.47071L58.572 20.4014H13.0117V5.88087C13.0117 5.07013 12.3545 4.41309 11.544 4.41309C5.17872 4.41348 0 9.59182 0 15.9575V78.2986C0 78.407 0.0125 78.5125 0.0347657 78.614C0.2375 81.315 1.40606 83.8246 3.35899 85.7297C5.4465 87.7656 8.20216 88.8869 11.1186 88.8869H55.9698L47.5228 97.334C47.103 97.7539 46.9774 98.385 47.2046 98.9336C47.4317 99.482 47.9671 99.8396 48.5606 99.8396H98.5324C99.343 99.8396 100 99.1826 100 98.3719V48.4005C100 47.8069 99.6424 47.2716 99.0941 47.0444ZM79.5789 3.54669C80.1789 2.94629 81.1564 2.94629 81.7564 3.54669L86.3179 8.10822C86.9183 8.70841 86.9183 9.68557 86.3179 10.286L83.4095 13.1946L76.6701 6.45529L79.5789 3.54669ZM74.5943 8.53107L81.3336 15.2701L78.6404 17.9633L71.9015 11.2242L74.5943 8.53107ZM97.065 64.8931H94.357C93.5463 64.8931 92.8893 65.5501 92.8893 66.3609C92.8893 67.1716 93.5463 67.8286 94.357 67.8286H97.065V72.2517H94.357C93.5463 72.2517 92.8893 72.9087 92.8893 73.7195C92.8893 74.5302 93.5463 75.1873 94.357 75.1873H97.065V79.6101H94.357C93.5463 79.6101 92.8893 80.2671 92.8893 81.0779C92.8893 81.8886 93.5463 82.5457 94.357 82.5457H97.065V86.9687H94.357C93.5463 86.9687 92.8893 87.6259 92.8893 88.4365C92.8893 89.2472 93.5463 89.9043 94.357 89.9043H97.065V96.9047H52.104L66.9298 82.0791C67.5031 81.5056 67.5031 80.5765 66.9298 80.0033C66.864 79.9375 66.7933 79.8804 66.7193 79.8296C66.1478 79.4382 65.3615 79.4959 64.8538 80.0033L58.9054 85.9517H11.1188C6.6672 85.9517 3.0836 82.4763 2.94258 78.0328C2.95098 77.7539 2.97266 77.4773 3.00743 77.2039C3.00762 77.2023 3.00782 77.2007 3.00801 77.1992C3.02442 77.0693 3.04415 76.94 3.06661 76.8115C3.06915 76.7968 3.07188 76.7822 3.07442 76.7675C3.09493 76.6529 3.11798 76.5388 3.14317 76.4251C3.1502 76.3935 3.15762 76.3619 3.16505 76.3304C3.18731 76.2343 3.21133 76.1388 3.23712 76.0437C3.25118 75.9921 3.26583 75.9412 3.28087 75.8898C3.30235 75.8152 3.32462 75.7408 3.34825 75.6671C3.37188 75.5935 3.39708 75.5207 3.42266 75.4478C3.44044 75.3968 3.45801 75.3458 3.47716 75.2953C3.5129 75.1992 3.55079 75.104 3.58985 75.0097C3.60098 74.9826 3.61192 74.955 3.62345 74.9279C3.67364 74.8107 3.72579 74.6949 3.78087 74.5804C3.78321 74.5755 3.78536 74.5706 3.7877 74.5658C4.93575 72.19 7.14376 70.4187 9.79358 69.8691C9.801 69.8675 9.80842 69.8658 9.81584 69.8642C9.93733 69.8394 10.06 69.8181 10.1834 69.7984C10.2039 69.7951 10.2244 69.791 10.2453 69.7878C10.3569 69.7708 10.4696 69.7576 10.5822 69.7449C10.6139 69.7413 10.6453 69.7365 10.6772 69.7333C10.786 69.7224 10.8957 69.7152 11.0055 69.7083C11.0403 69.7062 11.075 69.7025 11.1098 69.7007C11.2535 69.6935 11.3985 69.6898 11.544 69.6898C12.3545 69.6898 13.0117 69.0327 13.0117 68.222V57.5796C13.0117 56.7689 12.3545 56.1118 11.544 56.1118C10.7334 56.1118 10.0762 56.7689 10.0762 57.5796V66.8466C7.59767 67.1601 5.29708 68.2656 3.48302 70.037C3.29219 70.2234 3.11133 70.4171 2.93516 70.614V15.9575C2.93516 11.7112 6.02618 8.17267 10.076 7.47384V51.7087C10.076 52.5192 10.7332 53.1767 11.5438 53.1767C12.3543 53.1767 13.0116 52.5194 13.0116 51.7089V23.3372H55.6366L47.5226 31.4512C46.9493 32.0247 46.9493 32.9538 47.5226 33.527C48.0958 34.1001 49.0251 34.1001 49.5981 33.527L60.2179 22.9073C60.2183 22.9069 60.2185 22.9065 60.2189 22.9063L69.8253 13.2998L76.5642 20.0391L75.7736 20.8297C75.773 20.8303 75.7722 20.8309 75.7716 20.8315L46.1763 50.4272L39.4372 43.6882L45.2708 37.8546C45.844 37.2811 45.844 36.352 45.2708 35.7788C44.6976 35.2057 43.7683 35.2057 43.1952 35.7788L36.3235 42.6503C36.2868 42.687 36.2524 42.7259 36.2202 42.7657C36.2094 42.779 36.1999 42.7932 36.1897 42.8071C36.169 42.8346 36.1487 42.8624 36.1298 42.8913C36.119 42.9081 36.1093 42.9253 36.0991 42.9427C36.0829 42.97 36.0673 42.9977 36.053 43.0261C36.0436 43.0444 36.0352 43.063 36.0266 43.0821C36.0135 43.1108 36.0014 43.1401 35.9903 43.1694C35.9864 43.1798 35.9813 43.1895 35.9776 43.1999L31.1684 56.8237C31.1426 56.8972 31.1241 56.9718 31.1102 57.047H26.229C25.4184 57.047 24.7612 57.704 24.7612 58.5148C24.7612 59.3255 25.4184 59.9825 26.229 59.9825H66.8763C67.6871 59.9825 68.3441 59.3255 68.3441 58.5148C68.3441 57.704 67.6871 57.047 66.8763 57.047H37.7136L46.6647 53.8872C46.6722 53.8845 46.6792 53.8808 46.6866 53.878C46.7214 53.8651 46.7556 53.8507 46.7894 53.8353C46.8028 53.829 46.8163 53.8231 46.8294 53.8167C46.8646 53.7991 46.8991 53.7798 46.9331 53.7591C46.944 53.7524 46.9554 53.7464 46.9661 53.7396C47.0015 53.7169 47.0358 53.6921 47.0696 53.6659C47.078 53.6595 47.0868 53.6538 47.095 53.6472C47.1358 53.6144 47.1759 53.579 47.2138 53.5411L77.4177 23.3373H90.1629V54.694L69.1675 75.6896C68.5943 76.263 68.5943 77.1921 69.1675 77.7654C69.2033 77.8011 69.2406 77.8347 69.2791 77.8662C69.5482 78.0855 69.8769 78.1953 70.2054 78.1953C70.5339 78.1953 70.8628 78.0855 71.1318 77.8662C71.1703 77.8349 71.2076 77.8011 71.2433 77.7654C71.2427 77.766 71.2439 77.7648 71.2433 77.7654L97.065 51.9435V64.8931ZM43.4917 51.8938L39.2874 53.378L36.4862 50.5769L37.9704 46.3725L43.4917 51.8938Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const AchievementsIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M94.3525 13.443L90.0793 9.68016L94.3525 5.91811C95.0171 5.33217 95.2444 4.41894 94.9324 3.59039C94.6188 2.76107 93.8444 2.22549 92.9587 2.22549H75.2753V1.4656C75.2753 0.656127 74.6192 0 73.8097 0C73.0002 0 72.3441 0.656127 72.3441 1.4656V21.2318L60.3072 27.7679C60.2408 27.2384 60.0821 26.7181 59.8311 26.2283L58.1351 22.9171C56.9709 20.6436 54.1739 19.7425 51.9019 20.906L50.5904 21.5774C49.4887 22.142 48.6732 23.1002 48.2932 24.2782C47.9133 25.4554 48.0147 26.7105 48.5793 27.8114L50.2753 31.1233C50.6713 31.8961 51.2565 32.508 51.9446 32.9368C51.0444 34.1491 50.6171 35.6399 50.1777 37.1886L49.8618 38.3071C49.6413 39.0861 50.0945 39.8963 50.8735 40.116C51.0062 40.1542 51.1405 40.1717 51.2725 40.1717C51.9118 40.1717 52.4993 39.7506 52.6824 39.1044L52.9983 37.9882C53.6407 35.723 54.0351 34.51 55.2909 33.8279L57.5423 32.6049L57.82 32.463C57.9123 32.4157 57.9986 32.3623 58.0863 32.3097L74.1324 23.5961C74.0309 25.6019 72.9514 27.497 71.1737 28.5766L60.739 34.9166C60.7268 34.9235 60.7146 34.9304 60.7032 34.938L57.4553 36.9109C56.7641 37.3313 56.5436 38.2331 56.964 38.9251C57.36 39.5774 58.1839 39.8093 58.8561 39.482L56.3918 46.9314L54.5905 47.6699L49.6924 49.6772L51.1039 44.6876C51.3236 43.9086 50.8712 43.0984 50.0922 42.8779C49.3125 42.6566 48.503 43.1106 48.2825 43.8895L46.0525 51.776C46.0235 51.8775 46.0044 51.9889 45.9998 52.0949L45.4162 62.8157C45.3986 63.2247 45.4856 63.9975 45.2964 64.3965L38.8145 78.0333H34.1041C31.3446 78.0333 29.1 80.2779 29.1 83.0366V87.2671C28.4683 86.978 27.7671 86.8162 27.0278 86.8162H15.0657C12.307 86.8162 10.0624 89.06 10.0624 91.8196V97.0686H6.54373C5.73425 97.0686 5.07812 97.7247 5.07812 98.5342C5.07812 99.3437 5.73425 99.9998 6.54373 99.9998H92.9571C93.7666 99.9998 94.4227 99.3437 94.4227 98.5342C94.4227 97.7247 93.7666 97.0686 92.9571 97.0686H89.1455V59.2917C89.1455 56.5329 86.9009 54.2884 84.1421 54.2884H75.2753V28.72C76.9003 26.5174 77.5023 23.6305 76.7478 20.887C76.6295 20.4559 76.3205 20.1019 75.9085 19.9272C75.7063 19.841 75.4897 19.8028 75.2753 19.8112V17.1356H92.9579C93.8444 17.1356 94.6188 16.6 94.9316 15.7715C95.2444 14.9429 95.0171 14.0289 94.3525 13.443V13.443ZM51.0833 25.1785C51.2229 24.7459 51.522 24.3934 51.9263 24.1867L53.2378 23.5153C53.485 23.3886 53.749 23.3284 54.0099 23.3284C54.6279 23.3284 55.2253 23.6663 55.5259 24.253L57.2226 27.5649C57.6186 28.3386 57.3623 29.2762 56.6581 29.75L56.1805 30.0086L55.1726 30.5251C54.3387 30.9524 53.3118 30.6213 52.8846 29.7866L51.1878 26.4755C50.981 26.0711 50.9437 25.6103 51.0833 25.1785V25.1785ZM48.1383 78.4842C47.6401 78.2568 47.0985 78.1081 46.5293 78.0554L48.1383 75.9184V78.4842ZM55.0971 66.6747C55.8021 65.8301 55.9966 64.8436 56.1538 64.0486C56.1934 63.8594 56.9167 59.9089 56.9167 59.9089C56.9167 59.9089 57.6011 60.3354 57.6728 60.3659C57.7224 60.3881 57.7575 60.4369 57.7628 60.4941L58.5601 68.5988H53.6483L55.0971 66.6747ZM63.7641 58.5852L62.5266 68.5919H61.505L60.6803 60.2072C60.575 59.133 59.9173 58.1954 58.9538 57.7292L57.4798 56.7946L58.4617 51.3526C58.4617 51.3526 62.5983 56.2667 62.6944 56.3918C63.5505 57.5049 63.8434 57.9505 63.7641 58.5852ZM47.9331 65.6783C48.2291 64.7872 48.3665 63.88 48.3436 62.9576L48.8761 53.1798L55.6548 50.402L54.4227 57.2272C54.4188 57.2455 54.415 57.2646 54.4127 57.2829L53.3935 62.9264C53.2607 63.5108 53.1447 64.3973 52.7801 64.8787L42.8764 78.0333H42.06L47.9331 65.6783ZM12.9936 91.8188C12.9936 90.6767 13.9229 89.7474 15.0657 89.7474H27.0278C28.1707 89.7474 29.1008 90.6767 29.1008 91.8188V97.0686H12.9936V91.8188ZM32.0312 91.8188V83.0366C32.0312 81.8938 32.9612 80.9645 34.1041 80.9645H46.0662C47.2091 80.9645 48.1383 81.8938 48.1383 83.0366V97.0686H32.032V91.8188H32.0312ZM86.2143 59.2917V97.0686H70.1079V88.2811C70.1079 87.4716 69.4518 86.8155 68.6423 86.8155C67.8321 86.8155 67.1759 87.4716 67.1759 88.2811V97.0686H51.0695V73.6014C51.0695 72.4593 51.9988 71.53 53.1417 71.53H65.1038C66.2467 71.53 67.1759 72.4593 67.1759 73.6014V80.9485C67.1759 81.758 67.8321 82.4141 68.6415 82.4141C69.4518 82.4141 70.1071 81.758 70.1071 80.9485V59.2917C70.1071 58.1488 71.0372 57.2196 72.18 57.2196H73.7944C73.799 57.2196 73.8043 57.2203 73.8097 57.2203C73.8143 57.2203 73.8196 57.2196 73.8242 57.2196H84.1414C85.2843 57.2196 86.2143 58.1496 86.2143 59.2917V59.2917ZM72.18 54.2884C69.4213 54.2884 67.1767 56.5329 67.1767 59.2917V69.0497C66.6518 68.8101 66.0796 68.6583 65.4776 68.6141L66.6732 58.9461C66.9081 57.0617 65.9468 55.8127 65.0176 54.6042C64.9192 54.4761 59.2223 47.7118 59.2223 47.7118L62.7173 37.1452L72.3441 31.2965V54.2884H72.18ZM75.2753 14.2036V5.15746H90.7805L87.4411 8.09782C86.9864 8.49837 86.7255 9.07515 86.7255 9.68092C86.7255 10.2867 86.9864 10.8635 87.4411 11.264L90.7805 14.2044H75.2753V14.2036Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const TeamIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M98.5352 79.4019C97.726 79.4019 97.0703 80.0577 97.0703 80.8667V90.6544C97.0703 90.7903 96.9598 90.9011 96.8236 90.9011H91.2576V69.4994C91.2576 68.6904 90.602 68.0345 89.7928 68.0345C88.9836 68.0345 88.328 68.6904 88.328 69.4994V90.9013H77.5721L80.4832 87.6988C80.9329 87.204 81.1448 86.5015 81.0504 85.8193C81.0483 85.8046 81.0461 85.7902 81.0436 85.7755L77.7711 66.4404L78.3733 65.534L78.5301 65.6453C79.067 66.0267 79.7518 66.1658 80.4143 66.0004C81.0649 65.8377 81.61 65.4 81.9096 64.8L85.2395 58.1258L92.8459 61.0717C93.1461 61.2021 97.0695 63.0011 97.0695 67.682V74.0304C97.0697 74.8396 97.7254 75.4955 98.5346 75.4955C99.3438 75.4955 99.9994 74.8396 99.9994 74.0306V67.6822C99.9994 60.9224 94.2016 58.4613 93.9549 58.3597C93.9455 58.3558 93.9363 58.3521 93.927 58.3486L80.9745 53.3322V50.6643C82.9963 49.0377 84.4162 46.6934 84.8426 44.0209C85.851 43.8943 86.7866 43.4906 87.5629 42.8229C88.6762 41.8654 89.3151 40.4723 89.3151 39.001C89.3151 37.8266 88.9074 36.7028 88.1776 35.8102V31.8575C88.1776 24.1219 81.8842 17.8288 74.1491 17.8288C70.6762 17.8288 67.4965 19.0999 65.044 21.1979C65.0124 20.0754 64.6106 19.0059 63.9104 18.1497V14.1971C63.9104 6.46161 57.6171 0.168457 49.8819 0.168457C42.1464 0.168457 35.8533 6.4618 35.8533 14.1971V18.2528C35.1492 19.0942 34.7552 20.1087 34.7204 21.1854C33.1556 19.8481 31.2828 18.8413 29.1955 18.2917C28.4119 18.0854 27.6117 18.5528 27.4056 19.3352C27.1996 20.1176 27.6667 20.919 28.4492 21.1251C33.315 22.4063 36.7134 26.8198 36.7134 31.8573V34.0481C36.6501 34.035 36.447 34 36.4392 33.9989C36.4193 33.5854 36.3146 33.3328 36.0892 33.0086C35.7142 32.4698 35.0408 31.7985 32.8747 29.4704C32.1029 28.6413 30.8544 28.4891 29.9068 29.1086C26.1968 31.5321 21.6896 32.7672 17.5068 32.5217C16.1443 32.4418 15.2933 33.0405 14.9306 34.0215C14.8982 34.0268 14.5359 34.0998 14.5158 34.1047V31.8573C14.5158 27 17.7615 22.6303 22.4086 21.2305C23.1832 20.9973 23.622 20.1801 23.3888 19.4053C23.1554 18.6305 22.3371 18.1917 21.5634 18.4253C18.7373 19.2764 16.1968 21.0487 14.4107 23.4151C12.5625 25.8631 11.5857 28.7825 11.5857 31.8575V35.9133C10.8478 36.7949 10.4488 37.8664 10.4488 39.001C10.4488 41.5088 12.2965 43.6959 14.9289 44.0221C15.3601 46.632 16.7761 49.135 19.0109 50.8367V53.333L6.07284 58.349C6.06366 58.3525 6.05448 58.3562 6.0453 58.3599C5.79804 58.4613 0 60.9222 0 67.682V90.6544C0 92.4062 1.425 93.831 3.17675 93.831H48.2882C48.9187 93.831 49.5052 93.644 50.0001 93.3261C50.4946 93.644 51.0813 93.831 51.712 93.831H96.8236C98.5752 93.831 100 92.4062 100 90.6544V80.8667C100 80.0577 99.3443 79.4019 98.5352 79.4019ZM14.7855 40.9953C13.9267 40.6836 13.3781 39.8893 13.3781 39.0006C13.3781 38.1387 14.0031 37.4305 14.7855 37.0944V40.9953ZM82.4957 57.0631L79.6204 62.826C79.62 62.8256 76.4264 60.5574 76.3811 60.5252C77.7588 58.8244 77.1116 59.6234 79.9764 56.0875L82.4957 57.0631ZM74.2635 58.4846L70.4751 53.8082V52.4029C71.7065 52.8287 73.0331 53.0252 74.2817 53.0256C74.2815 53.0256 74.2819 53.0256 74.2817 53.0256C75.5727 53.0254 76.8807 52.7803 78.0448 52.3422V53.8172L74.2635 58.4846ZM75.9835 63.8367L75.4446 64.6478H73.0831L72.5442 63.8367L74.2639 62.6154L75.9835 63.8367ZM49.9962 40.824L46.2077 36.1477V34.7424C47.4343 35.1664 48.7595 35.3647 50.0144 35.3651C50.0142 35.3651 50.0146 35.3651 50.0144 35.3651C51.303 35.3651 52.6108 35.1207 53.7774 34.6819V36.1567L49.9962 40.824ZM51.7159 46.1766L51.1771 46.9877H48.8155L48.2767 46.1766L49.9964 44.9553L51.7159 46.1766ZM38.4605 26.2211C38.6999 26.2864 38.946 26.3307 39.1958 26.3616C39.6271 28.9715 41.0431 31.4745 43.2778 33.1762V35.6725L40.2894 36.8309C40.1161 36.467 39.8995 36.1242 39.6425 35.81V31.8575C39.6425 29.8696 39.2238 27.9586 38.4605 26.2211ZM57.7804 24.67C57.7804 28.9577 54.2827 32.4348 50.0153 32.4348C45.2007 32.4348 41.9831 28.7034 41.9831 24.67V17.8083C46.6087 17.9934 51.414 16.6225 55.3427 14.1772C56.6636 15.5936 57.4495 16.4165 57.7806 16.7985C57.7804 20.4456 57.7804 21.8538 57.7804 24.67ZM60.5755 26.3606C60.8239 26.3293 61.0688 26.2848 61.3069 26.2198C60.546 27.9463 60.1202 29.8526 60.1202 31.8575V35.9131C59.895 36.1821 59.7013 36.4686 59.5409 36.7692L56.7073 35.6719V33.0039C58.729 31.3772 60.1491 29.0329 60.5755 26.3606ZM44.2782 38.4293L47.8743 42.868L45.422 44.6098C45.4206 44.6108 45.4196 44.6117 45.4183 44.6127L44.64 45.1656L41.7644 39.403L44.2782 38.4293ZM55.7089 38.427L58.2282 39.4026L55.353 45.1656L54.5729 44.6117C54.5722 44.6111 54.5714 44.6104 54.5706 44.6098L52.1138 42.8647L55.7089 38.427ZM54.106 47.8736L54.2628 47.985C54.8104 48.374 55.4977 48.5025 56.147 48.34C56.7975 48.1773 57.3427 47.7397 57.6423 47.1397L60.1145 42.1846C60.9639 43.2315 62.1925 43.8682 63.4577 44.0262C63.9046 46.827 65.4184 49.2172 67.5454 50.8367V53.3328L55.0915 58.1611L53.5036 48.7803L54.106 47.8736ZM68.5456 56.0896L72.1417 60.5283C70.5694 61.6453 68.9887 62.7681 68.9073 62.826L66.0317 57.0633L68.5456 56.0896ZM82.0475 42.3305C82.0479 46.5135 78.6508 50.0953 74.2827 50.0953C69.3038 50.0953 66.2505 46.1957 66.2505 42.3305V35.4688C70.843 35.6522 75.6545 34.2994 79.6098 31.8377C80.9307 33.2541 81.7166 34.077 82.0477 34.459C82.0475 38.1059 82.0475 39.5143 82.0475 42.3305ZM86.3854 39.0008C86.3854 39.891 85.835 40.6838 84.978 40.9953V37.0104C85.8639 37.333 86.3854 38.1426 86.3854 39.0008ZM63.0501 31.8573C63.0501 25.7373 68.0292 20.7585 74.1489 20.7585C80.2688 20.7585 85.2475 25.7375 85.2475 31.8573V34.0481C85.1809 34.0342 84.9977 34.0026 84.9733 33.9989C84.9534 33.585 84.8481 33.3319 84.6233 33.0086C84.2383 32.4557 83.5723 31.7959 81.4088 29.4704C80.6534 28.6594 79.4077 28.4768 78.4409 29.1086C74.8315 31.4664 70.2713 32.7983 65.9321 32.5164C64.7132 32.4366 63.8302 33.0334 63.4647 34.0217C63.4321 34.027 63.0704 34.1 63.0499 34.1049L63.0501 31.8573ZM63.3206 37.0946V40.9934C62.4593 40.6828 61.9132 39.8863 61.9132 39.0006C61.913 38.1387 62.5376 37.4309 63.3206 37.0946ZM62.1177 21.3405C62.1177 21.9573 61.8507 22.5407 61.3852 22.9409C61.1854 23.1127 60.9577 23.2448 60.7102 23.3348V19.3499C61.5862 19.6678 62.1177 20.4731 62.1177 21.3405ZM49.8814 3.09814C56.0013 3.09814 60.9802 8.07704 60.9802 14.1969V16.3878C60.9139 16.3741 60.7304 16.3423 60.7059 16.3385C60.6843 15.8899 60.555 15.6141 60.2911 15.2573C59.8989 14.7264 59.1759 13.9966 57.1415 11.8098C56.3733 10.985 55.1257 10.8259 54.1735 11.4481C50.3618 13.9384 45.7378 15.1503 41.5466 14.8501C40.5212 14.7725 39.5558 15.3921 39.1976 16.361C39.165 16.3663 38.8031 16.4393 38.7827 16.4442V14.1971C38.7827 8.07704 43.7616 3.09814 49.8814 3.09814ZM39.0529 19.434V23.335C38.1941 23.0233 37.6454 22.229 37.6454 21.3403C37.6454 20.4833 38.2656 19.7725 39.0529 19.434ZM36.4427 37.0104C37.2622 37.3086 37.7886 38.0237 37.8407 38.8735C37.9064 39.8184 37.3257 40.6729 36.4427 40.9936V37.0104ZM36.307 44.0258C37.6886 43.8529 38.9568 43.1248 39.7884 42.0047L42.3505 47.1395C42.6499 47.7397 43.1952 48.1773 43.8458 48.34C44.489 48.5008 45.1771 48.3777 45.73 47.985L45.8868 47.8736L46.489 48.7801L44.9017 58.1584L32.44 53.332V50.6652C34.5148 48.9924 35.8906 46.6287 36.307 44.0258ZM25.7285 58.4846L21.94 53.8082V52.4029C23.1666 52.8269 24.4919 53.0252 25.7468 53.0254C25.7466 53.0254 25.747 53.0254 25.7468 53.0254C27.0566 53.0254 28.3621 52.7738 29.5097 52.3422V53.8172L25.7285 58.4846ZM27.4484 63.8367L26.9095 64.6478H24.548L24.0091 63.8367L25.7289 62.6154L27.4484 63.8367ZM31.4412 56.0875L33.9607 57.0633L31.0853 62.826L30.3052 62.272C30.3044 62.2715 30.3037 62.2707 30.3029 62.2701L27.846 60.5252L31.4412 56.0875ZM17.7154 42.3305V35.4688C22.3656 35.6545 27.174 34.2655 31.0747 31.8377C32.3831 33.2409 33.1812 34.0766 33.5126 34.459C33.5126 38.1061 33.5126 39.5145 33.5126 42.3305C33.5126 46.5908 30.039 50.0953 25.7476 50.0953C20.9697 50.0953 17.7154 46.4065 17.7154 42.3305ZM20.0107 56.0896L23.6068 60.5283L21.1545 62.2701C21.1531 62.2711 21.1521 62.272 21.1507 62.273L20.3724 62.826L17.4968 57.0633L20.0107 56.0896ZM11.6724 90.9015V69.4994C11.6724 68.6904 11.0168 68.0345 10.2076 68.0345C9.39842 68.0345 8.74276 68.6904 8.74276 69.4994V90.9013H3.17675C3.04042 90.9013 2.92988 90.7905 2.92988 90.6546V67.682C2.92988 62.9771 6.89413 61.1838 7.15077 61.0728L14.7525 58.1258L18.0828 64.7998C18.3822 65.4 18.9275 65.8377 19.5783 66.0004C20.2214 66.1611 20.9095 66.0381 21.4625 65.6453L21.6193 65.534L22.2214 66.4404L18.949 85.7755C18.9464 85.79 18.9443 85.8046 18.9422 85.8193C18.848 86.5011 19.0599 87.2036 19.5097 87.6991L22.4205 90.9013L11.6724 90.9015ZM21.8892 85.9607L25.0003 67.5777H26.4572L29.5685 85.9607L25.7289 90.1847L21.8892 85.9607ZM48.5349 90.6544C48.5349 90.7905 48.4243 90.9013 48.2882 90.9013H42.7226V69.4994C42.7226 68.6904 42.0669 68.0345 41.2577 68.0345C40.4486 68.0345 39.7929 68.6904 39.7929 69.4994V90.9013H29.0371L31.9482 87.6988C32.3978 87.204 32.6097 86.5015 32.5154 85.8193C32.5132 85.8046 32.5111 85.7902 32.5085 85.7755L29.2361 66.4404L29.8382 65.534L29.9951 65.6453C30.3871 65.9238 30.8511 66.0691 31.322 66.0691C32.1812 66.0691 32.9814 65.5877 33.3747 64.8L36.7046 58.126L44.3111 61.0718C46.5282 62.0363 48.5347 64.5236 48.5347 67.682L48.5349 90.6544ZM49.9999 62.359C49.3931 61.3812 48.5853 60.4765 47.6114 59.7045L49.2679 49.9176H50.7247L52.3819 59.7096C51.3821 60.5035 50.5849 61.4164 49.9999 62.359ZM60.2073 90.9015V69.4994C60.2073 68.6904 59.5516 68.0345 58.7425 68.0345C57.9333 68.0345 57.2776 68.6904 57.2776 69.4994V90.9013H51.7118C51.5757 90.9013 51.4649 90.7905 51.4649 90.6546V67.682C51.4649 65.9406 52.011 64.3367 53.1743 62.9892C53.9499 62.0996 54.9786 61.3793 55.686 61.0728L63.2878 58.1256L66.618 64.7998C66.9174 65.4 67.4628 65.8377 68.1133 66.0004C68.7565 66.1611 69.4446 66.0381 69.9975 65.6453L70.1544 65.534L70.7565 66.4404L67.4841 85.7755C67.4815 85.79 67.4794 85.8046 67.4772 85.8193C67.3831 86.5011 67.595 87.2036 68.0448 87.6991L70.9555 90.9013L60.2073 90.9015ZM70.4241 85.9609L73.5354 67.5779H74.9922L78.1036 85.9609L74.2637 90.1849L70.4241 85.9609Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const DirectionArrowIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 40 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0.833437 13.167L37.155 13.167L26.0775 2.08951C25.752 1.76396 25.752 1.23662 26.0775 0.911152C26.403 0.585606 26.9304 0.585605 27.2559 0.911152L39.7559 13.4111C40.0814 13.7367 40.0814 14.264 39.7559 14.5895L27.2559 27.0895C27.0931 27.2522 26.8798 27.3336 26.6666 27.3336C26.4534 27.3336 26.2402 27.2522 26.0774 27.0895C25.7519 26.764 25.7519 26.2366 26.0774 25.9111L37.155 14.8337L0.833359 14.8337C0.372734 14.8337 4.02691e-08 14.461 0 14.0004C-4.02691e-08 13.5397 0.372812 13.167 0.833437 13.167Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgIconInnerProps } from '../types';\n\n\nexport const TechIcon: React.FC<SvgIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M98.5349 48.535H74.9495V45.2022H81.3129C82.1219 45.2022 82.7777 44.5463 82.7777 43.7373C82.7777 42.9283 82.1219 42.2725 81.3129 42.2725H74.9495V38.9395H79.3674C81.0133 38.9395 82.5608 38.2987 83.7244 37.1348L93.3584 27.5009C93.9861 27.8136 94.682 27.98 95.4039 27.98C96.6316 27.98 97.7857 27.5018 98.6539 26.6339C99.522 25.7657 100 24.6116 100 23.3839C100 22.1562 99.522 21.0021 98.6539 20.1339C97.7859 19.2657 96.6316 18.7876 95.4039 18.7876C94.1761 18.7876 93.022 19.2657 92.1539 20.1337C91.2857 21.0019 90.8076 22.156 90.8076 23.3837C90.8076 24.1056 90.974 24.8015 91.2867 25.4292L81.6527 35.0631C81.0424 35.6735 80.2307 36.0098 79.3672 36.0098H74.9493V32.7778C74.9493 28.5169 71.4827 25.0505 67.222 25.0505H63.9899V12.0828C65.8079 11.4697 67.1212 9.74957 67.1212 7.72731C67.1212 5.19295 65.0593 3.13124 62.5251 3.13124C59.9909 3.13124 57.929 5.19314 57.929 7.72731C57.929 9.74957 59.2423 11.4695 61.0603 12.0828V25.0503H57.7275V18.6868C57.7275 17.8779 57.0716 17.222 56.2626 17.222C55.4536 17.222 54.7978 17.8779 54.7978 18.6868V25.0503H51.4648V1.46484C51.4648 0.655857 50.8089 0 50 0C49.191 0 48.5351 0.655857 48.5351 1.46484V25.0503H45.2023V18.6868C45.2023 17.8779 44.5465 17.222 43.7375 17.222C42.9285 17.222 42.2726 17.8779 42.2726 18.6868V25.0503H38.9398V20.6325C38.9398 18.9866 38.2988 17.4392 37.135 16.2755L27.4977 6.63825C28.3491 4.91932 28.0637 2.77597 26.6342 1.34628C24.842 -0.445701 21.9262 -0.445506 20.1342 1.34628C18.3423 3.13827 18.3423 6.05408 20.1342 7.84626C21.0303 8.74215 22.2073 9.1902 23.3842 9.1902C24.085 9.1902 24.7846 9.0275 25.4262 8.70973L35.0635 18.3472C35.674 18.9575 36.0102 19.7693 36.0102 20.6325V25.0503H32.7781C32.1248 25.0503 31.475 25.1323 30.8469 25.2938C30.0635 25.4954 29.5918 26.294 29.7934 27.0776C29.995 27.8612 30.7938 28.3329 31.5772 28.1311C31.9668 28.0309 32.3707 27.98 32.7779 27.98H67.222C69.8675 27.98 72.0196 30.1323 72.0196 32.7776V67.2218C72.0196 67.6286 71.9688 68.0324 71.8688 68.4216C71.6674 69.2052 72.1393 70.0036 72.9227 70.205C73.045 70.2364 73.1676 70.2515 73.2885 70.2515C73.9411 70.2515 74.5362 69.8122 74.7061 69.1509C74.8674 68.5236 74.9493 67.8743 74.9493 67.2216V63.9896H87.9168C88.5299 65.8076 90.25 67.1208 92.2722 67.1208C94.8066 67.1208 96.8683 65.0591 96.8683 62.5247C96.8683 59.9904 94.8064 57.9287 92.2722 57.9287C90.25 57.9287 88.5301 59.242 87.9168 61.0599H74.9493V57.7269H81.3127C82.1217 57.7269 82.7775 57.0711 82.7775 56.2621C82.7775 55.4531 82.1217 54.7972 81.3127 54.7972H74.9493V51.4646H98.5349C99.3439 51.4646 99.9997 50.8088 99.9997 49.9998C99.9997 49.1908 99.3439 48.535 98.5349 48.535ZM94.2254 22.2056C94.5402 21.8907 94.9586 21.7175 95.4037 21.7175C95.8488 21.7175 96.2672 21.8907 96.582 22.2056C96.8968 22.5204 97.0701 22.9388 97.0701 23.3839C97.0701 23.829 96.8968 24.2474 96.582 24.5622C96.2672 24.8771 95.8488 25.0503 95.4037 25.0503C94.9586 25.0503 94.5402 24.8771 94.2254 24.5622C93.9105 24.2474 93.7373 23.829 93.7373 23.3839C93.7373 22.9388 93.9105 22.5202 94.2254 22.2056ZM24.5624 5.77478C23.9127 6.42419 22.8555 6.42439 22.2055 5.77459C21.5557 5.12478 21.5557 4.06756 22.2055 3.41796C22.5305 3.09296 22.9571 2.93065 23.384 2.93065C23.8108 2.93065 24.2376 3.09315 24.5624 3.41796C25.2122 4.06776 25.2122 5.12498 24.5624 5.77478ZM62.5251 9.39371C61.6063 9.39371 60.8587 8.64606 60.8587 7.72731C60.8587 6.80857 61.6062 6.06091 62.5251 6.06091C63.444 6.06091 64.1915 6.80857 64.1915 7.72731C64.1915 8.64606 63.4438 9.39371 62.5251 9.39371ZM92.2724 60.8585C93.1914 60.8585 93.9388 61.6062 93.9388 62.5249C93.9388 63.4439 93.1912 64.1913 92.2724 64.1913C91.3537 64.1913 90.606 63.4437 90.606 62.5249C90.6058 61.606 91.3535 60.8585 92.2724 60.8585Z\" fill={color} />\n      <path d=\"M79.8657 92.1536C78.4362 90.724 76.2927 90.4386 74.5737 91.29L64.9365 81.6525C64.3259 81.0422 63.9898 80.2304 63.9898 79.3672V74.9494H67.2218C67.8751 74.9494 68.5247 74.8674 69.1527 74.7058C69.9361 74.5043 70.4077 73.7057 70.2062 72.9221C70.0046 72.1387 69.2064 71.667 68.4224 71.8686C68.0329 71.9687 67.629 72.0195 67.2218 72.0195H32.7778C30.1323 72.0195 27.9802 69.8672 27.9802 67.2219V32.7779C27.9802 32.3706 28.0309 31.9667 28.1311 31.5775C28.3329 30.7941 27.8612 29.9955 27.0778 29.7937C26.2942 29.5919 25.4956 30.0636 25.294 30.847C25.1323 31.4748 25.0505 32.1244 25.0505 32.7779V36.0099H12.0828C11.4697 34.1919 9.74957 32.8787 7.72731 32.8787C5.19295 32.8787 3.13124 34.9404 3.13124 37.4747C3.13124 40.0091 5.19314 42.0708 7.72731 42.0708C9.74957 42.0708 11.4695 40.7575 12.0828 38.9396H25.0503V42.2726H18.6868C17.8779 42.2726 17.222 42.9284 17.222 43.7374C17.222 44.5464 17.8779 45.2022 18.6868 45.2022H25.0503V48.535H1.46484C0.655857 48.535 0 49.1909 0 49.9999C0 50.8089 0.655857 51.4647 1.46484 51.4647H25.0503V54.7975H18.6868C17.8779 54.7975 17.222 55.4534 17.222 56.2624C17.222 57.0713 17.8779 57.7272 18.6868 57.7272H25.0503V61.0602H20.6323C18.9864 61.0602 17.439 61.701 16.2753 62.8649L6.64138 72.4988C6.01365 72.1861 5.31775 72.0197 4.59588 72.0197C3.36815 72.0197 2.21405 72.4978 1.34589 73.3658C0.478123 74.234 0 75.3883 0 76.6158C0 77.8433 0.478123 78.9976 1.34628 79.8658C2.21425 80.734 3.36854 81.2119 4.59627 81.2119C5.824 81.2119 6.9781 80.7338 7.84626 79.8658C8.71442 78.9976 9.19254 77.8435 9.19254 76.6158C9.19254 75.8939 9.02614 75.198 8.71344 74.5703L18.3474 64.9364C18.9577 64.326 19.7695 63.9897 20.6329 63.9897H25.0509V67.2217C25.0509 71.4826 28.5175 74.949 32.7782 74.949H36.0102V87.9165C34.1922 88.5296 32.879 90.2497 32.879 92.272C32.879 94.8064 34.9409 96.8681 37.475 96.8681C40.0092 96.8681 42.0711 94.8062 42.0711 92.272C42.0711 90.2497 40.7578 88.5298 38.9399 87.9165V74.949H42.2727V81.3125C42.2727 82.1215 42.9285 82.7773 43.7375 82.7773C44.5465 82.7773 45.2024 82.1215 45.2024 81.3125V74.949H48.535V98.5349C48.535 99.3438 49.1908 99.9997 49.9998 99.9997C50.8088 99.9997 51.4646 99.3438 51.4646 98.5349V74.9494H54.7974V81.3129C54.7974 82.1218 55.4533 82.7777 56.2623 82.7777C57.0713 82.7777 57.7271 82.1218 57.7271 81.3129V74.9494H61.0599V79.3672C61.0599 81.013 61.7009 82.5605 62.8648 83.7242L72.5021 93.3615C71.6507 95.0804 71.936 97.2237 73.3657 98.6534C74.2616 99.5495 75.4388 99.9974 76.6157 99.9974C77.7927 99.9974 78.9698 99.5495 79.8657 98.6534C81.6577 96.8614 81.6577 93.9456 79.8657 92.1536ZM7.72731 39.1411C6.80837 39.1411 6.06091 38.3935 6.06091 37.4747C6.06091 36.5558 6.80857 35.8083 7.72731 35.8083C8.64606 35.8083 9.39371 36.556 9.39371 37.4747C9.39391 38.3937 8.64625 39.1411 7.72731 39.1411ZM5.77439 77.7941C5.45955 78.109 5.04119 78.2822 4.59608 78.2822C4.15096 78.2822 3.7326 78.109 3.41776 77.7941C3.10292 77.4793 2.92968 77.0609 2.92968 76.6158C2.92968 76.1707 3.10292 75.7523 3.41776 75.4375C3.7326 75.1226 4.15096 74.9494 4.59608 74.9494C5.04119 74.9494 5.45955 75.1226 5.77439 75.4375C6.08923 75.7523 6.26248 76.1707 6.26248 76.6158C6.26248 77.0609 6.08923 77.4795 5.77439 77.7941ZM39.1411 92.2724C39.1411 93.1911 38.3936 93.9388 37.4747 93.9388C36.5557 93.9388 35.8083 93.1911 35.8083 92.2724C35.8083 91.3536 36.5559 90.606 37.4747 90.606C38.3934 90.606 39.1411 91.3536 39.1411 92.2724ZM77.7942 96.5819C77.1444 97.2317 76.0872 97.2316 75.4374 96.5819C74.7876 95.9321 74.7876 94.8749 75.4374 94.2253C75.7624 93.9005 76.1891 93.738 76.6159 93.738C77.0427 93.738 77.4694 93.9005 77.7942 94.2253C78.4438 94.8749 78.4438 95.9321 77.7942 96.5819Z\" fill={color} />\n      <path d=\"M65.5555 46.0861C65.5555 42.9533 63.2641 40.2996 60.1272 39.4373C60.2199 39.0542 60.2715 38.6603 60.2715 38.2578C60.2715 35.2918 57.6389 32.8787 54.4034 32.8787C52.6506 32.8787 51.0762 33.5875 50.0001 34.7078C48.9239 33.5875 47.3493 32.8787 45.5967 32.8787C42.361 32.8787 39.7286 35.2918 39.7286 38.2578C39.7286 38.6603 39.7802 39.0542 39.8729 39.4373C36.736 40.2994 34.4446 42.9531 34.4446 46.0861C34.4446 47.6171 34.9864 49.0616 35.9874 50.2546C35.0087 51.5216 34.4446 53.0597 34.4446 54.6972C34.4443 57.1878 35.7751 59.5133 37.9671 60.9559V60.9594C37.9671 64.3571 40.9946 67.1213 44.7161 67.1213C46.8548 67.1213 48.7628 66.2075 50.0001 64.786C51.2374 66.2075 53.1454 67.1213 55.284 67.1213C58.8654 67.1213 61.8027 64.5608 62.0188 61.3397C64.1939 60.0776 65.5555 57.8669 65.5555 55.4798C65.5555 53.7239 64.8068 52.0489 63.5184 50.7829C64.8066 49.5169 65.5555 47.8417 65.5555 46.0861ZM60.3711 52.0782C61.7826 52.8231 62.6252 54.0948 62.6252 55.4798C62.6252 56.5124 62.1453 57.4973 61.3348 58.2339C60.5647 56.8079 59.2035 55.6727 57.4838 55.1325C56.7123 54.8901 55.8899 55.3192 55.6473 56.0909C55.4047 56.8628 55.834 57.685 56.6057 57.9274C58.099 58.3967 59.1026 59.6153 59.1026 60.9596C59.1026 62.7418 57.3893 64.1918 55.2832 64.1918C53.1774 64.1918 51.4641 62.7418 51.4641 60.9596V51.5657C51.4641 49.7835 53.1774 48.3337 55.2832 48.3337C56.0922 48.3337 56.7481 47.6778 56.7481 46.8689C56.7481 46.0599 56.0922 45.404 55.2832 45.404C53.8664 45.404 52.5508 45.8056 51.4641 46.4894V44.6183C51.4641 43.8093 50.8082 43.1535 49.9993 43.1535C49.1903 43.1535 48.5344 43.8093 48.5344 44.6183V52.7505C48.0415 52.4411 47.5008 52.1851 46.9161 52.0013C46.1438 51.7587 45.3219 52.188 45.0796 52.9595C44.837 53.7313 45.2661 54.5536 46.0378 54.7962C47.5311 55.2655 48.5344 56.4841 48.5344 57.8282V60.9594C48.5344 62.7417 46.8212 64.1916 44.7153 64.1916C42.6093 64.1916 40.896 62.7417 40.896 60.9594C40.896 60.1956 41.2198 59.453 41.8077 58.8686C42.3815 58.2983 42.3843 57.3708 41.8139 56.797C41.2436 56.2231 40.3163 56.2204 39.7425 56.7907C39.3915 57.1397 39.0894 57.521 38.8382 57.9262C37.9132 57.0513 37.3731 55.9001 37.3731 54.6968C37.3731 52.5265 39.0765 50.6198 41.5153 50.0603C42.3038 49.8794 42.7964 49.0935 42.6155 48.305C42.4347 47.5163 41.6485 47.0239 40.8602 47.2048C39.8784 47.43 38.9745 47.806 38.1729 48.2995C37.6532 47.6468 37.3733 46.8823 37.3733 46.0857C37.3739 43.8824 39.4626 42.0886 42.0374 42.0716C42.0505 42.072 42.0636 42.0738 42.0765 42.0738C42.4108 42.0738 42.747 41.9599 43.0221 41.7269C43.5837 41.2515 43.6964 40.4449 43.3194 39.838C43.3083 39.8201 43.2981 39.8017 43.2864 39.7843C43.2803 39.7755 43.2731 39.7671 43.2669 39.7583C43.2442 39.7265 43.221 39.6953 43.1958 39.6652L43.1936 39.6624C42.9493 39.3736 42.6577 38.8955 42.6577 38.2576C42.6577 36.907 43.976 35.8082 45.5962 35.8082C47.2163 35.8082 48.5346 36.907 48.5346 38.2576C48.5346 39.0666 49.1905 39.7224 49.9995 39.7224C50.8084 39.7224 51.4643 39.0666 51.4643 38.2576C51.4643 36.907 52.7827 35.8082 54.4028 35.8082C56.0229 35.8082 57.3412 36.907 57.3412 38.2576C57.3412 38.6185 57.2467 38.9263 57.1215 39.1794C56.2883 39.2582 55.4825 39.4595 54.7174 39.7822C53.9719 40.0964 53.6225 40.9556 53.9368 41.7011C54.251 42.4464 55.1102 42.7962 55.8557 42.4818C56.4889 42.2148 57.1701 42.0775 57.8807 42.072C57.8948 42.0724 57.9086 42.0738 57.9227 42.0738C57.9358 42.0738 57.9487 42.072 57.9617 42.0716C60.5365 42.0884 62.6252 43.8824 62.6252 46.0857C62.6252 47.4706 61.7826 48.7421 60.3711 49.4872C59.8906 49.7407 59.5899 50.2394 59.5899 50.7827C59.5899 51.3261 59.8906 51.8247 60.3711 52.0782Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { TSvgIconType } from 'types/icons';\nimport { combineClasses } from 'utils/styles';\n\nimport {\n  CVIcon,\n  ProjectsIcon,\n  AboutIcon,\n  ContactsIcon,\n  ArticlesIcon,\n  LogoIcon,\n  WebIcon,\n  MobileIcon,\n  DesignIcon,\n  BackendIcon,\n  MailIcon,\n  SkypeIcon,\n  GithubIcon,\n  LinkedInIcon,\n  InstagramIcon,\n  TelescopeIcon,\n  CloseIcon,\n  MaintenanceIcon,\n  ProjectCalendarIcon,\n  WorkResultIcon,\n  AchievementsIcon,\n  TeamIcon,\n  DirectionArrowIcon,\n  TechIcon,\n} from './icons';\nimport { SvgIconInnerProps } from './types';\n\n\ninterface SvgIconProps extends SvgIconInnerProps {\n  className?: string;\n  type: TSvgIconType;\n}\n\nconst getIcon = (type: TSvgIconType): React.FC<SvgIconInnerProps> => {\n  switch (type) {\n    case 'cv': return CVIcon;\n    case 'projects': return ProjectsIcon;\n    case 'about': return AboutIcon;\n    case 'contacts': return ContactsIcon;\n    case 'articles': return ArticlesIcon;\n    case 'logo': return LogoIcon;\n    case 'web': return WebIcon;\n    case 'mobile': return MobileIcon;\n    case 'design': return DesignIcon;\n    case 'backend': return BackendIcon;\n    case 'mail': return MailIcon;\n    case 'skype': return SkypeIcon;\n    case 'github': return GithubIcon;\n    case 'linkedin': return LinkedInIcon;\n    case 'instagram': return InstagramIcon;\n    case 'not-found': return TelescopeIcon;\n    case 'close': return CloseIcon;\n    case 'maintenance': return MaintenanceIcon;\n    case 'schedule': return ProjectCalendarIcon;\n    case 'work-result': return WorkResultIcon;\n    case 'achievements': return AchievementsIcon;\n    case 'team': return TeamIcon;\n    case 'direction-arrow': return DirectionArrowIcon;\n    case 'tech': return TechIcon;\n    default: return CVIcon;\n  }\n};\n\nconst renderIcon: React.FC<SvgIconProps> = ({ type, color, width, height }) => {\n  const Icon = getIcon(type);\n\n  return (\n    <Icon\n      color={color}\n      width={width}\n      height={height}\n    />\n  );\n};\n\nexport const SvgIcon: React.FC<SvgIconProps> = ({ className, ...otherProps }) => {\n  if (className) {\n    return (\n      <div className={combineClasses(className)}>\n        {renderIcon(otherProps)}\n      </div>\n    );\n  }\n  return renderIcon(otherProps);\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({ colors: { primary: { greenMedium } } }) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 24 },\n    },\n    '@keyframes push': {\n      from: {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n      },\n      '50%': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n      },\n      to: {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n      },\n    },\n    button: {\n      position: 'relative',\n      background: 'transparent',\n      width: 200,\n      minHeight: 50,\n      height: 50,\n      border: 'none',\n      borderRadius: 25,\n      padding: 0,\n      color: greenMedium,\n      cursor: 'pointer',\n      fontSize: 23,\n      fontWeight: 500,\n      fontStyle: 'normal',\n      lineHeight: '34px',\n      boxSizing: 'border-box',\n      outline: 'none',\n      transition: 'transform 0.3s',\n\n      '&:hover': {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n        transition: 'transform 0.3s',\n      },\n      '&:active': {\n        animation: '$push 0.1s ease',\n      },\n    },\n    svg: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      strokeDasharray: 4,\n\n      '&:hover': {\n\n        animation: '$dash 1s linear infinite',\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n\ntype TMainButtonProps = {\n  children: string;\n  onClick?: () => void;\n};\n\nexport const MainButton: React.FC<TMainButtonProps> = ({\n  children,\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <svg\n        className={classes.svg}\n        width=\"200\"\n        height=\"50\"\n        viewBox=\"0 0 200 50\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <rect x=\"1.25\" y=\"1.25\" width=\"197.5\" height=\"47.5\" rx=\"23.75\" stroke=\"#81AF65\" strokeWidth=\"2.5\"/>\n      </svg>\n\n      {children}\n    </button>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bg, greenMedium, greyUltralight },\n  },\n}) => {\n  return {\n    container: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'visible',\n      borderRadius: '50%',\n      backgroundColor: bg,\n      transition: 'transform 1s ease',\n    },\n    circleBg: {\n      position: 'absolute',\n      width: 100,\n      height: 100,\n      borderRadius: '50%',\n      backgroundColor: bg,\n      filter: 'drop-shadow(0px 0px 25px rgba(0, 0, 0, 0.3))',\n      animationFillMode: 'forwards',\n      transition: 'width 1.6s height 1.6s ease',\n      opacity: 1,\n    },\n    content: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center',\n      opacity: 0,\n    },\n    text: {\n      width: 400,\n      fontStyle: 'normal',\n      fontSize: 35,\n      fontWeight: 'bold',\n      color: greyUltralight,\n      lineHeight: '44px',\n      marginTop: 40,\n      marginBottom: 75,\n    },\n    bold: {\n      fontWeight: 500,\n      color: greenMedium,\n    },\n    small: {\n      fontSize: 25,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, {\n  useRef, useCallback, useEffect,\n} from 'react';\n\nimport { useMouseMove } from 'hooks';\nimport { interpolate, getDistance, SequenceAnimation } from 'utils';\n\nimport { SvgIcon } from '../SvgIcon';\nimport { MainButton } from '../MainButton';\nimport { useStyles } from './styles';\nimport {\n  TIntroCircleProps,\n  TStylesApplier,\n} from './types';\n\n\nlet activated = false;\n\nconst FOLLOW_STYLES = [\n  [\n    (x: number, y: number, d: number) => `perspective(600px) rotate3d(${-y}, ${x}, 0, ${d}deg)`,\n    () => 'transform 0.3s',\n  ],\n  [\n    (x: number, y: number, d: number) => `perspective(600px) rotate3d(${-y}, ${x}, 0, ${d / 2}deg)`,\n    () => 'transform 0.3s',\n  ],\n];\n\nconst getFollowStylesApplier = (xm: number, ym: number): TStylesApplier => {\n  if (!activated) {\n    return;\n  }\n  const semiW = window.innerWidth / 2;\n  const semiH = window.innerHeight / 2;\n  const x = interpolate(xm - semiW, window.innerWidth, 100);\n  const y = interpolate(ym - semiH, window.innerHeight, 100);\n\n  let d = interpolate(getDistance(semiW, semiH, xm, ym), semiW, 30) - 10;\n  if (d < 0) d = 0;\n\n  // eslint-disable-next-line consistent-return\n  return (nodeRef: React.RefObject<HTMLDivElement>, styleId: number): void => {\n    const styles = FOLLOW_STYLES[styleId];\n\n    if (styles) {\n      if (nodeRef.current) {\n        // eslint-disable-next-line no-param-reassign\n        nodeRef.current.style.transform = styles[0](x, y, d);\n        // eslint-disable-next-line no-param-reassign\n        nodeRef.current.style.transition = styles[1](x, y, d);\n      }\n    }\n  };\n};\n\nconst applyContentStyles = (nodeRef: React.RefObject<HTMLDivElement>, show: boolean): void => {\n  if (show) {\n    if (nodeRef.current) {\n      new SequenceAnimation<HTMLDivElement>(nodeRef)\n        .delay(2000)\n        .style('opacity', '1')\n        .style('transition', 'all 0.4s')\n        .apply();\n    }\n  } else {\n    // eslint-disable-next-line no-lonely-if\n    if (nodeRef.current) {\n      new SequenceAnimation<HTMLDivElement>(nodeRef)\n        .style('opacity', '0')\n        .style('transition', 'all 0.4s')\n        .apply();\n    }\n  }\n};\n\nconst applyContainerStyles = (nodeRef: React.RefObject<HTMLDivElement>, show: boolean): void => {\n  if (show) {\n    if (nodeRef.current) {\n      new SequenceAnimation<HTMLDivElement>(nodeRef)\n        .delay(600)\n        .style('width', '568px')\n        .style('height', '568px')\n        .style('transition', 'all 1s ease')\n        .apply();\n    }\n  } else {\n    // eslint-disable-next-line no-lonely-if\n    if (nodeRef.current) {\n      const size = 100;\n      new SequenceAnimation<HTMLDivElement>(nodeRef)\n        .delay(500)\n        .style('width', `${size}px`)\n        .style('height', `${size}px`)\n        .style('transition', 'all 1s')\n        .apply();\n    }\n  }\n};\n\nexport const IntroCircle: React.FC<TIntroCircleProps> = ({\n  id,\n  showMode = false,\n}) => {\n  const classes = useStyles();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const handleMouseMove = useCallback((xm: number, ym: number) => {\n    if (showMode) {\n      const applyFollowStyles = getFollowStylesApplier(xm, ym);\n\n      if (applyFollowStyles) {\n        applyFollowStyles(containerRef, 0);\n        applyFollowStyles(contentRef, 1);\n      }\n    }\n  }, [showMode]);\n\n  useMouseMove(id, handleMouseMove);\n\n  useEffect(() => {\n    setTimeout(() => {\n      activated = true;\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    applyContentStyles(contentRef, showMode);\n    applyContainerStyles(containerRef, showMode);\n  }, [showMode]);\n\n  return (\n    <div className={classes.container}>\n      <div\n        ref={containerRef}\n        className={classes.circleBg}\n      />\n      <div\n        className={classes.content}\n        ref={contentRef}\n      >\n        <SvgIcon\n          type=\"logo\"\n          color=\"rgba(255,255,255,0.6)\"\n          width={64}\n          height={64}\n        />\n        <div className={classes.text}>\n          Hello, I’m Ivan Stinsky\n          <div className={classes.bold}>\n            JS Fullstack Developer\n          </div>\n          <div className={classes.small}>\n            from Kharkiv, Ukraine\n          </div>\n        </div>\n        <MainButton>Get in touch</MainButton>\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({ gradients: { bg } }) => {\n  return {\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n    },\n    bg: {\n      position: 'absolute',\n      left: -350,\n      right: -350,\n      top: -200,\n      bottom: -200,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'visible',\n      border: '1px solid red',\n      background: bg,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback, useRef } from 'react';\n\nimport { useMouseMove } from 'hooks';\nimport { interpolate, getDistance } from 'utils';\n\nimport { useStyles } from './styles';\n\n\ntype TGradientBackgroundProps = {\n  id: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const GradientBackground: React.FC<TGradientBackgroundProps> = ({\n  id,\n  children,\n}) => {\n  const classes = useStyles();\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleMouseMove = useCallback((xm: number, ym: number) => {\n    const semiW = window.innerWidth / 2;\n    const semiH = window.innerHeight / 2;\n    const x = interpolate(xm - semiW, window.innerWidth, 100);\n    const y = interpolate(ym - semiH, window.innerHeight, 100);\n\n    let d = interpolate(getDistance(semiW, semiH, xm, 0), semiW, 25) - 20;\n    if (d < 0) d = 0;\n\n    if (containerRef && containerRef.current) {\n      containerRef.current.style.transform = `perspective(600px) rotate3d(0, ${x - y}, 0, ${d}deg)`;\n      containerRef.current.style.transition = 'transform 0.5s';\n    }\n  }, []);\n\n  useMouseMove(id, handleMouseMove);\n\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.bg}\n        ref={containerRef}\n      />\n      {children}\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({ colors: { primary: { greyUltraDark } } }) => {\n  return {\n    container: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 10,\n    },\n    version: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: 16,\n      color: greyUltraDark,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport metadata from 'metadata.json';\n\nimport { useStyles } from './styles';\n\n\nexport const Footer: React.FC<{}> = () => {\n  const classes = useStyles();\n  const buildNumber = `${metadata.buildVersion.major}.${metadata.buildVersion.minor}.${metadata.buildVersion.patch}`;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.version}>\n        Built with Travis CI ♥\n        <br />\n        Deploy version: {buildNumber}\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({ colors: { primary: { bg } } }) => {\n  return {\n    container: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: bg,\n      overflow: 'hidden',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n\nexport const Fallback: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container} />\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nimport { TPageHeaderSizes, TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getContainerStyles = (size: TContentSize, sizes: TPageHeaderSizes): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      marginTop: `${sizes.offsetTopCompact}px`,\n      marginBottom: `${sizes.offsetBottomCompact}px`,\n    });\n  }\n  return ({\n    marginTop: `${sizes.offsetTop}px`,\n    marginBottom: `${sizes.offsetBottom}px`,\n  });\n};\n\nconst getTitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      fontSize: '36px',\n      lineHeight: '45px',\n    });\n  }\n  return ({\n    fontSize: '50px',\n    lineHeight: '62px',\n  });\n};\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, subTitle },\n  },\n  sizes: {\n    content: { offsetHorizontal },\n    page: { header: headerSizes },\n  },\n}) => {\n  return {\n    container: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      marginLeft: offsetHorizontal,\n      marginRight: offsetHorizontal,\n      ...getContainerStyles(size, headerSizes),\n      transition: 'all 0.4s ease',\n    }),\n    title: ({ size }: TStyleProps) => ({\n      fontWeight: '300',\n      color: title,\n      fontFamily: 'Quicksand, sans-serif',\n      ...getTitleStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: subTitle,\n      fontFamily: 'Quicksand, sans-serif',\n      marginTop: 5,\n      opacity: size === 'compact' ? 0 : 1,\n      height: size === 'compact' ? '0px' : 'auto',\n      transition: 'opacity 0.2s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React from 'react';\n\nimport { TContentSize } from 'types/sizes';\n\nimport { useStyles } from './styles';\n\n\ninterface ContentHeaderProps {\n  title: string;\n  subTitle: string;\n  size?: TContentSize;\n}\n\nexport const ContentHeader: React.FC<ContentHeaderProps> = ({\n  title,\n  subTitle,\n  size = 'normal',\n}) => {\n  const classes = useStyles({ size });\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.title}>\n        {title}\n      </div>\n      <div className={classes.subTitle}>\n        {subTitle}\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nimport { TButtonType } from './types';\n\n\ntype TStylesProps = {\n  type: TButtonType;\n  active: boolean;\n};\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bgContent, greyUltralight },\n  },\n  sizes: {\n    menu: {\n      buttonSize, buttonOffset,\n    },\n  },\n}) => {\n  return {\n    button: ({ active }: TStylesProps) => {\n      return {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: buttonSize,\n        height: buttonSize,\n        border: 'none',\n        borderRadius: '50%',\n        backgroundColor: bgContent,\n        color: greyUltralight,\n        filter: 'drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.1))',\n        outline: 'none',\n        cursor: 'pointer',\n        marginTop: buttonOffset,\n        marginBottom: buttonOffset,\n        transition: 'transform 0.3s ease',\n        transform: active\n          ? 'scaleX(1.2) scaleY(1.2)'\n          : 'scaleX(1) scaleY(1)',\n\n        '&:hover': {\n          transform: 'scaleX(1.2) scaleY(1.2)',\n          transition: 'transform 0.3s ease',\n        },\n      };\n    },\n  };\n};\n\nexport const useStyles = (props: TStylesProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { memo, useCallback } from 'react';\n\nimport { SvgIcon } from '../../../SvgIcon';\n\nimport { useStyles } from './styles';\nimport { TButtonType } from './types';\n\n\ninterface MenuButtonProps {\n  innerRef?: React.RefObject<HTMLButtonElement>;\n  type: TButtonType;\n  active?: boolean;\n  onClick?: (id: string) => void;\n}\n\nconst MenuButtonComp: React.FC<MenuButtonProps> = ({\n  innerRef,\n  type,\n  active = false,\n  onClick,\n}) => {\n  const classes = useStyles({ type, active });\n  const iconColor = active\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.6)';\n\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(type);\n    }\n  }, [onClick, type]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={handleClick}\n      ref={innerRef}\n    >\n      <SvgIcon\n        type={type}\n        color={iconColor}\n        width={30}\n        height={30}\n      />\n    </button>\n  );\n};\n\nexport const MenuButton = memo(MenuButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStylesProps = {\n  activeButtonPosition: number;\n};\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bg, greenMedium },\n  },\n  sizes: {\n    menu: { width },\n  },\n}) => {\n  return {\n    container: {\n      display: 'flex',\n      flex: 1,\n      width,\n      minWidth: width,\n      maxWidth: width,\n      overflow: 'hidden',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundColor: bg,\n    },\n    header: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      minHeight: 100,\n      maxHeight: 180,\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingTop: 40,\n    },\n    buttons: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      padding: 0,\n    },\n    buttonsInner: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      position: 'relative',\n    },\n    tick: ({ activeButtonPosition }: TStylesProps) => ({\n      width: 5,\n      height: 96,\n      borderTopRightRadius: 4,\n      borderBottomRightRadius: 4,\n      backgroundColor: greenMedium,\n      position: 'absolute',\n      left: 0,\n      top: activeButtonPosition * 110 + 6,\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStylesProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { memo, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Routes } from 'types';\nimport { SvgIcon } from '../SvgIcon';\n\nimport { MenuButton } from './components';\nimport { useStyles } from './styles';\n\n\nconst isButtonActive = (url: string, path: string): boolean => {\n  return !!url && url.includes(path);\n};\n\nconst getActiveButtonPosition = (url: string): number => {\n  if (isButtonActive(url, 'projects')) {\n    return 0;\n  }\n  if (isButtonActive(url, 'about')) {\n    return 1;\n  }\n  if (isButtonActive(url, 'cv')) {\n    return 2;\n  }\n  if (isButtonActive(url, 'contacts')) {\n    return 3;\n  }\n  if (isButtonActive(url, 'articles')) {\n    return 4;\n  }\n  return 0;\n};\n\nconst MenuComp: React.FC<{}> = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const activeButtonPosition = getActiveButtonPosition(location.pathname);\n  const classes = useStyles({ activeButtonPosition });\n\n  const getNavigatorHandler = useCallback((route: Routes) => () => {\n    history.push(route);\n  }, [history]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <SvgIcon\n          type=\"logo\"\n          color=\"rgba(255,255,255,0.6)\"\n          width={60}\n          height={60}\n        />\n      </div>\n      <div className={classes.buttons}>\n        <div className={classes.buttonsInner}>\n          <div className={classes.tick} />\n          <MenuButton\n            type=\"projects\"\n            onClick={getNavigatorHandler(Routes.PROJECTS)}\n            active={isButtonActive(location.pathname, 'projects')}\n          />\n          <MenuButton\n            type=\"about\"\n            onClick={getNavigatorHandler(Routes.ABOUT)}\n            active={isButtonActive(location.pathname, 'about')}\n          />\n          <MenuButton\n            type=\"cv\"\n            onClick={getNavigatorHandler(Routes.CV)}\n            active={isButtonActive(location.pathname, 'cv')}\n          />\n          <MenuButton\n            type=\"contacts\"\n            onClick={getNavigatorHandler(Routes.CONTACTS)}\n            active={isButtonActive(location.pathname, 'contacts')}\n          />\n          <MenuButton\n            type=\"articles\"\n            onClick={getNavigatorHandler(Routes.ARTICLES)}\n            active={isButtonActive(location.pathname, 'articles')}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Menu = memo(MenuComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStyleProps = {\n  transitionState: string;\n};\n\nconst TRANSITION_TIME = '0.6s';\nconst TRANSFORM_HIDE = 'translateY(30px)';\nconst TRANSFORM_SHOW = 'translateY(0px)';\n\nconst getContainerStyles = (transitionState: string): AppInnerStyles => {\n  switch (transitionState) {\n    case 'exiting':\n      return {\n        zIndex: '100',\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'exited':\n      return {\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'entering':\n      return {\n        zIndex: '101',\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'entered':\n      return {\n        opacity: '1',\n        transform: TRANSFORM_SHOW,\n      };\n    default:\n      return {\n        opacity: '1',\n      };\n  }\n};\n\nconst styles: AppStyles = ({ colors: { primary: { bgContent } } }) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flex: 1,\n      backgroundColor: bgContent,\n      overflow: 'hidden',\n    },\n    container: ({ transitionState }: TStyleProps) => ({\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      backgroundColor: bgContent,\n      overflow: 'hidden',\n      ...getContainerStyles(transitionState),\n      transition: `all ${TRANSITION_TIME}`,\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { memo } from 'react';\n\nimport { useStyles } from './styles';\n\n\ntype TTransitionType =\n  | 'entering'\n  | 'entered'\n  | 'exiting'\n  | 'exited'\n  | 'unmounted';\n\ninterface TransitionScreenWrapperProps {\n  transitionState: TTransitionType;\n  children: JSX.Element | JSX.Element[];\n}\n\nconst TransitionScreenWrapperComp: React.FC<TransitionScreenWrapperProps> = ({\n  transitionState,\n  children,\n}) => {\n  const classes = useStyles({ transitionState });\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport const TransitionScreenWrapper = memo(\n  TransitionScreenWrapperComp,\n  (prevProps, nextProps) => {\n    return prevProps.transitionState === nextProps.transitionState;\n  },\n);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({ colors: { typography: { title } } }) => {\n  return {\n    title: {\n      fontSize: 34,\n      fontWeight: 300,\n      fontFamily: 'Quicksand, sans-serif',\n      lineHeight: '42px',\n      color: title,\n      marginBottom: 50,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n\ninterface SectionTitleProps {\n  children: string | number;\n}\n\nexport const SectionTitle: React.FC<SectionTitleProps> = ({\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.title}>\n      {children}\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TButtonStyleProps = {\n  width: number;\n}\n\nconst styles: AppStyles = ({ colors: { primary: { greenMedium } } }) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 24 },\n    },\n    '@keyframes push': {\n      from: {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n      },\n      '50%': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n      },\n      to: {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n      },\n    },\n    button: ({ width }: TButtonStyleProps) => ({\n      position: 'relative',\n      background: 'transparent',\n      width: `${width}px`,\n      minHeight: '37px',\n      height: '37px',\n      border: 'none',\n      borderRadius: '25px',\n      padding: '0px',\n      color: greenMedium,\n      fontFamily: 'Quicksand, sans-serif',\n      cursor: 'pointer',\n      fontSize: '18px',\n      fontWeight: '500',\n      fontStyle: 'normal',\n      lineHeight: '28px',\n      boxSizing: 'border-box',\n      outline: 'none',\n      transition: 'transform 0.3s',\n\n      // '&:hover': {\n      //   transform: 'scaleX(1.1) scaleY(1.1)',\n      //   transition: 'transform 0.3s',\n      // },\n      '&:active': {\n        animation: '$push 0.1s ease',\n      },\n    }),\n    svg: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n\n      '&:hover': {\n        strokeDasharray: 4,\n        animation: '$dash 1s linear infinite',\n      },\n    },\n  };\n};\n\nexport const useStyles = (props: TButtonStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { forwardRef } from 'react';\n\nimport { combineClasses } from 'utils/styles';\n\nimport { useStyles } from './styles';\n\n\ninterface ButtonProps {\n  text: string | number;\n  width: number;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(({\n  text,\n  width = 200,\n  className,\n  onClick,\n}, ref) => {\n  const classes = useStyles({ width });\n\n  return (\n    <button\n      ref={ref}\n      className={combineClasses(classes.button, className)}\n      onClick={onClick}\n    >\n      <svg\n        className={classes.svg}\n        width={width}\n        height={37}\n        viewBox={`0 0 ${width} 37`}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <rect x=\"2\" y=\"2\" width={width - 4} height={33} rx=\"19\" stroke=\"#81AF65\" strokeWidth=\"2\" />\n      </svg>\n      {text}\n    </button>\n  );\n});\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStylesProps = {\n  showTopUnderline: boolean;\n}\n\nconst styles: AppStyles = ({ colors: { primary: { underline } } }) => {\n  return {\n    innerScroll: ({ showTopUnderline }: TStylesProps) => ({\n      width: '100%',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      overflowY: 'scroll',\n      borderTopWidth: showTopUnderline ? 1 : 0,\n      borderWidth: 0,\n      borderColor: underline,\n      borderStyle: 'solid',\n      paddingRight: 17,\n      boxSizing: 'content-box',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStylesProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { useCallback, useState } from 'react';\n\nimport { useMouseScroll } from 'hooks';\n\nimport { useStyles } from './styles';\n\n\ninterface ScrollContentProps {\n  children: JSX.Element | JSX.Element[];\n  onScroll?: (scrollY: number) => void;\n}\n\nexport const ScrollContent: React.FC<ScrollContentProps> = ({\n  children,\n  onScroll,\n}) => {\n  const [showTopUnderline, setShowTopUnderline] = useState(false);\n\n  const handleScrollY = useCallback((scrollY: number) => {\n    setShowTopUnderline(scrollY > 0);\n\n    if (onScroll) {\n      onScroll(scrollY);\n    }\n  }, [onScroll, setShowTopUnderline]);\n\n  const [containerRef] = useMouseScroll<HTMLDivElement>(handleScrollY);\n\n  // TODO: Show custom scrollbar\n\n  const classes = useStyles({ showTopUnderline });\n\n  return (\n    <div\n      ref={containerRef}\n      className={classes.innerScroll}\n    >\n      {children}\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal, offsetTop, offsetBottom },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      paddingTop: offsetTop,\n      paddingBottom: offsetBottom,\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      marginRight: sidebarWidth,\n    },\n    container: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { combineClasses } from 'utils/styles';\n\nimport { useStyles } from './styles';\n\n\ninterface ContentContainerProps {\n  children: JSX.Element | JSX.Element[];\n  className?: string;\n}\n\nexport const ContentContainer: React.FC<ContentContainerProps> = ({\n  children,\n  className,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={combineClasses(classes.wrapper, className)}>\n      <div className={classes.container}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({ colors: { typography: { title, text } } }) => {\n  return {\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingBottom: 156,\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      height: 'auto',\n      color: title,\n      marginTop: 70,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      textAlign: 'center',\n      marginTop: 40,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\nexport const NoPage: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type=\"not-found\"\n        width={200}\n        height={200}\n        color=\"rgba(255,255,255,0.05)\"\n      />\n      <div className={classes.title}>\n        Not found\n      </div>\n      <div className={classes.text}>\n        Sorry, there is no page you are looking for.\n        <br /><br />\n        But don&apos;t worry maybe this page is under heavy development as well.\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nimport { TCategoryLabelColors } from 'types/colors';\n\nimport { TCategoryLabelSize, TCategoryLabelType } from './types';\n\n\ntype TStylesProps = {\n  size: TCategoryLabelSize;\n  type: TCategoryLabelType;\n}\n\nconst getBgColor = (type: TCategoryLabelType, colors: TCategoryLabelColors): string => {\n  if (!colors[type]) {\n    return colors.other;\n  }\n  return colors[type];\n};\n\nconst getSizeStyles = (size: TCategoryLabelSize): AppInnerStyles => {\n  if (size === 'small') {\n    return ({\n      height: '18px',\n      fontSize: '11px',\n      paddingLeft: '8px',\n      paddingRight: '8px',\n      lineHeight: '14px',\n      borderRadius: '10px',\n    });\n  }\n  return ({\n    height: '22px',\n    fontSize: '14px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    lineHeight: '17px',\n    borderRadius: '11px',\n  });\n};\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title },\n    categoryLabels,\n  },\n}) => {\n  return {\n    label: ({ type, size }: TStylesProps) => ({\n      backgroundColor: getBgColor(type, categoryLabels),\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight: 'normal',\n      color: title,\n      fontFamily: 'Quicksand, sans-serif',\n      margin: 3,\n      ...getSizeStyles(size),\n    }),\n  };\n};\n\nexport const useStyles = (props: TStylesProps): AppInnerStyles => useTStyles(styles, props);\n","import React from 'react';\n\nimport { TCategoryLabelSize, TCategoryLabelType } from './types';\nimport { useStyles } from './styles';\n\n\ninterface CategoryLabelProps {\n  label: string;\n  size?: TCategoryLabelSize;\n  type: string;\n}\n\nexport const CategoryLabel: React.FC<CategoryLabelProps> = ({\n  label,\n  size = 'normal',\n  type,\n}) => {\n  const classes = useStyles({ size, type: type as TCategoryLabelType });\n\n  return (\n    <div className={classes.label}>\n      {label}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const TicketSalingIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 176 156\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M144.231 32.8717L138.914 27.6143C138.12 26.8296 137.121 26.8351 136.572 27.3906L119.569 44.5853C118.863 45.2993 119.343 46.5069 120.216 47.37C121.063 48.2071 122.302 48.7 123.008 47.9857L129.077 41.8484L132.04 44.7782C135.531 48.2308 139.904 49.2586 144.194 44.9205L144.351 44.7613C148.641 40.4232 147.59 36.1937 144.231 32.8717ZM140.807 41.4668L140.493 41.7837C138.453 43.8473 136.427 43.7799 134.707 42.0797L131.745 39.1499L138.075 32.7486L141.037 35.6784C142.757 37.3786 142.847 39.4036 140.807 41.4668Z\" fill={color} />\n      <path d=\"M114.839 22.4241L111.626 25.6461C112.664 24.6052 113.743 23.5227 114.839 22.4241Z\" fill={color} />\n      <path d=\"M115.158 22.1042C115.051 22.2108 114.945 22.3176 114.839 22.4241L115.158 22.1042Z\" fill={color} />\n      <path d=\"M109.482 27.7963L108.02 29.2621C108.489 28.7919 108.978 28.3017 109.482 27.7963Z\" fill={color} />\n      <path d=\"M111.626 25.6461C111.362 25.9108 111.101 26.172 110.843 26.4312L111.626 25.6461Z\" fill={color} />\n      <path d=\"M110.843 26.4312L109.851 27.4256C110.176 27.0997 110.507 26.7684 110.843 26.4312Z\" fill={color} />\n      <path d=\"M109.851 27.4256C109.727 27.5503 109.604 27.6736 109.482 27.7963L109.851 27.4256Z\" fill={color} />\n      <path d=\"M119.77 17.4795L117.063 20.1937C117.97 19.2842 118.877 18.3753 119.77 17.4795Z\" fill={color} />\n      <path d=\"M130.951 6.26712C130.942 6.27637 130.933 6.28525 130.924 6.29414L130.951 6.26712Z\" fill={color} />\n      <path d=\"M131.926 5.28862L131.893 5.32196C131.913 5.30203 131.926 5.28862 131.926 5.28862Z\" fill={color} />\n      <path d=\"M131.789 5.42618L130.951 6.26712C131.351 5.86562 131.634 5.58121 131.789 5.42618Z\" fill={color} />\n      <path d=\"M119.945 17.3033C119.887 17.362 119.828 17.4204 119.77 17.4795L119.945 17.3033Z\" fill={color} />\n      <path d=\"M130.924 6.29314L119.945 17.3033C124.693 12.5423 129.032 8.19064 130.924 6.29314Z\" fill={color} />\n      <path d=\"M117.063 20.1937L115.158 22.1042C115.79 21.47 116.426 20.8321 117.063 20.1937Z\" fill={color} />\n      <path d=\"M103.176 34.1204C102.776 34.5219 102.492 34.8058 102.337 34.9612L103.176 34.1204Z\" fill={color} />\n      <path d=\"M103.203 34.094L103.176 34.1204C103.185 34.1115 103.194 34.1032 103.203 34.094Z\" fill={color} />\n      <path d=\"M102.337 34.9612L102.233 35.0651C102.256 35.0431 102.292 35.0069 102.337 34.9612Z\" fill={color} />\n      <path d=\"M108.02 29.2621C107.936 29.3463 107.853 29.4294 107.77 29.5126L108.02 29.2621Z\" fill={color} />\n      <path d=\"M174.641 40.4482L135.143 1.39296C133.356 -0.373918 130.458 -0.364294 128.683 1.41565L99.4918 30.6888C91.6697 29.8146 83.3451 28.8225 80.8856 28.5276C77.0273 28.066 73.0948 29.2216 70.0993 31.7001L47.4101 50.4709C43.7254 53.5193 41.1043 57.5694 39.8307 62.1839C39.4437 63.5864 39.0019 65.1659 38.5197 66.8579C38.1388 68.194 38.9133 69.5862 40.2494 69.9674C41.5856 70.3473 42.9778 69.5738 43.3586 68.2377C43.8454 66.5306 44.2906 64.9373 44.6811 63.5231C45.679 59.9079 47.7318 56.7351 50.6176 54.3478L73.3069 35.5772C75.2456 33.9733 77.7901 33.2281 80.2878 33.524C82.3362 33.7698 88.4464 34.4979 94.9539 35.2404L81.2712 48.9615L80.5501 49.0722C80.1028 49.1406 79.6821 49.3286 79.3328 49.6164L70.3919 56.974C69.8109 57.4518 69.4748 58.1644 69.4748 58.9169L69.4765 83.186C69.4765 83.405 69.505 83.6229 69.5614 83.8343C70.5899 87.6878 74.8747 91.0679 78.7306 91.0679H78.8172C81.1743 91.0679 83.3857 90.1545 85.0439 88.4959C86.5024 87.0364 88.6839 84.8546 91.0303 82.5075L95.6307 77.9067C100.699 72.8384 110.138 69.006 116.686 69.348C116.689 69.348 116.693 69.348 116.696 69.3483C117.035 69.3666 117.359 69.3982 117.668 69.4398C117.831 69.4618 117.991 69.4858 118.146 69.514C118.148 69.5144 118.151 69.5151 118.153 69.5154C119.49 69.7622 120.491 70.2452 121.036 70.9213C121.092 70.9915 121.153 71.0585 121.216 71.1221C122.2 72.1066 122.196 72.9075 122.082 73.4954C121.989 73.9773 121.761 74.507 121.418 75.058C117.086 71.7622 110.86 72.088 106.906 76.0415L103.11 79.8376C100.415 82.5332 100.415 86.9202 103.11 89.6162L105.151 91.6567L94.8422 101.966C94.7731 102.035 94.7081 102.108 94.6476 102.184L86.0466 113.062C82.8388 117.119 78.5577 120.15 73.6799 121.824L56.7357 127.529C54.2789 128.251 52.0249 129.589 50.2141 131.4L48.9006 132.714L23.2032 107.018L33.2785 96.9426C33.4579 96.7628 33.6095 96.5572 33.7274 96.3324C35.0426 93.8258 36.6648 89.6788 38.5492 84.0069C38.9875 82.6883 38.2735 81.2645 36.9549 80.8262C35.6356 80.3879 34.2121 81.1015 33.7738 82.4205C32.0599 87.5788 30.6038 91.3573 29.4419 93.6629L19.645 103.46L19.127 102.942C16.8933 100.708 13.2592 100.708 11.0251 102.942L1.67819 112.289C0.596064 113.371 0 114.81 0 116.34C0 117.87 0.59572 119.309 1.67819 120.392L35.5376 154.251C36.6545 155.367 38.1213 155.926 39.5884 155.926C41.0555 155.926 42.5223 155.367 43.6395 154.251L52.9864 144.903C54.0685 143.821 54.6646 142.383 54.6646 140.852C54.6646 139.322 54.0685 137.883 52.9864 136.801L52.4577 136.272L53.7712 134.959C54.997 133.733 56.525 132.829 58.1901 132.346C58.2245 132.337 58.2582 132.326 58.2922 132.315L75.2982 126.588C81.1042 124.597 86.1855 120.999 89.9929 116.184L98.5028 105.421L104.097 99.827L104.565 101.145C104.809 101.832 105.34 102.381 106.019 102.646L112.644 105.238C113.186 105.45 113.751 105.554 114.312 105.553C115.506 105.553 116.678 105.085 117.553 104.208L153.64 68.0187C154.621 67.0346 154.619 65.442 153.636 64.4609C152.651 63.4795 151.058 63.4819 150.077 64.4657L114.201 100.444L108.923 98.3788L108.038 95.8862L123.541 80.3827C125.46 78.4639 126.631 76.4688 127.021 74.4517C127.352 72.7429 127.108 71.1073 126.318 69.6227L129.805 73.0708C130.793 74.0478 132.387 74.0388 133.363 73.0509C134.337 72.066 134.331 70.4807 133.354 69.503C133.35 69.4996 133.347 69.4962 133.343 69.4927L106.071 42.5258C105.083 41.5489 103.49 41.5578 102.513 42.5458C101.539 43.5306 101.545 45.116 102.523 46.0936C102.526 46.097 102.529 46.1005 102.533 46.1039L122.286 65.6358C120.878 64.9119 119.168 64.4729 117.208 64.3409C117.127 64.3354 117.047 64.3279 116.965 64.3234C116.932 64.3217 116.899 64.3217 116.866 64.32C114.004 64.1807 110.756 64.6678 107.49 65.6303L95.2206 53.4983C94.2327 52.5214 92.6394 52.5303 91.6628 53.5183C90.6893 54.5031 90.6948 56.0885 91.6725 57.0661C91.6759 57.0696 91.6793 57.073 91.6828 57.0764L102.287 67.5615C98.3814 69.3177 94.7476 71.6714 92.0712 74.3479C90.9317 75.4874 89.7468 76.6726 88.5801 77.8393L87.984 77.6351L85.6585 71.0839C85.4018 70.3607 84.8287 69.7938 84.1024 69.5453L77.4625 67.2724L75.3426 62.0309L131.799 5.41587C131.796 5.41897 131.793 5.42274 131.789 5.42618L131.893 5.32196C131.892 5.32265 131.891 5.32409 131.89 5.32478L131.926 5.28862L170.779 43.7056L161.69 52.8194C160.709 53.8032 160.711 55.3962 161.695 56.3773C162.679 57.3583 164.272 57.3559 165.253 56.3724L174.664 46.9355C175.53 46.0671 176.004 44.9128 176 43.6863C175.996 42.4602 175.513 41.31 174.641 40.4482ZM49.4286 141.345L40.0817 150.692C39.8098 150.964 39.3674 150.964 39.0955 150.692L5.23635 116.833C5.06757 116.664 5.03182 116.472 5.03182 116.34C5.03182 116.208 5.06723 116.016 5.23601 115.847L14.5829 106.5C14.8552 106.228 15.2972 106.228 15.5692 106.5L43.0575 133.988C41.8094 132.888 40.1769 132.215 38.3863 132.215C34.4827 132.215 31.3064 135.391 31.3064 139.294C31.3064 143.198 34.4823 146.374 38.3863 146.374C42.2903 146.374 45.4662 143.198 45.4662 139.294C45.4662 137.504 44.7928 135.872 43.6928 134.624L47.1207 138.052C47.1213 138.052 47.1217 138.053 47.1224 138.053L49.4286 140.36C49.5974 140.528 49.6328 140.721 49.6328 140.852C49.6328 140.984 49.5977 141.176 49.4286 141.345ZM40.4344 139.294C40.4344 140.424 39.5155 141.342 38.3863 141.342C37.2571 141.342 36.3382 140.424 36.3382 139.294C36.3382 138.165 37.2571 137.247 38.3863 137.247C39.5155 137.247 40.4344 138.165 40.4344 139.294ZM108.709 88.0993L106.668 86.0588C105.934 85.3245 105.934 84.13 106.668 83.3957L110.464 79.6C111.639 78.4247 113.183 77.8373 114.727 77.8373C115.869 77.8373 117.012 78.1594 118.005 78.8029L108.709 88.0993ZM81.3238 73.9127L83.649 80.4639C83.8391 80.9994 84.2034 81.4484 84.6744 81.7467C83.4389 82.9825 82.3369 84.0853 81.484 84.9385C80.7766 85.6459 79.8292 86.0361 78.8162 86.0361H78.7296C77.237 86.0361 75.1006 84.3651 74.5069 82.7993L74.5062 71.5645C74.5843 71.6006 74.6644 71.6336 74.7465 71.6614L81.3238 73.9127Z\" fill={color} />\n      <path d=\"M103.858 33.4357C103.616 33.6791 103.395 33.9001 103.202 34.0943L103.858 33.4357Z\" fill={color} />\n      <path d=\"M102.233 35.0651C102.213 35.085 102.2 35.0983 102.2 35.0983L102.233 35.0651Z\" fill={color} />\n      <path d=\"M107.089 30.1954C106.771 30.514 106.465 30.8217 106.171 31.1163L107.089 30.1954Z\" fill={color} />\n      <path d=\"M104.912 32.3792L103.858 33.4357C104.172 33.1208 104.524 32.7677 104.912 32.3792Z\" fill={color} />\n      <path d=\"M107.77 29.5126L107.089 30.1954C107.311 29.973 107.538 29.7456 107.77 29.5126Z\" fill={color} />\n      <path d=\"M106.171 31.1163L105.576 31.7132C105.768 31.5207 105.966 31.3215 106.171 31.1163Z\" fill={color} />\n      <path d=\"M105.576 31.7132C105.346 31.9442 105.123 32.1678 104.912 32.3792L105.576 31.7132Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const VirtualToursIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 179 179\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M59.4303 154.652H43.9128C40.049 154.652 36.9053 157.796 36.9053 161.66C36.9053 165.523 40.049 168.667 43.9128 168.667H59.4303C63.2941 168.667 66.4375 165.523 66.4375 161.66C66.4375 157.796 63.2938 154.652 59.4303 154.652ZM59.4303 163.423H43.9128C42.9406 163.423 42.1494 162.632 42.1494 161.66C42.1494 160.687 42.9406 159.896 43.9128 159.896H59.4303C60.4025 159.896 61.1933 160.688 61.1933 161.66C61.1933 162.632 60.4022 163.423 59.4303 163.423Z\" fill={color} />\n      <path d=\"M173.394 96.3177C166.141 78.6013 146.366 65.8248 127.88 63.6894C124.726 63.322 121.474 63.2129 118.295 63.3678L121.984 58.5701L152.914 49.5022C159.124 47.6846 161.796 40.1694 158.315 34.8826C152.637 25.4666 136.518 25.4281 127.841 29.2724C123.779 31.0208 118.8 33.2405 113.408 35.6846L103.344 32.0599V10.2446C103.343 4.59596 98.7475 0 93.0985 0H31.0027C27.6125 0 27.6125 5.24414 31.0027 5.24414H93.0985C95.8559 5.24414 98.099 7.48758 98.099 10.2446V17.9077H5.24414V10.2446C5.24414 7.48758 7.48758 5.24414 10.2446 5.24414H16.8351C20.2253 5.24414 20.2253 0 16.8351 0H10.2446C4.59596 0 0 4.59596 0 10.2446V146.909V168.755C0 174.404 4.59596 179 10.2446 179H93.0985C96.152 179 98.9891 177.651 100.912 175.379C107.359 177.782 114.268 179 121.148 179C128.957 179 136.533 177.47 143.667 174.453C146.79 173.132 144.747 168.302 141.624 169.623C136.842 171.646 131.839 172.93 126.693 173.467L118.763 154.939C117.06 150.96 112.878 148.602 108.591 149.201L95.9188 150.975C92.7213 151.424 87.1234 148.229 87.5216 144.647L88.9938 131.396C89.3018 128.623 88.3928 125.858 86.4997 123.809L70.5931 106.595C73.6519 95.9402 80.2032 86.3231 88.9595 79.5365L87.4303 85.0173C86.8814 86.9849 88.9469 88.7508 90.6925 88.2383L100.811 85.2764C101.344 85.1204 101.814 84.7988 102.152 84.3586L113.941 69.0297C115.742 68.7835 117.567 68.6315 119.395 68.5713L121.114 83.7556L112.299 99.0443C110.005 103.023 110.713 108.027 114.021 111.212L117.122 114.2L121.124 127.316C123.009 133.497 131.159 135.343 135.555 130.752L145.757 120.096L159.86 118.89C163.099 118.613 165.87 116.571 167.093 113.559L170.926 104.119C172.759 109.463 173.756 115.191 173.756 121.148C173.756 137.094 166.641 152.002 154.236 162.051C151.566 164.214 154.957 168.215 157.536 166.126C171.177 155.077 179 138.683 179 121.148C179 112.266 176.554 104.037 173.394 96.3177V96.3177ZM139.767 38.2312C135.983 39.309 133.146 36.4768 132.162 33.2279C138.311 31.1194 144.904 31.8816 150.51 35.1169L139.767 38.2312ZM94.1019 44.556L80.714 32.5951L85.4805 31.1998L106.578 38.7982C102.462 40.6844 98.2392 42.6352 94.1019 44.556V44.556ZM93.0985 173.756H10.2446C7.48758 173.756 5.24414 171.512 5.24414 168.755V149.531H70.7529C74.0494 155.361 78.3258 160.567 83.3609 164.919C87.1118 168.186 91.2225 170.919 95.6028 173.083C94.8553 173.515 93.9963 173.756 93.0985 173.756ZM83.7818 130.816L82.3096 144.068C81.524 151.135 89.987 157.102 96.646 156.168L109.318 154.394C111.266 154.121 113.168 155.194 113.942 157.002L121.11 173.75C119.649 173.749 118.199 173.689 116.76 173.571C115.633 173.473 114.544 173.361 113.005 173.125C103.531 171.646 94.8868 167.631 87.7904 161.797C87.5279 161.579 87.5684 161.613 86.9248 161.069C84.7551 159.193 82.7169 157.121 80.8314 154.864C70.9438 143.025 66.8271 127.937 69.2118 112.827L82.6484 127.368C83.5087 128.299 83.9216 129.556 83.7818 130.816V130.816ZM71.1434 92.0357C61.9564 107.784 60.8198 127.601 68.1301 144.287H5.24414V23.1518H98.099V30.1709L86.4528 25.9763C85.9298 25.7879 85.3606 25.7708 84.8278 25.9267L74.7098 28.8886C72.6184 29.9828 72.2817 31.4736 73.6994 33.3604L88.9263 46.9641C77.3644 52.354 67.1967 57.1625 63.0479 59.1291L57.6642 51.6142C57.0153 50.7087 55.8651 50.3112 54.796 50.6248L48.394 52.4987C47.0039 52.9057 46.2072 54.3622 46.6141 55.7519L50.427 68.7769C51.9995 74.1497 57.8198 77.3385 63.1971 75.7639L92.3965 67.2166L91.1519 71.6776C82.9137 76.684 76.003 83.7059 71.1434 92.0357V92.0357ZM98.5168 80.4832L93.7502 81.8785L100.32 58.3316C100.71 56.9367 99.8942 55.4907 98.4996 55.1012C97.1033 54.7121 95.6587 55.5274 95.2693 56.922L94.0568 61.2666L61.7239 70.7312C58.6896 71.3186 56.6014 70.176 55.4599 67.304L52.3841 56.7954L54.4845 56.1805L60.0611 63.9642C60.8002 64.9962 62.1728 65.35 63.3185 64.805C63.7558 64.5973 105.515 44.7493 127.311 35.2193C129.311 40.9379 135.092 45.0206 141.22 43.2698L154.586 39.395C154.67 39.8859 154.673 40.3995 154.586 40.9221C154.297 42.6513 153.121 43.977 151.44 44.4693L127.41 51.5142L127.757 51.0632C128.64 49.9151 128.425 48.2688 127.277 47.3861C126.129 46.5033 124.483 46.7183 123.6 47.8661L110.396 65.0361C110.393 65.0399 110.39 65.0438 110.387 65.048L98.5168 80.4832ZM162.233 111.586C161.757 112.76 160.676 113.557 159.413 113.665L144.324 114.955C143.689 115.009 143.095 115.293 142.654 115.754L131.767 127.125C129.379 128.829 127.503 128.382 126.14 125.785L121.94 112.019C121.809 111.592 121.572 111.205 121.251 110.895L117.659 107.435C116.09 105.924 115.755 103.551 116.843 101.664L126.089 85.6277C126.368 85.1421 126.486 84.5799 126.423 84.023L124.683 68.6619C142.895 69.8757 159.716 81.0143 168.033 97.3019L162.233 111.586Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const MedicalIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 144 179\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M104.227 92.6595H108.532V96.9648C108.532 98.4133 109.706 99.587 111.154 99.587C112.602 99.587 113.776 98.4133 113.776 96.9648V92.6595H118.072C119.52 92.6595 120.694 91.4857 120.694 90.0372C120.694 88.5887 119.52 87.415 118.072 87.415H113.776V83.1194C113.776 81.6709 112.602 80.4972 111.154 80.4972C109.706 80.4972 108.532 81.6709 108.532 83.1194V87.415H104.227C102.778 87.415 101.604 88.5887 101.604 90.0372C101.604 91.4857 102.778 92.6595 104.227 92.6595Z\" fill={color} />\n      <path d=\"M63.5233 110.747C74.466 110.747 84.9385 107.598 93.9925 101.617C97.7186 107.122 104.021 110.747 111.154 110.747C122.568 110.747 131.853 101.456 131.853 90.0372C131.853 80.6164 125.525 72.6508 116.898 70.1544C118.225 65.3435 118.9 60.3829 118.9 55.3685C118.9 24.8381 94.0583 0 63.5233 0C47.6165 0 32.4642 6.85206 21.9515 18.7993C20.9949 19.8863 21.1005 21.5435 22.1879 22.5001C23.2752 23.4567 24.9321 23.3515 25.8887 22.2634C35.406 11.4476 49.1234 5.24446 63.5233 5.24446C91.1661 5.24446 113.656 27.7299 113.656 55.3682C113.656 60.1155 112.991 64.8093 111.678 69.3503C111.503 69.3457 111.33 69.337 111.154 69.337C99.7349 69.337 90.4448 78.6232 90.4448 90.0369C90.4448 92.4413 90.8613 94.7492 91.6179 96.898C83.3061 102.534 73.6364 105.502 63.5233 105.502C35.8801 105.502 13.3908 83.0124 13.3908 55.3682C13.3908 47.5515 15.1425 40.0645 18.5975 33.116C19.2422 31.8192 18.7136 30.2451 17.4168 29.6004C16.1204 28.9561 14.5463 29.484 13.9013 30.7811C10.0826 38.4618 8.14636 46.7337 8.14636 55.3678C8.14636 85.9042 32.9883 110.747 63.5233 110.747ZM111.154 74.5814C119.676 74.5814 126.609 81.5146 126.609 90.0369C126.609 98.5647 119.676 105.502 111.154 105.502C102.627 105.502 95.6893 98.5643 95.6893 90.0369C95.6893 81.515 102.627 74.5814 111.154 74.5814Z\" fill={color} />\n      <path d=\"M34.7103 62.5523C32.0608 66.9189 31.2717 72.0549 32.4884 77.0131C33.7051 81.9712 36.7826 86.1608 41.1544 88.8106C44.2406 90.6798 47.6516 91.5696 51.0223 91.5696C52.0583 91.5696 53.089 91.4762 54.1068 91.3108C54.2547 91.4633 54.4036 91.6126 54.5547 91.7636L54.6421 91.8514C54.67 91.879 54.6984 91.9063 54.7274 91.9328C57.3521 94.3317 60.6662 95.5162 63.972 95.5159C67.6864 95.5159 71.3897 94.0205 74.0899 91.0738L95.1293 68.0814C100.232 62.5114 99.8524 53.829 94.2811 48.7248C91.5879 46.2634 88.0877 45.0054 84.4218 45.1579C81.1126 45.304 78.0432 46.6018 75.6671 48.8314L74.6165 25.1041C74.4563 21.4613 72.8774 18.0909 70.1706 15.6144C67.4648 13.1394 63.9709 11.8653 60.3257 12.0241C52.7764 12.3562 46.9047 18.7674 47.2365 26.3163L47.9211 41.7724C47.9211 41.8105 47.9187 41.8483 47.9204 41.8867C47.9222 41.9262 47.9278 41.9643 47.9313 42.0035L48.4421 53.5347C42.9378 54.3014 37.8081 57.4414 34.7103 62.5523ZM70.2223 87.532C67.5784 90.4175 63.3797 91.0395 60.062 89.3082C62.9951 87.7481 65.5614 85.4115 67.4071 82.3725C67.4085 82.3704 67.4099 82.3687 67.4113 82.3666C67.4127 82.3645 67.4137 82.3621 67.4148 82.36C69.7954 78.4256 70.5852 73.9643 69.9692 69.7309L78.9694 77.9728L70.2223 87.532ZM75.2426 56.9971C75.2535 56.9855 75.2643 56.9736 75.2748 56.9621L78.7889 53.1238C81.9342 49.6828 87.2965 49.4454 90.7411 52.5942C94.1779 55.7429 94.4118 61.1014 91.2617 64.54L82.5101 74.1038L70.0373 62.6824L75.2426 56.9971ZM70.1828 43.5247L70.6572 54.2388L65.4708 59.9039C64.2059 58.4491 62.701 57.161 60.9672 56.109C58.6716 54.7182 56.1962 53.8724 53.6918 53.528L53.282 44.2736L70.1828 43.5247ZM60.5564 17.264C62.7993 17.1605 64.9579 17.9535 66.6309 19.4841C68.3035 21.0145 69.279 23.092 69.3776 25.3352L69.951 38.2855L53.0498 39.0348L52.4761 26.0855C52.2712 21.426 55.8962 17.4689 60.5564 17.264ZM51.0856 58.5907C53.532 58.5907 56.0081 59.2368 58.2485 60.5937C64.0213 64.097 66.3299 71.1686 64.0688 77.276L40.7708 63.1593C43.4437 60.2004 47.2271 58.5907 51.0856 58.5907ZM61.3497 81.76C58.6744 84.7182 54.8907 86.3276 51.0318 86.3269C48.5865 86.3269 46.1107 85.6811 43.872 84.3252C40.6984 82.4019 38.4647 79.3612 37.5818 75.7631C36.9113 73.0294 37.0833 70.2218 38.0472 67.6405L61.3497 81.76Z\" fill={color} />\n      <path d=\"M141.918 142.129C140.905 140.488 139.492 139.278 137.821 138.53C137.913 138.366 138.007 138.204 138.089 138.032C139.088 135.939 139.213 133.59 138.442 131.422C137.666 129.232 136.078 127.484 133.971 126.499C131.867 125.515 129.482 125.409 127.255 126.198C127.241 126.203 127.228 126.208 127.214 126.213L119.091 129.243C119.131 128.184 118.986 127.109 118.621 126.07C117.852 123.903 116.283 122.164 114.202 121.174C112.082 120.165 109.677 120.049 107.431 120.848C107.418 120.852 107.406 120.856 107.394 120.861L92.1196 126.557C92.1364 125.583 91.9801 124.606 91.6452 123.665C90.9176 121.602 89.4257 119.944 87.4444 118.996C85.4203 118.029 83.1226 117.915 80.9734 118.676C80.9612 118.68 80.9489 118.685 80.9367 118.689L52.8159 129.119C51.7471 128.724 50.7559 128.312 49.7944 127.911C43.4678 125.271 38.7604 123.806 26.7695 127.796C26.1293 124.681 23.3665 122.331 20.065 122.331H6.83423C3.06591 122.331 0 125.402 0 129.176V141.951C0 143.399 1.17406 144.573 2.62223 144.573C4.0704 144.573 5.24446 143.399 5.24446 141.951V129.176C5.24446 128.309 5.97239 127.576 6.83423 127.576H20.065C20.9471 127.576 21.6649 128.293 21.6649 129.176V167.848C21.6649 168.715 20.9324 169.448 20.065 169.448H6.83423C5.97239 169.448 5.24446 168.715 5.24446 167.848V154.062C5.24446 152.613 4.0704 151.439 2.62223 151.439C1.17406 151.439 0 152.613 0 154.062V167.848C0 171.622 3.06591 174.692 6.83423 174.692H20.065C23.2172 174.692 25.8713 172.547 26.6625 169.642C33.8684 169.865 37.9265 170.637 46.5194 173.205L61.6794 177.733C64.4984 178.579 68.2713 179 72.0659 179C76.03 179 80.0186 178.541 82.9691 177.628C90.7784 175.217 103.326 170.431 108.001 168.522L138.237 156.214C140.494 155.296 142.18 153.437 142.985 150.978C143.923 148.109 143.515 144.719 141.918 142.129ZM114.535 136.54C114.554 136.533 114.574 136.526 114.592 136.518L129.025 131.135C129.941 130.816 130.908 130.856 131.751 131.25C132.575 131.636 133.196 132.319 133.5 133.176C133.802 134.025 133.751 134.947 133.356 135.773C132.961 136.601 132.273 137.224 131.418 137.527C131.405 137.532 131.393 137.536 131.38 137.541L95.1257 151.024C95.1149 150.277 95.031 149.521 94.8639 148.769C94.5142 147.194 93.8475 145.78 92.9294 144.598L114.535 136.54ZM109.205 125.783C110.126 125.46 111.099 125.504 111.949 125.909C112.764 126.297 113.378 126.976 113.676 127.816C114.177 129.241 113.66 130.846 112.446 131.721L87.4132 141.058L77.4495 137.624L109.205 125.783ZM82.7394 123.614C83.5621 123.328 84.4291 123.368 85.1829 123.728C85.8993 124.071 86.4378 124.668 86.7017 125.416C86.9699 126.169 86.9255 126.986 86.5773 127.717C86.2322 128.44 85.6329 128.984 84.8893 129.252L69.6485 134.935L60.6137 131.821L82.7394 123.614ZM138 149.347C137.776 150.032 137.293 150.937 136.26 151.356L106.021 163.666C101.416 165.546 89.0771 170.253 81.4202 172.618C76.5569 174.123 68.0371 174.167 63.1838 172.709L48.0207 168.18C39.0247 165.492 34.5397 164.646 26.9093 164.403V133.292C38.8905 129.05 42.4766 130.54 47.7746 132.751C49.0675 133.29 86.5871 146.321 86.5871 146.321C87.737 146.713 88.6397 147.403 89.2194 148.485C89.7526 149.48 89.9715 150.643 89.8575 151.765C89.7096 153.218 88.9722 154.587 87.7408 155.399C86.7262 156.067 85.4976 156.327 84.298 156.366C82.4936 156.424 80.6877 156.021 78.9837 155.457L57.6558 148.421C56.2807 147.967 54.7976 148.714 54.3438 150.089C53.89 151.464 54.6371 152.947 56.0122 153.401L77.3383 160.437C79.8895 161.281 82.0775 161.609 83.939 161.609C87.995 161.609 90.4987 160.049 91.82 158.855C92.3256 158.398 92.7773 157.891 93.1724 157.346L130.628 143.416C133.041 142.582 136.014 142.55 137.455 144.883C138.251 146.174 138.465 147.926 138 149.347Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const BankingIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 179 179\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M74.5833 8.95H56.6833C55.0358 8.95 53.7 10.2858 53.7 11.9333C53.7 13.5809 55.0358 14.9167 56.6833 14.9167H74.5833C76.2309 14.9167 77.5667 13.5809 77.5667 11.9333C77.5667 10.2858 76.2309 8.95 74.5833 8.95Z\" fill={color} />\n      <path d=\"M44.75 8.95H38.7833C37.1358 8.95 35.8 10.2858 35.8 11.9333C35.8 13.5809 37.1358 14.9167 38.7833 14.9167H44.75C46.3976 14.9167 47.7333 13.5809 47.7333 11.9333C47.7333 10.2858 46.3976 8.95 44.75 8.95Z\" fill={color} />\n      <path d=\"M32.8167 29.8333H14.9167C13.2691 29.8333 11.9333 31.1691 11.9333 32.8167V50.7167C11.9333 52.3642 13.2691 53.7 14.9167 53.7C16.5642 53.7 17.9 52.3642 17.9 50.7167V35.8H32.8167C34.4642 35.8 35.8 34.4642 35.8 32.8167C35.8 31.1691 34.4642 29.8333 32.8167 29.8333Z\" fill={color} />\n      <path d=\"M104.417 116.35C92.8831 116.35 83.5333 125.7 83.5333 137.233C83.5464 148.761 92.8887 158.104 104.417 158.117C115.95 158.117 125.3 148.767 125.3 137.233C125.3 125.7 115.95 116.35 104.417 116.35ZM104.417 152.15C96.1786 152.15 89.5 145.471 89.5 137.233C89.5097 128.999 96.1827 122.326 104.417 122.317C112.655 122.317 119.333 128.995 119.333 137.233C119.333 145.471 112.655 152.15 104.417 152.15Z\" fill={color} />\n      <path d=\"M175.62 83.5333H107.4V47.7333H134.25V67.3816L127.409 60.5408L123.191 64.7592L137.23 78.7988L151.27 64.7592L147.051 60.5408L140.217 67.3816V44.75C140.217 43.1025 138.881 41.7667 137.233 41.7667H107.4V17.9C107.4 7.36287 101.266 0 92.4833 0H14.9167C6.68267 0.00969583 0.00969583 6.68267 0 14.9167V152.15C0.00969583 160.384 6.68267 167.057 14.9167 167.067H41.7667V176.017C41.7667 177.664 43.1025 179 44.75 179H164.083C165.731 179 167.067 177.664 167.067 176.017V167.067H175.62C177.486 167.063 178.999 165.55 179 163.684V86.9164C178.999 85.05 177.486 83.5367 175.62 83.5333ZM5.96667 14.9167C5.96667 9.97366 9.97366 5.96667 14.9167 5.96667H92.4833C97.919 5.96667 101.433 10.6505 101.433 17.9H5.96667V14.9167ZM41.7667 161.1H14.9167C9.97366 161.1 5.96667 157.093 5.96667 152.15V149.167H41.7667V161.1ZM41.7667 98.45V143.2H5.96667V23.8667H101.433V83.5333H56.6833C55.0358 83.5333 53.7 84.8691 53.7 86.5167V95.4667H44.75C43.1025 95.4667 41.7667 96.8025 41.7667 98.45ZM56.3074 101.433C55.2129 105.633 51.9331 108.911 47.7333 110.004V101.433H56.3074ZM47.7333 173.033V164.462C51.9331 165.555 55.2129 168.834 56.3074 173.033H47.7333ZM161.1 173.033H152.526C153.62 168.834 156.9 165.555 161.1 164.462V173.033ZM161.1 158.385C153.604 159.666 147.733 165.538 146.452 173.033H62.3815C61.1005 165.538 55.229 159.666 47.7333 158.385V116.081C55.229 114.801 61.1005 108.929 62.3815 101.433H146.452C147.733 108.929 153.604 114.801 161.1 116.081V158.385ZM161.1 110.004C156.9 108.911 153.62 105.633 152.526 101.433H161.1V110.004ZM173.033 161.1H167.067V98.45C167.067 96.8025 165.731 95.4667 164.083 95.4667H59.6667V89.5H173.033V161.1Z\" fill={color} />\n      <path d=\"M32.8167 131.267H17.9V116.35C17.9 114.702 16.5642 113.367 14.9167 113.367C13.2691 113.367 11.9333 114.702 11.9333 116.35V134.25C11.9333 135.898 13.2691 137.233 14.9167 137.233H32.8167C34.4642 137.233 35.8 135.898 35.8 134.25C35.8 132.602 34.4642 131.267 32.8167 131.267Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const ServicesIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 103 179\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M66.6698 136.242V141.059C66.6698 143.548 68.6956 145.574 71.1852 145.574H89.5655C92.0552 145.574 94.081 143.548 94.081 141.059V136.242C94.081 133.752 92.0552 131.726 89.5655 131.726H71.1852C68.6956 131.726 66.6698 133.752 66.6698 136.242ZM71.9134 136.97H88.8374V140.33H71.9134V136.97Z\" fill={color} />\n      <path d=\"M65.7092 67.9776C64.2609 67.9776 63.0874 69.1511 63.0874 70.5994V73.7697C63.0874 75.218 64.2609 76.3915 65.7092 76.3915C67.1575 76.3915 68.331 75.218 68.331 73.7697V70.5994C68.331 69.1511 67.1575 67.9776 65.7092 67.9776Z\" fill={color} />\n      <path d=\"M34.669 70.5994V73.7697C34.669 75.218 35.8425 76.3915 37.2908 76.3915C38.7391 76.3915 39.9127 75.218 39.9127 73.7697V70.5994C39.9127 69.1511 38.7391 67.9776 37.2908 67.9776C35.8425 67.9776 34.669 69.1511 34.669 70.5994Z\" fill={color} />\n      <path d=\"M55.8157 84.2685C52.8314 86.5338 50.1694 86.5345 47.1837 84.2685C46.0294 83.3935 44.3857 83.619 43.51 84.7719C42.6347 85.9255 42.8605 87.5703 44.0134 88.4456C46.4625 90.3036 48.9812 91.2331 51.4999 91.2331C54.0182 91.2331 56.5369 90.3039 58.9857 88.4456C60.1393 87.5699 60.3644 85.9255 59.4891 84.7719C58.6137 83.6183 56.9693 83.3928 55.8157 84.2685Z\" fill={color} />\n      <path d=\"M93.034 109.857C88.1186 104.483 81.8144 100.715 74.883 98.9093C76.0982 97.7505 77.2322 96.4955 78.2732 95.1514C80.5339 94.8354 82.4013 93.2934 83.1844 91.2176H87.1685C89.877 91.2176 92.0804 89.0143 92.0804 86.3058V80.1917C96.0585 78.2998 98.816 74.2423 98.816 69.552V66.4751C98.816 61.9963 96.3022 58.094 92.6117 56.1039V33.3385C92.6117 22.0126 84.4292 12.4667 73.6655 10.3668L74.2776 9.26357C75.5979 6.88262 75.2634 4.04686 73.4253 2.03855C71.5876 0.0305908 68.792 -0.5532 66.3045 0.552157L49.5063 8.01209C43.2811 10.7779 38.7744 9.68201 33.7936 9.93266C30.0409 9.93266 26.3019 10.8485 22.9812 12.581C21.6976 13.2508 21.1998 14.8344 21.8696 16.1184C22.5394 17.4024 24.1226 17.8995 25.4069 17.23C28.0186 15.8674 30.84 15.1763 33.7933 15.1763C38.5534 14.9106 44.111 16.1467 51.6345 12.8044L68.432 5.34413C68.9944 5.09314 69.3779 5.38329 69.5566 5.5787C69.7352 5.77411 69.99 6.18137 69.6915 6.72006L67.1574 11.289C66.7096 12.0965 66.7194 13.0799 67.1833 13.878C67.6468 14.676 68.4966 15.1714 69.4195 15.1819C79.316 15.2969 87.3674 23.4416 87.3674 33.3381V54.7084C87.2583 54.7052 87.15 54.7 87.0402 54.7H85.3444V46.0249C85.3444 45.0573 84.8117 44.1687 83.9584 43.7128C83.1057 43.2563 82.0703 43.3077 81.2659 43.8453C78.9979 45.3611 76.6903 46.7269 74.408 47.9046C73.1208 48.5688 72.6164 50.1502 73.2802 51.4367C73.9444 52.7238 75.5262 53.2276 76.8123 52.5644C77.9062 51.9998 79.0045 51.3958 80.1004 50.7561V74.4513C80.1004 77.0196 79.7565 79.539 79.0912 81.9798C78.5578 81.8291 77.9977 81.7428 77.4167 81.7428H68.2984C64.8974 81.7428 62.1305 84.5093 62.1305 87.9103V89.051C62.1305 92.452 64.8974 95.2185 68.2984 95.2185H71.1552C65.8874 100.193 58.8557 103.054 51.4989 103.054C35.7282 103.054 22.8977 90.2231 22.8977 74.452C22.8977 66.5362 22.8977 58.6614 22.8977 50.7571C37.3666 59.1941 52.0344 61.2216 66.5593 56.7771C67.944 56.3535 68.7228 54.8877 68.2995 53.503C67.8761 52.1184 66.4114 51.3392 65.0254 51.7628C57.8786 53.9498 50.6361 54.4032 43.5017 53.1104C36.3064 51.8072 28.9824 48.6901 21.7329 43.8457C20.9282 43.308 19.8934 43.2566 19.0405 43.7132C18.1875 44.169 17.6544 45.058 17.6544 46.0253V57.557C16.9609 57.5595 16.2844 57.6357 15.6318 57.7769V33.3385C15.6318 29.7896 16.6592 26.3484 18.6035 23.3875C19.3981 22.1772 19.0615 20.5517 17.8509 19.7568C16.6413 18.9625 15.0155 19.2988 14.2202 20.5094C11.7134 24.3275 10.3881 28.7632 10.3881 33.3381V60.8672C8.88217 62.5797 7.96594 64.823 7.96594 67.2773V68.7501C7.96594 74.1105 12.3272 78.4718 17.6876 78.4718H17.8942C18.8447 86.4655 22.5904 93.614 28.1256 98.9073C21.1904 100.711 14.883 104.481 9.96516 109.857C3.64903 116.762 0.17041 125.722 0.17041 135.086V169.456C0.17041 174.719 4.45166 179 9.71451 179H17.918C19.3663 179 20.5398 177.827 20.5398 176.378C20.5398 174.93 19.3663 173.757 17.918 173.757H9.71451C7.34334 173.757 5.41404 171.827 5.41404 169.456V135.086C5.41404 127.035 8.4043 119.332 13.8343 113.396C17.66 109.214 22.4632 106.163 27.7571 104.469C27.0545 106.574 27.0999 108.918 28.0071 111.046L37.6977 133.775C38.0091 134.505 38.6342 135.055 39.3976 135.27C40.8683 135.684 41.8041 134.724 42.0303 134.598L43.6579 136.225L35.7372 173.756H28.4014C26.9531 173.756 25.7796 174.93 25.7796 176.378C25.7796 177.826 26.9531 179 28.4014 179H93.2843C98.5472 179 102.828 174.719 102.828 169.456V135.086C102.829 125.721 99.3502 116.761 93.034 109.857ZM13.2099 68.7501V67.2773C13.2099 64.8191 15.2007 62.8171 17.6548 62.7993V73.2278C15.2011 73.2103 13.2099 71.2087 13.2099 68.7501ZM61.7551 128.723L54.7059 123.711L61.5488 106.761C63.9298 106.018 66.2192 105.013 68.376 103.772L69.0175 104.298C70.3924 105.425 70.8657 107.353 70.1686 108.989L61.7551 128.723ZM83.3225 85.9744C83.8738 84.4541 84.3128 82.9033 84.6386 81.3275H86.8367V85.9744H83.3225ZM87.0409 59.9439C90.6422 59.9439 93.5724 62.8741 93.5724 66.4758V69.5527C93.5724 73.154 90.6422 76.0842 87.0409 76.0842H85.3451V59.9443L87.0409 59.9439ZM67.3752 89.051V87.9103C67.3752 87.401 67.7898 86.9864 68.2995 86.9864H77.4178C77.9271 86.9864 78.3417 87.401 78.3417 87.9103V89.051C78.3417 89.5603 77.9271 89.9749 77.4178 89.9749H68.2995C67.7894 89.9746 67.3752 89.5603 67.3752 89.051ZM55.3645 108.072L51.4999 117.644L47.6368 108.075C48.905 108.22 50.1936 108.297 51.4996 108.297C52.7986 108.297 54.0885 108.22 55.3645 108.072ZM32.8316 108.989C32.1345 107.354 32.6078 105.425 33.9827 104.298L34.6179 103.778C36.7611 105.016 39.0519 106.027 41.4573 106.776L48.2943 123.711L41.2452 128.723L32.8316 108.989ZM51.4999 127.866L56.6342 131.516L51.4999 136.651L46.3657 131.516L51.4999 127.866ZM41.0962 173.756L48.0839 140.65C49.2871 141.671 49.8657 142.98 51.4999 142.98C53.1339 142.98 53.7131 141.671 54.9163 140.65L61.904 173.756H41.0962ZM97.5851 169.456C97.5851 171.827 95.6558 173.757 93.2847 173.757H67.2626L59.3409 136.225L60.9685 134.598C61.158 134.688 62.1085 135.691 63.6015 135.27C64.3654 135.055 64.9904 134.505 65.3015 133.775L74.9921 111.046C75.8992 108.918 75.9447 106.574 75.242 104.469C80.5357 106.163 85.3392 109.214 89.1649 113.396C94.5949 119.332 97.5851 127.035 97.5851 135.086V169.456Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const SportFansIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 179 161\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M43.96 65.5907C46.1874 72.3105 53.2327 75.7489 60.1029 74.6774C66.9734 73.6058 70.5422 69.7405 70.5422 63.9129C70.2926 61.1031 73.1577 58.717 75.8717 59.5337L83.7819 61.6757C84.7909 61.9488 85.8107 62.1285 86.8372 62.2138C86.0715 64.101 85.1654 65.9273 84.1281 67.6729C82.043 71.1813 79.4478 74.3463 76.4157 77.0792L70.6608 82.2656C66.3966 86.1085 62.9323 90.6612 60.3648 95.7959C59.7211 97.0835 60.2427 98.649 61.53 99.2927C62.7896 99.9311 64.3807 99.4273 65.0268 98.1274C67.3021 93.5769 70.3716 89.5435 74.1502 86.1379L79.9055 80.9515C83.3274 77.8669 86.2558 74.2956 88.609 70.3363C90.4902 67.1706 91.9883 63.7713 93.0613 60.2322C93.3221 59.3715 93.1211 58.4373 92.5288 57.7605C91.9366 57.0833 91.0374 56.7585 90.1497 56.9036C88.4695 57.1766 86.7854 57.0896 85.1447 56.6445L77.2338 54.5025C74.3747 53.7281 71.3848 54.3168 69.0316 56.1173C66.6787 57.9174 65.3296 60.6496 65.3296 63.6122C65.2471 72.2986 50.7257 71.4173 48.9077 63.9514L46.0238 55.2506C45.8182 54.6311 46.0039 53.9536 46.4965 53.5253L81.262 23.2851C81.7766 22.8373 82.0954 22.2056 82.1493 21.5256L83.2981 7.10103L88.1772 10.7838C89.425 11.7257 90.3392 13.0745 90.7514 14.5827L92.3264 20.3425C92.6075 21.4399 93.5878 22.1363 94.6761 22.294C99.2067 23.3649 103.49 25.1458 107.406 27.5885C108.628 28.3492 110.235 27.9776 110.997 26.7561C111.759 25.5349 111.386 23.927 110.165 23.1652C106.077 20.6162 101.636 18.7091 96.9496 17.4883L95.7791 13.2077C95.0645 10.594 93.4801 8.25579 91.3171 6.62311L84.6689 1.60517C83.5047 0.726602 81.9545 0.552497 80.6232 1.14928C79.2923 1.74746 78.3934 3.02249 78.2777 4.47756L77.0373 20.0506L43.0745 49.5919C40.9908 51.4046 40.2059 54.2696 41.0751 56.8906L43.96 65.5907Z\" fill={color} />\n      <path d=\"M174.46 117.307V115.518C174.46 113.103 173.47 110.748 171.745 109.058C170.531 107.784 168.186 106.139 168.359 104.129V94.0067C168.192 92.0192 170.406 90.4708 171.64 89.2461C173.432 87.5463 174.46 85.1546 174.46 82.6846V79.285C174.46 77.8464 173.73 76.5755 172.621 75.8218V71.294C172.621 69.3369 171.571 67.6248 170.008 66.6777V63.5809C170.008 62.1412 168.841 60.9746 167.402 60.9746C165.962 60.9746 164.795 62.1412 164.795 63.5809V65.8939H159.412V63.5809C159.412 62.1412 158.245 60.9746 156.806 60.9746C155.366 60.9746 154.199 62.1412 154.199 63.5809V65.8939H148.816V63.5809C148.816 62.1412 147.649 60.9746 146.209 60.9746C144.77 60.9746 143.603 62.1412 143.603 63.5809V66.6777C142.04 67.6252 140.99 69.3372 140.99 71.294V75.8218C139.882 76.5752 139.152 77.8464 139.152 79.2847V82.6842C139.152 85.1546 140.179 87.5463 141.971 89.2457C143.209 90.4753 145.416 92.0146 145.252 94.0064V104.129C145.429 106.133 143.075 107.79 141.866 109.057C140.141 110.748 139.152 113.103 139.152 115.518V117.101H127.956C126.497 111.881 126.192 106.339 127.083 100.992L131.992 71.5321C134.444 56.8181 130.02 42.1047 119.857 31.1651C118.877 30.11 117.228 30.0502 116.173 31.0295C115.119 32.0091 115.058 33.6585 116.038 34.713C125.093 44.4601 129.034 57.568 126.85 70.6755L121.941 100.135C121.005 105.756 121.228 111.564 122.572 117.101H59.3815L61.3841 108.791C61.7214 107.392 60.8603 105.984 59.4612 105.647C58.0621 105.31 56.6542 106.171 56.3168 107.57L54.0199 117.102H40.3778V115.518C40.3778 113.103 39.3884 110.748 37.6631 109.058L35.4273 106.867C34.6963 106.15 34.2771 105.153 34.2771 104.129V94.0064C34.11 92.0188 36.3237 90.4704 37.5585 89.2457C39.3503 87.5459 40.3778 85.1542 40.3778 82.6842V79.2847C40.3778 76.9772 38.5007 75.0998 36.193 75.0998H33.9345C34.9162 73.2756 35.4504 71.2115 35.4504 69.0691C35.4504 62.0514 29.7413 56.3422 22.7236 56.3422C15.7059 56.3422 9.99673 62.0514 9.99673 69.0691C9.99673 71.2108 10.5316 73.2752 11.5133 75.0998H9.25416C6.94674 75.0998 5.06969 76.9772 5.06969 79.2847V82.6842C5.06969 85.1546 6.09754 87.5463 7.88894 89.2457C9.1276 90.4753 11.334 92.0146 11.1704 94.0064V104.129C11.1704 105.153 10.7512 106.15 10.0202 106.867L7.78405 109.058C6.05908 110.748 5.06969 113.103 5.06969 115.518V117.193C2.19729 117.677 0 120.175 0 123.183V154.12C0 157.473 2.728 160.201 6.08146 160.201H41.2504C42.6897 160.201 43.8567 159.034 43.8567 157.595C43.8567 156.155 42.6897 154.988 41.2504 154.988H6.08146C5.60249 154.988 5.21268 154.599 5.21268 154.12V143.476H173.787V154.12C173.787 154.599 173.398 154.988 172.919 154.988H53.4909C52.0516 154.988 50.8846 156.155 50.8846 157.595C50.8846 159.034 52.0516 160.201 53.4909 160.201H172.919C176.272 160.201 179 157.473 179 154.12V123.183C179 120.363 177.068 117.992 174.46 117.307ZM146.203 71.2943C146.203 71.1909 146.287 71.1066 146.391 71.1066H167.221C167.324 71.1066 167.408 71.1909 167.408 71.2943V75.1005H146.203V71.2943ZM144.365 115.519C144.188 113.514 146.542 111.858 147.751 110.59C149.475 108.9 150.465 106.545 150.465 104.13V94.0071C150.465 91.5374 149.438 89.1457 147.646 87.4456C146.407 86.216 144.201 84.677 144.365 82.685V80.3132H169.247V82.685C169.414 84.6725 167.201 86.2209 165.966 87.4456C164.174 89.1457 163.147 91.5374 163.147 94.0071V104.13C163.147 106.545 164.136 108.9 165.861 110.59C167.075 111.864 169.42 113.509 169.247 115.519V117.102H144.365V115.519ZM130.341 122.314V138.264H113.83V122.314H130.341ZM135.553 122.314H152.064V138.264H135.553V122.314ZM108.617 122.314V138.264H92.106V122.314H108.617ZM6.08146 122.314H21.7233V138.264H5.21268V123.183C5.21268 122.704 5.60249 122.314 6.08146 122.314ZM26.936 122.314H43.447V138.264H26.936V122.314ZM48.6593 122.314H65.1703V138.264H48.6593V122.314ZM70.383 122.314H86.8937V138.264H70.383V122.314ZM15.2094 69.0698C15.2094 64.9265 18.5803 61.5556 22.7236 61.5556C26.8668 61.5556 30.2377 64.9265 30.2377 69.0698C30.2377 71.4586 29.1109 73.6825 27.2052 75.1005H18.243C16.3369 73.6829 15.2094 71.4583 15.2094 69.0698ZM11.4326 112.781L13.6687 110.59C15.3936 108.899 16.383 106.544 16.383 104.129V94.0067C16.383 91.5367 15.3555 89.1454 13.5638 87.4452L11.477 85.4647C10.0278 84.2827 10.2813 81.9686 10.2827 80.3129H35.1655C35.1662 81.9731 35.4207 84.2792 33.9708 85.465L31.884 87.4452C30.0923 89.1454 29.0648 91.5371 29.0648 94.0067V104.129C29.0648 106.544 30.0542 108.899 31.7795 110.59C32.993 111.864 35.3385 113.509 35.1655 115.518V117.102H10.2824V115.518C10.2824 114.495 10.7019 113.497 11.4326 112.781ZM157.277 138.264V122.315H172.919C173.398 122.315 173.788 122.704 173.788 123.183V138.264H157.277Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const ControlPanelIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 179 157\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M162.77 0.886719H55.8433C54.3957 0.886719 53.2212 2.06119 53.2212 3.50879C53.2212 4.95639 54.3957 6.13086 55.8433 6.13086H162.77C168.827 6.13086 173.756 11.0595 173.756 17.1162V140.012C173.756 146.069 168.827 150.998 162.77 150.998H139.4C137.952 150.998 136.778 152.172 136.778 153.62C136.778 155.067 137.952 156.242 139.4 156.242H162.77C171.72 156.242 179 148.961 179 140.012V17.1162C179 8.16706 171.72 0.886719 162.77 0.886719Z\" fill={color} />\n      <path d=\"M16.2295 156.242H128.912C130.361 156.242 131.534 155.067 131.534 153.62C131.534 152.171 130.361 150.998 128.912 150.998H16.2295C10.1728 150.998 5.24414 146.069 5.24414 140.012V17.1162C5.24414 11.0595 10.1728 6.13086 16.2295 6.13086H45.355C46.804 6.13086 47.9771 4.95639 47.9771 3.50879C47.9771 2.06119 46.804 0.886719 45.355 0.886719H16.2295C7.28034 0.886719 0 8.16706 0 17.1162V140.012C0 148.961 7.28034 156.242 16.2295 156.242Z\" fill={color} />\n      <path d=\"M16.0233 78.5642C16.0233 80.655 14.3285 82.3512 12.2363 82.3512C10.1441 82.3512 8.44935 80.655 8.44935 78.5642C8.44935 76.472 10.1441 74.7772 12.2363 74.7772C14.3285 74.7772 16.0233 76.472 16.0233 78.5642Z\" fill={color} />\n      <path d=\"M169.312 78.5642C169.312 79.9531 168.187 81.0784 166.798 81.0784C165.409 81.0784 164.284 79.9531 164.284 78.5642C164.284 77.1753 165.409 76.05 166.798 76.05C168.187 76.05 169.312 77.1753 169.312 78.5642Z\" fill={color} />\n      <path d=\"M19.2285 22.7373V134.391C19.2285 135.839 20.403 137.013 21.8506 137.013H157.149C158.597 137.013 159.771 135.839 159.771 134.391V22.7373C159.771 21.2883 158.597 20.1152 157.149 20.1152H21.8506C20.403 20.1152 19.2285 21.2897 19.2285 22.7373ZM24.4727 81.1863H86.8779V131.769H24.4727V81.1863ZM154.527 131.769H92.1221V81.1863H154.527V131.769ZM154.527 75.9421H92.1221V25.3594H154.527V75.9421ZM24.4727 25.3594H86.8779V75.9421H24.4727V25.3594Z\" fill={color} />\n      <path d=\"M73.4507 103.855H68.996C68.6423 102.058 67.9348 100.385 66.9447 98.9153L70.098 95.7633C71.1223 94.7391 71.1223 93.0784 70.098 92.0542C69.0738 91.0313 67.4132 91.0313 66.3903 92.0542L63.237 95.2075C61.7689 94.2188 60.0959 93.5114 58.2974 93.1576V88.7029C58.2974 87.2539 57.1243 86.0808 55.6753 86.0808C54.2277 86.0808 53.0532 87.2539 53.0532 88.7029V93.1576C51.2546 93.5114 49.5831 94.2188 48.1136 95.2075L44.9617 92.0542C43.9374 91.0299 42.2768 91.0299 41.2525 92.0542C40.2297 93.0784 40.2297 94.7391 41.2525 95.762L44.4059 98.9153C43.4171 100.385 42.7097 102.058 42.356 103.855H37.9012C36.4536 103.855 35.2791 105.029 35.2791 106.477C35.2791 107.926 36.4536 109.099 37.9012 109.099H42.356C42.7097 110.898 43.4171 112.569 44.4059 114.039L41.2525 117.192C40.2297 118.216 40.2297 119.875 41.2525 120.9C42.2659 121.912 43.9497 121.912 44.9617 120.9L48.1136 117.746C49.5831 118.736 51.256 119.444 53.0532 119.796V124.251C53.0532 125.7 54.2277 126.873 55.6753 126.873C57.1243 126.873 58.2974 125.7 58.2974 124.251V119.796C60.0959 119.444 61.7689 118.736 63.237 117.746L66.3903 120.9C67.4009 121.912 69.0875 121.91 70.098 120.9C71.1223 119.875 71.1223 118.215 70.098 117.192L66.9447 114.039C67.9348 112.569 68.6423 110.898 68.996 109.099H73.4507C74.8983 109.099 76.0728 107.926 76.0728 106.477C76.0728 105.029 74.8983 103.855 73.4507 103.855ZM55.6753 114.81C51.0812 114.81 47.3434 111.071 47.3434 106.477C47.3434 101.883 51.0812 98.145 55.6753 98.145C60.2694 98.145 64.0072 101.883 64.0072 106.477C64.0072 111.072 60.2694 114.81 55.6753 114.81Z\" fill={color} />\n      <path d=\"M123.325 124.276C129.489 124.276 134.391 121.338 136.436 116.416C139.474 109.107 135.829 99.2581 126.686 90.0726C125.791 89.174 124.597 88.6783 123.325 88.6783C122.052 88.6783 120.858 89.174 119.964 90.0726C110.821 99.2581 107.176 109.106 110.213 116.416C112.259 121.338 117.16 124.276 123.325 124.276ZM123.325 94.1341C131.95 102.962 133.267 110.377 131.594 114.403C130.354 117.389 127.416 119.031 123.325 119.031C119.233 119.031 116.296 117.389 115.056 114.403C113.383 110.377 114.699 102.962 123.325 94.1341Z\" fill={color} />\n      <path d=\"M110.774 67.0245H126.291C126.291 67.0245 134.503 69.286 134.507 69.2874C139.246 70.5943 144.069 66.907 144.069 62.0056C144.069 62.0056 144.069 39.3234 144.069 39.2961C144.069 34.4343 139.196 30.7211 134.507 32.013L126.291 34.2773H110.774C106.257 34.2773 102.582 37.9522 102.582 42.4699V58.8318C102.582 63.3481 106.257 67.0245 110.774 67.0245ZM135.901 37.0687C137.35 36.6685 138.824 37.787 138.824 39.2961V62.0056C138.824 63.5065 137.349 64.6305 135.9 64.2317L129.268 62.4044V38.8959L135.901 37.0687ZM107.826 42.4699C107.826 40.8447 109.148 39.5214 110.774 39.5214H124.024V61.7803H110.774C109.148 61.7803 107.826 60.457 107.826 58.8318V42.4699Z\" fill={color} />\n      <path d=\"M60.1231 30.3536C57.6909 27.9541 53.6554 27.9582 51.2272 30.3536C51.2272 30.3536 33.5678 47.7753 33.5419 47.8013C31.9113 49.41 33.0967 52.2902 35.3842 52.2902H38.7628V65.63C38.7628 69.5686 41.9667 72.7724 45.9052 72.7724H65.4451C69.3837 72.7724 72.5875 69.5686 72.5875 65.63V52.2902H75.9662C78.2591 52.2902 79.4404 49.4114 77.8085 47.8013C77.8085 47.8013 60.1327 30.3632 60.1231 30.3536ZM54.9104 34.0873C55.331 33.6722 56.0207 33.6735 56.4399 34.0873L69.5749 47.0461H41.7741L54.9104 34.0873ZM67.3434 65.63C67.3434 66.6775 66.4912 67.5283 65.4451 67.5283H45.9052C44.8591 67.5283 44.007 66.6775 44.007 65.63V52.2902H67.3434V65.63Z\" fill={color} />\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { SvgProjectIconInnerProps } from '../types';\n\n\nexport const OtherIcon: React.FC<SvgProjectIconInnerProps> = ({\n  color,\n  width,\n  height,\n}) => {\n  return (\n    <svg width={width} height={height} viewBox=\"0 0 208 208\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M127.244 147.905C125.42 147.906 123.587 147.466 121.892 146.575L106.499 138.483C104.934 137.66 103.065 137.66 101.5 138.483L86.1071 146.575C82.2114 148.623 77.5797 148.288 74.0195 145.701C70.4588 143.115 68.7097 138.813 69.4534 134.476L72.3932 117.336C72.692 115.592 72.1144 113.815 70.8484 112.581L58.3957 100.442C55.2441 97.3699 54.1312 92.8616 55.4912 88.6761C56.8513 84.4906 60.4013 81.4974 64.7566 80.8648L81.9663 78.3642C83.7163 78.1098 85.2282 77.0115 86.011 75.4255L93.7075 59.831C95.6553 55.8849 99.599 53.4331 104 53.4331C108.401 53.4331 112.344 55.8845 114.292 59.831L121.989 75.4255C122.771 77.0115 124.283 78.1098 126.033 78.3642L143.243 80.8648C147.598 81.4978 151.149 84.4906 152.509 88.6761C153.869 92.8616 152.756 97.3699 149.605 100.442L137.151 112.581C135.885 113.815 135.308 115.592 135.607 117.336C135.891 118.997 134.775 120.576 133.113 120.86C131.453 121.147 129.873 120.029 129.588 118.368C128.949 114.644 130.183 110.845 132.889 108.208L145.342 96.0689C146.839 94.6096 147.347 92.551 146.701 90.5625C146.055 88.5739 144.434 87.2078 142.365 86.907L125.155 84.4059C121.416 83.8625 118.186 81.5153 116.514 78.1273L108.817 62.5324C107.892 60.6578 106.091 59.5384 104 59.5384C101.91 59.5384 100.109 60.6578 99.1834 62.5324L91.4869 78.1273C89.8147 81.5153 86.5842 83.8625 82.8448 84.4059L65.6351 86.907C63.5659 87.2078 61.9449 88.5744 61.2989 90.5625C60.6529 92.5514 61.1609 94.6096 62.6581 96.0694L75.1109 108.207C77.8167 110.845 79.0505 114.643 78.4118 118.367L75.4719 135.508C75.1186 137.569 75.9173 139.532 77.6086 140.761C79.3004 141.99 81.4148 142.143 83.2657 141.17L98.6587 133.077C102.003 131.32 105.996 131.319 109.341 133.077L124.734 141.17C126.584 142.143 128.699 141.991 130.391 140.761C132.082 139.532 132.881 137.568 132.527 135.508L131.653 130.407C131.368 128.746 132.484 127.168 134.146 126.883C135.806 126.595 137.386 127.713 137.671 129.376L138.546 134.476C139.29 138.813 137.541 143.115 133.98 145.701C131.968 147.162 129.614 147.905 127.244 147.905Z\" fill={color} />\n        <path d=\"M104 208C101.347 208 98.6952 207.317 96.3297 205.952L19.5422 161.618C14.8116 158.887 11.8726 153.796 11.8726 148.333V59.6665C11.8726 54.2036 14.8116 49.1128 19.5422 46.3818L96.3301 2.04843C101.061 -0.682608 106.94 -0.683015 111.67 2.04843L188.458 46.3818C193.189 49.1132 196.127 54.2036 196.127 59.6665V148.333C196.127 153.796 193.188 158.886 188.458 161.618L155.941 180.391C154.481 181.233 152.614 180.734 151.77 179.274C150.927 177.814 151.428 175.946 152.888 175.103L185.405 156.33C188.252 154.686 190.021 151.622 190.021 148.333V59.6665C190.021 56.3782 188.252 53.3142 185.405 51.6696L108.617 7.33629C105.769 5.69213 102.231 5.69213 99.3827 7.33629L22.5952 51.67C19.7474 53.3142 17.9786 56.3782 17.9786 59.6669V148.334C17.9786 151.622 19.7478 154.686 22.5952 156.33L99.3831 200.664C102.231 202.308 105.769 202.308 108.617 200.664L142.312 181.21C143.772 180.368 145.639 180.868 146.482 182.328C147.326 183.788 146.825 185.655 145.365 186.498L111.67 205.952C109.304 207.317 106.652 208 104 208V208Z\" fill={color} />\n        <path d=\"M104 191.092C103.473 191.092 102.946 190.956 102.473 190.683L29.6935 148.663C28.7491 148.118 28.167 147.11 28.167 146.019V61.9808C28.167 60.8898 28.7491 59.8823 29.6935 59.3368L63.1059 40.0461C64.5661 39.2035 66.4333 39.703 67.2764 41.1635C68.1194 42.6237 67.6191 44.4909 66.159 45.334L34.2731 63.7434V144.257L104 184.513L173.727 144.257V63.7434L104 23.4865L76.7347 39.2279C75.2745 40.0706 73.4073 39.5707 72.5642 38.1105C71.7212 36.6503 72.2215 34.7831 73.6816 33.9401L102.473 17.3173C103.418 16.7718 104.582 16.7718 105.526 17.3173L178.306 59.3368C179.251 59.8823 179.833 60.8898 179.833 61.9808V146.019C179.833 147.11 179.251 148.118 178.306 148.663L105.526 190.683C105.054 190.956 104.527 191.092 104 191.092V191.092Z\" fill={color} />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"208\" height=\"208\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n","import React from 'react';\n\nimport { combineClasses } from 'utils/styles';\nimport { TSvgProjectIconType } from 'types/icons';\n\nimport {\n  TicketSalingIcon,\n  VirtualToursIcon,\n  MedicalIcon,\n  BankingIcon,\n  ServicesIcon,\n  SportFansIcon,\n  ControlPanelIcon,\n  OtherIcon,\n} from './icons';\nimport { SvgProjectIconInnerProps } from './types';\n\n\ninterface SvgProjectIconProps extends SvgProjectIconInnerProps {\n  className?: string;\n  type: TSvgProjectIconType;\n}\n\nconst getIcon = (type: TSvgProjectIconType): React.FC<SvgProjectIconInnerProps> => {\n  switch (type) {\n    case 'ticket-saling': return TicketSalingIcon;\n    case 'virtual-tours': return VirtualToursIcon;\n    case 'medical': return MedicalIcon;\n    case 'banking': return BankingIcon;\n    case 'services': return ServicesIcon;\n    case 'sport-fans': return SportFansIcon;\n    case 'control-panel': return ControlPanelIcon;\n    default: return OtherIcon;\n  }\n};\n\nconst renderIcon: React.FC<SvgProjectIconProps> = ({ type, color, width, height }) => {\n  const Icon = getIcon(type);\n\n  return (\n    <Icon\n      color={color}\n      width={width}\n      height={height}\n    />\n  );\n};\n\nexport const SvgProjectIcon: React.FC<SvgProjectIconProps> = ({ className, ...otherProps }) => {\n  if (className) {\n    return (\n      <div className={combineClasses(className)}>\n        {renderIcon(otherProps)}\n      </div>\n    );\n  }\n  return renderIcon(otherProps);\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { TContentSize } from 'types/sizes';\nimport { useTStyles } from 'hooks';\n\n\ntype TStyleProps = {\n  transitionState: string;\n  offsetSize: TContentSize;\n};\n\nconst TRANSITION_TIME = '0.6s';\nconst TRANSFORM_HIDE = 'translateY(30px)';\nconst TRANSFORM_SHOW = 'translateY(0px)';\n\nconst getContainerStyles = (transitionState: string): AppInnerStyles => {\n  switch (transitionState) {\n    case 'exiting':\n      return {\n        zIndex: '100',\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'exited':\n      return {\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'entering':\n      return {\n        zIndex: '101',\n        opacity: '0',\n        transform: TRANSFORM_HIDE,\n      };\n    case 'entered':\n      return {\n        opacity: '1',\n        transform: TRANSFORM_SHOW,\n      };\n    default:\n      return {\n        opacity: '1',\n      };\n  }\n};\n\nconst styles: AppStyles = () => {\n  return {\n    wrapper: ({ offsetSize }: TStyleProps) => ({\n      position: 'absolute',\n      top: offsetSize === 'compact' ? '90px' : '158px',\n      left: '0px',\n      right: '0px',\n      bottom: '0px',\n      width: '100%',\n      display: 'flex',\n      flex: 1,\n      backgroundColor: 'transparent',\n      overflow: 'hidden',\n    }),\n    container: ({ transitionState }: TStyleProps) => ({\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      overflow: 'hidden',\n      ...getContainerStyles(transitionState),\n      transition: `all ${TRANSITION_TIME}`,\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import React, { memo } from 'react';\n\nimport { TContentSize } from 'types/sizes';\n\nimport { useStyles } from './styles';\n\n\ntype TTransitionType =\n  | 'entering'\n  | 'entered'\n  | 'exiting'\n  | 'exited'\n  | 'unmounted';\n\ninterface TransitionInnerScreenWrapperProps {\n  transitionState: TTransitionType;\n  children: JSX.Element | JSX.Element[];\n  offsetSize?: TContentSize;\n}\n\nconst TransitionInnerScreenWrapperComp: React.FC<TransitionInnerScreenWrapperProps> = ({\n  transitionState,\n  children,\n  offsetSize = 'normal',\n}) => {\n  const classes = useStyles({ transitionState, offsetSize });\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport const TransitionInnerScreenWrapper = memo(TransitionInnerScreenWrapperComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, text },\n    primary: { bg, greenMedium },\n  },\n}) => {\n  return {\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: bg,\n      paddingBottom: 156,\n      '& a': {\n        color: greenMedium,\n      },\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      height: 'auto',\n      color: title,\n      marginTop: 70,\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      textAlign: 'center',\n      marginTop: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\nexport const AccessDenied: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type=\"maintenance\"\n        width={200}\n        height={200}\n        color=\"rgba(255,255,255,0.05)\"\n      />\n      <div className={classes.title}>\n        it&apos;s under maintenance\n      </div>\n      <div className={classes.text}>\n        Sorry, this page is in the stage of heavy development.\n        <br /><br />\n        Contact: <a href=\"https://t.me/ivanstnsk\">@ivanstnsk</a>\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, text },\n  },\n  sizes: {\n    contentSection: { maxWidth, offsetTop, offsetBottom },\n  },\n}) => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      width: '100%',\n      maxWidth,\n      marginTop: offsetTop,\n      marginBottom: offsetBottom,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      marginLeft: 70,\n    },\n    title: {\n      fontSize: 28,\n      fontWeight: 300,\n      lineHeight: '42px',\n      color: title,\n      marginRight: 30,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      marginTop: 30,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\nimport { TSvgIconType } from 'types/icons';\n\nimport { useStyles } from './styles';\n\n\ninterface SectionWithIconProps {\n  iconType: TSvgIconType;\n  title: string;\n  lines?: string[];\n  ContentComponent?: JSX.Element;\n}\n\nexport const SectionWithIcon: React.FC<SectionWithIconProps> = ({\n  iconType,\n  title,\n  lines,\n  ContentComponent,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type={iconType}\n        width={100}\n        height={100}\n        color=\"rgba(255,255,255,0.15)\"\n      />\n      <div className={classes.titleContainer}>\n        <div className={classes.title}>{title}</div>\n        <div className={classes.text}>\n          {lines && lines.length > 0 ? lines.map((line) => (\n            <div key={line}>{line}</div>\n          )) : null}\n        </div>\n        {ContentComponent}\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bg, underline },\n    typography: { title, text },\n  },\n}) => {\n  return {\n    table: {\n      width: 'auto',\n      height: 'auto',\n      backgroundColor: 'transparent',\n      overflow: 'hidden',\n      borderCollapse: 'collapse',\n    },\n    cell: {\n      minWidth: 120,\n      borderColor: underline,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      display: 'table-cell',\n      justifyContent: 'center',\n      boxSizing: 'border-box',\n      paddingLeft: 15,\n      paddingRight: 15,\n      paddingTop: 10,\n      paddingBottom: 12,\n      transition: 'all 0.4s ease',\n\n      '&:hover': {\n        backgroundColor: bg,\n        transition: 'all 0.4s ease',\n      },\n    },\n    cellTitle: {\n      width: '100%',\n      fontSize: 28,\n      fontWeight: 300,\n      lineHeight: '35px',\n      color: title,\n      textAlign: 'center',\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    cellText: {\n      width: '100%',\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      textAlign: 'center',\n      fontFamily: 'Quicksand, sans-serif',\n      marginTop: 4,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\n\ntype RowTableProps = {\n  rows: [string, string][];\n}\n\nexport const RowTable: React.FC<RowTableProps> = ({\n  rows,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <table className={classes.table}>\n      <tbody>\n        <tr>\n          {rows.map(([title, text]) => (\n            <td\n              className={classes.cell}\n              key={title}\n            >\n              <div className={classes.cellTitle}>{title}</div>\n              <div className={classes.cellText}>{text}</div>\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bg, underline },\n    typography: { title, text },\n  },\n}) => {\n  return {\n    container: {\n      width: 'auto',\n      height: 'auto',\n      backgroundColor: 'transparent',\n      overflow: 'hidden',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    cell: {\n      minWidth: 120,\n      borderColor: underline,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      display: 'table-cell',\n      justifyContent: 'center',\n      boxSizing: 'border-box',\n      paddingLeft: 15,\n      paddingRight: 15,\n      paddingTop: 10,\n      paddingBottom: 12,\n      transition: 'all 0.4s ease',\n\n      '&:hover': {\n        backgroundColor: bg,\n        transition: 'all 0.4s ease',\n      },\n    },\n    cellTitle: {\n      width: '100%',\n      fontSize: 28,\n      fontWeight: 300,\n      lineHeight: '35px',\n      color: title,\n      textAlign: 'center',\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    cellText: {\n      width: '100%',\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      textAlign: 'center',\n      marginTop: 4,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    icon: {\n      marginLeft: 40,\n      marginRight: 40,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ntype DateRangeProps = {\n  from: [string, string];\n  to: [string, string];\n}\n\nexport const DateRange: React.FC<DateRangeProps> = ({\n  from,\n  to,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.cell}>\n        <div className={classes.cellTitle}>{from[0]}</div>\n        <div className={classes.cellText}>{from[1]}</div>\n      </div>\n      <SvgIcon\n        className={classes.icon}\n        type=\"direction-arrow\"\n        width={40}\n        height={27}\n        color=\"rgba(255,255,255,0.4)\"\n      />\n      <div className={classes.cell}>\n        <div className={classes.cellTitle}>{to[0]}</div>\n        <div className={classes.cellText}>{to[1]}</div>\n      </div>\n    </div>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from '../SvgIcon';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n"],"sourceRoot":""}