{"version":3,"sources":["screens/Projects/laptop/screens/Project/components/CardText/styles.ts","screens/Projects/laptop/screens/Project/components/CardText/CardText.tsx"],"names":["styles","colors","typography","title","text","underline","primary","container","maxWidth","display","flexDirection","alignItems","justifyContent","width","boxSizing","border","padding","marginLeft","marginRight","marginBottom","transition","transform","boxShadow","fontSize","fontWeight","lineHeight","color","marginTop","fontFamily","content","useStyles","useTStyles","CardText","iconType","lines","ContentComponent","classes","className","type","height","length","map","line","key"],"mappings":"oGACA,4DAGMA,EAAoB,SAAC,GAKpB,IAAD,IAJJC,OAII,IAHFC,WAAcC,EAGZ,EAHYA,MAAOC,EAGnB,EAHmBA,KACVC,EAET,EAFFC,QAAWD,UAGb,MAAO,CACLE,UAAW,CACTC,SAAU,IACVC,QAAS,OACTC,cAAe,SACfC,WAAY,aACZC,eAAgB,aAChBC,MAAO,OACPC,UAAW,aACXC,OAAO,aAAD,OAAeV,GACrBW,QAAS,GACTC,WAAY,GACZC,YAAa,GACbC,aAAc,GAEdC,WAAY,gBAEZ,UAAW,CACTC,UAAW,4BACXC,UAAW,oCACXF,WAAY,kBAGhBjB,MAAO,CACLoB,SAAU,GACVC,WAAY,IACZC,WAAY,OACZC,MAAOvB,EACPwB,UAAW,GACXC,WAAY,yBAEdxB,KAAM,CACJmB,SAAU,GACVC,WAAY,IACZC,WAAY,OACZC,MAAOtB,EACPuB,UAAW,GACXC,WAAY,yBAEdC,QAAS,CACPpB,QAAS,OACTI,MAAO,OACPH,cAAe,SACfC,WAAY,YAKLmB,EAAY,kBAAsBC,YAAW/B,K,gCC1D1D,oFAeagC,EAAoC,SAAC,GAK3C,IAJLC,EAII,EAJJA,SACA9B,EAGI,EAHJA,MACA+B,EAEI,EAFJA,MACAC,EACI,EADJA,iBAEMC,EAAUN,sBAEhB,OACE,yBAAKO,UAAWD,EAAQ7B,WACtB,kBAAC,IAAD,CACE+B,KAAML,EACNpB,MAAO,IACP0B,OAAQ,IACRb,MAAM,2BAER,yBAAKW,UAAWD,EAAQjC,OAAQA,GAChC,yBAAKkC,UAAWD,EAAQhC,MACrB8B,GAASA,EAAMM,OAAS,EAAIN,EAAMO,KAAI,SAACC,GAAD,OACrC,yBAAKC,IAAKD,GAAOA,MACd,MAEP,yBAAKL,UAAWD,EAAQP,SACrBM","file":"static/js/61.1e1d6067.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title, text },\n    primary: { underline },\n  },\n}) => {\n  return {\n    container: {\n      maxWidth: 350,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      width: '100%',\n      boxSizing: 'border-box',\n      border: `1px solid ${underline}`,\n      padding: 40,\n      marginLeft: 20,\n      marginRight: 20,\n      marginBottom: 40,\n\n      transition: 'all 0.4s ease',\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        boxShadow: '0px 3px 14px 3px rgba(0,0,0,0.31)',\n        transition: 'all 0.4s ease',\n      },\n    },\n    title: {\n      fontSize: 30,\n      fontWeight: 300,\n      lineHeight: '37px',\n      color: title,\n      marginTop: 30,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 300,\n      lineHeight: '22px',\n      color: text,\n      marginTop: 40,\n      fontFamily: 'Quicksand, sans-serif',\n    },\n    content: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport { SvgIcon } from 'components';\nimport { TSvgIconType } from 'types/icons';\n\nimport { useStyles } from './styles';\n\n\ninterface CardTextProps {\n  iconType: TSvgIconType;\n  title: string;\n  lines?: string[];\n  ContentComponent?: JSX.Element;\n}\n\nexport const CardText: React.FC<CardTextProps> = ({\n  iconType,\n  title,\n  lines,\n  ContentComponent,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <SvgIcon\n        type={iconType}\n        width={100}\n        height={100}\n        color=\"rgba(255,255,255,0.15)\"\n      />\n      <div className={classes.title}>{title}</div>\n      <div className={classes.text}>\n        {lines && lines.length > 0 ? lines.map((line) => (\n          <div key={line}>{line}</div>\n        )) : null}\n      </div>\n      <div className={classes.content}>\n        {ContentComponent}\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}