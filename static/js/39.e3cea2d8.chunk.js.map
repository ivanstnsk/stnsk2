{"version":3,"sources":["screens/Projects/laptop/screens/Project/redux/selectors.ts","screens/Projects/laptop/screens/Project/Project.tsx","screens/Projects/laptop/screens/Project/styles.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/index.ts","screens/Projects/laptop/screens/Project/components/Header/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/index.ts","screens/Projects/laptop/screens/Project/redux/index.ts","screens/Projects/laptop/screens/Project/components/index.ts","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/CloseButton.tsx","screens/Projects/laptop/screens/Project/components/Header/components/CloseButton/styles.ts","screens/Projects/laptop/screens/Project/components/Header/Header.tsx","screens/Projects/laptop/screens/Project/redux/useState.ts","screens/Projects/laptop/screens/Project/components/Header/styles.ts"],"names":["selectProjects","state","projects","selectProject","projectId","createSelector","find","id","SCROLL_RANGES","compact","Infinity","Project","offsetSize","useContentSize","headerSize","onScrollY","useParams","data","useState","classes","useStyles","isVisible","in","timeout","unmountOnExit","transitionState","className","wrapper","size","title","subTitle","onScroll","iconType","ContentComponent","from","to","lines","rows","styles","colors","primary","bgContent","position","top","bottom","left","right","borderWidth","borderTopWidth","borderStyle","boxSizing","borderColor","underline","backgroundColor","display","flexDirection","justifyContent","alignItems","useTStyles","CloseButton","memo","onClick","button","type","width","height","color","border","outline","background","cursor","padding","Header","history","useHistory","handleCloseClick","useCallback","push","Routes","PROJECTS","container","innerContainer","photo","midContainer","titleContainer","label","rightContainer","useSelector","greyUltralight","sizes","content","contentMaxWidth","maxWidth","offsetHorizontal","sidebarWidth","menu","paddingLeft","paddingRight","maxHeight","getWrapperStyles","transition","flex","marginLeft","fontSize","fontWeight","lineHeight","marginRight","opacity","marginTop","getSubtitleStyles","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","minHeight","minWidth","getPhotoStyles","iconsContainer","paddingTop","getRightContainerStyles","props"],"mappings":"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","file":"static/js/39.e3cea2d8.chunk.js","sourcesContent":["import { createSelector, Selector } from 'reselect';\n\nimport { TState, TProjectsState } from 'types/store';\nimport { TProjectData } from 'types/data';\n\n\nexport const selectProjects = (state: TState): TProjectsState => state.projects;\n\ntype TCreatedSelector = Selector<TState, TProjectData | undefined>;\n\nexport const selectProject = (projectId: string): TCreatedSelector => createSelector<\n  TState,\n  TProjectsState,\n  TProjectData | undefined\n>(\n  [selectProjects],\n  (projects) => projects.find(({ id }) => id === projectId),\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  ScrollContent,\n  ContentContainer,\n  TransitionInnerScreenWrapper,\n  SectionWithIcon,\n  RowTable,\n  DateRange,\n  NoPage,\n} from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { useContentSize } from 'hooks';\n\nimport { useState } from './redux';\nimport { Header } from './components';\nimport { useStyles } from './styles';\n\n\ninterface ProjectProps {\n  offsetSize?: TContentSize;\n}\n\nconst SCROLL_RANGES = {\n  compact: [\n    [40, Infinity],\n  ],\n};\n\nexport const Project: React.FC<ProjectProps> = ({\n  offsetSize,\n}) => {\n  const [headerSize, onScrollY] = useContentSize(SCROLL_RANGES);\n  const { projectId } = useParams();\n  const { data } = useState(projectId);\n  const classes = useStyles();\n  const isVisible = !!projectId;\n\n  return (\n    <Transition\n      in={isVisible}\n      timeout={300}\n      unmountOnExit\n    >\n      {(state) => (\n        <TransitionInnerScreenWrapper\n          transitionState={state}\n          offsetSize={offsetSize}\n        >\n          <div className={classes.wrapper}>\n            {!data ? (\n              <NoPage />\n            ) : (<>\n              <Header\n                size={headerSize}\n                title={data.title}\n                subTitle={data.subTitle}\n              />\n              <ScrollContent onScroll={onScrollY}>\n                <ContentContainer>\n                  <SectionWithIcon\n                    iconType=\"schedule\"\n                    title=\"Project schedule\"\n                    ContentComponent={(\n                      <DateRange\n                        from={['2019', 'October']}\n                        to={['2019', 'October']}\n                      />\n                    )}\n                  />\n                  <SectionWithIcon\n                    iconType=\"work-result\"\n                    title=\"Work results\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"achievements\"\n                    title=\"Achievements\"\n                    lines={[\n                      'Reviwed the work of the other React Native developer',\n                      'Created iOS and Android dev & production builds',\n                      'Configured Apple AppStore & Testflight and Google Play Market',\n                    ]}\n                  />\n                  <SectionWithIcon\n                    iconType=\"team\"\n                    title=\"Team\"\n                    ContentComponent={(\n                      <RowTable\n                        rows={[\n                          ['Dev', '6'],\n                          ['QA', '2'],\n                          ['PM', '1'],\n                          ['UI/UX', '1'],\n                        ]}\n                      />\n                    )}\n                  />\n                </ContentContainer>\n              </ScrollContent>\n            </>)}\n          </div>\n        </TransitionInnerScreenWrapper>\n      )}\n    </Transition>\n  );\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: { primary: { bgContent, underline } },\n}) => {\n  return {\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderWidth: 0,\n      borderTopWidth: 1,\n      borderStyle: 'solid',\n      boxSizing: 'border-box',\n      borderColor: underline,\n      backgroundColor: bgContent,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","export { CloseButton } from './CloseButton';\n","export { Header } from './Header';\n","export { CloseButton } from './CloseButton';\n","export { useState } from './useState';\n","export { Header } from './Header';\n","import React, { memo } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { useStyles } from './styles';\n\n\ninterface CloseButtonProps {\n  onClick?: () => void;\n}\n\nconst CloseButtonComp: React.FC<CloseButtonProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n    >\n      <SvgIcon\n        type=\"close\"\n        width={30}\n        height={30}\n        color=\"rgba(255,255,255,0.6)\"\n      />\n    </button>\n  );\n};\n\nexport const CloseButton = memo(CloseButtonComp);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = () => {\n  return {\n    button: {\n      width: 40,\n      height: 40,\n      border: 'none',\n      outline: 'none',\n      background: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CategoryLabel } from 'components';\nimport { TContentSize } from 'types/sizes';\nimport { Routes } from 'types';\n\nimport { CloseButton } from './components';\nimport { useStyles } from './styles';\n\n\ninterface HeaderProps {\n  size?: TContentSize;\n  title: string;\n  subTitle: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  size = 'normal',\n  title,\n  subTitle,\n}) => {\n  const history = useHistory();\n  const classes = useStyles({ size });\n\n  const handleCloseClick = useCallback(() => {\n    history.push(Routes.PROJECTS);\n  }, [history]);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <div className={classes.innerContainer}>\n          <div className={classes.photo} />\n          <div className={classes.midContainer}>\n            <div className={classes.titleContainer}>\n              <div className={classes.title}>{title}</div>\n              <CategoryLabel\n                type=\"web\"\n                label=\"Web\"\n              />\n            </div>\n            <div className={classes.subTitle}>{subTitle}</div>\n          </div>\n        </div>\n      </div>\n      <div className={classes.rightContainer}>\n        <CloseButton\n          onClick={handleCloseClick}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { TProjectData } from 'types/data';\n\nimport { selectProject } from './selectors';\n\n\ntype TData = {\n  data: TProjectData | undefined;\n}\n\nexport const useState = (projectId: string): TData => {\n  const data = useSelector(selectProject(projectId));\n\n  return {\n    data,\n  };\n};\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\nimport { TContentSize } from 'types/sizes';\n\n\ntype TStyleProps = {\n  size: TContentSize;\n}\n\nconst getWrapperStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '80px',\n      maxHeight: '80px',\n    });\n  }\n  return ({\n    height: '230px',\n    maxHeight: '230px',\n  });\n};\n\nconst getPhotoStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      height: '60px',\n      width: '60px',\n      minHeight: '60px',\n      minWidth: '60px',\n    });\n  }\n  return ({\n    height: '160px',\n    width: '160px',\n    minHeight: '160px',\n    minWidth: '160px',\n  });\n};\n\nconst getRightContainerStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      alignItems: 'center',\n      paddingTop: '0px',\n    });\n  }\n  return ({\n    alignItems: 'flex-start',\n    paddingTop: '40px',\n  });\n};\n\nconst getSubtitleStyles = (size: TContentSize): AppInnerStyles => {\n  if (size === 'compact') {\n    return ({\n      opacity: '0',\n      height: '0px',\n      marginTop: '0px',\n    });\n  }\n  return ({\n    opacity: '1',\n    height: 'auto',\n    marginTop: '20px',\n  });\n};\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight,\n    },\n  },\n  sizes: {\n    content: { maxWidth: contentMaxWidth, offsetHorizontal },\n    menu: { width: sidebarWidth },\n  },\n}) => {\n  return {\n    wrapper: ({ size }: TStyleProps) => ({\n      display: 'flex',\n      boxSizing: 'border-box',\n      paddingLeft: offsetHorizontal,\n      paddingRight: offsetHorizontal,\n      ...getWrapperStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    container: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      width: '100%',\n      maxWidth: contentMaxWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    midContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      marginLeft: 50,\n    },\n    titleContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    title: {\n      fontSize: 34,\n      fontWeight: 'normal',\n      lineHeight: '42px',\n      color: greyUltralight,\n      marginRight: 30,\n    },\n    subTitle: ({ size }: TStyleProps) => ({\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: greyUltralight,\n      ...getSubtitleStyles(size),\n      transition: 'all 0.2s ease',\n    }),\n    photo: ({ size }: TStyleProps) => ({\n      backgroundImage: 'url(https://www.tonincasa.it/public/crop/1200-660/110718-122443-virtualtour.jpg)',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      ...getPhotoStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n    iconsContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginLeft: 60,\n    },\n    rightContainer: ({ size }: TStyleProps) => ({\n      height: '100%',\n      display: 'flex',\n      width: sidebarWidth,\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      boxSizing: 'border-box',\n      ...getRightContainerStyles(size),\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n"],"sourceRoot":""}