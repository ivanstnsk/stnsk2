{"version":3,"sources":["screens/Contacts/laptop/components/ContactButton/styles.ts","screens/Contacts/laptop/components/SocialButton/styles.ts","screens/Contacts/laptop/styles.ts","screens/Contacts/laptop/Contacts.tsx","screens/Contacts/laptop/components/ContactButton/index.ts","screens/Contacts/laptop/components/SocialButton/index.ts","screens/Contacts/laptop/components/index.ts","screens/Contacts/laptop/components/ContactButton/ContactButton.tsx","screens/Contacts/laptop/components/SocialButton/SocialButton.tsx"],"names":["styles","colors","title","typography","button","backgroundColor","display","flexDirection","justifyContent","alignItems","border","outline","cursor","transition","marginBottom","transform","color","primary","greenMedium","text","fontSize","fontWeight","lineHeight","marginLeft","useStyles","useTStyles","container","marginTop","icon","hovered","props","greyUltralight","fontStyle","innerContainer","flex","paddingRight","paddingBottom","innerContent","contentCol","contentColRight","socialContent","Contacts","classes","subTitle","className","type","ContactButton","onClick","useState","active","setActive","iconColor","getActiveHandler","useCallback","nextActive","onMouseEnter","onMouseLeave","width","height","SocialButton","useMouseHover","containerRef","ref"],"mappings":"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","file":"static/js/40.605fef8b.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    typography: { title },\n    primary: { greenMedium },\n  },\n}) => {\n  return {\n    button: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      border: 'none',\n      outline: 'none',\n      cursor: 'pointer',\n      transition: 'all 0.4s ease',\n      marginBottom: 40,\n\n      '&:hover': {\n        transform: 'scaleX(1.05) scaleY(1.05)',\n        transition: 'all 0.4s ease',\n      },\n      '&:hover $text': {\n        color: greenMedium,\n      },\n    },\n    text: {\n      fontSize: 18,\n      fontWeight: 'normal',\n      lineHeight: '22px',\n      color: title,\n      marginLeft: 30,\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\ntype TStyleProps = {\n  hovered: boolean;\n};\n\nconst styles: AppStyles = () => {\n  return {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      transition: 'all 0.4s ease',\n    },\n    button: {\n      marginTop: 30,\n    },\n    icon: ({ hovered }: TStyleProps) => ({\n      transform: hovered\n        ? 'scaleX(1.1) scaleY(1.1)'\n        : 'scaleX(1) scaleY(1)',\n      transition: 'all 0.4s ease',\n    }),\n  };\n};\n\nexport const useStyles = (props: TStyleProps): AppInnerStyles => useTStyles(styles, props);\n","import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: {\n      greyUltralight, greenMedium,\n    },\n  },\n}) => {\n  return {\n    title: {\n      color: greenMedium,\n      fontSize: 50,\n      fontWeight: 500,\n      marginBottom: 16,\n    },\n    text: {\n      color: greyUltralight,\n      fontSize: 18,\n      fontWeight: 300,\n      fontStyle: 'normal',\n    },\n    innerContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingRight: 120,\n      paddingBottom: 156,\n    },\n    innerContent: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n\n      '& > *': {\n        marginLeft: 150,\n      },\n      '& *:first-child': {\n        marginLeft: 0,\n      },\n    },\n    contentCol: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n    },\n    contentColRight: {\n      marginLeft: 150,\n    },\n    socialContent: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      '& > *': {\n        marginLeft: 40,\n        marginBottom: 40,\n      },\n      '& *:first-child': {\n        marginLeft: 0,\n      },\n    },\n  };\n};\n\nexport const useStyles = (): AppInnerStyles => useTStyles(styles);\n","import React from 'react';\n\nimport {\n  ContentHeader,\n  ScrollContent,\n  ContentContainer,\n  SectionTitle,\n} from 'components';\n\nimport { ContactButton, SocialButton } from './components';\nimport { useStyles } from './styles';\n\n\nexport const Contacts: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Contacts\"\n        subTitle=\"In case you want to get in touch with me\"\n      />\n      <ScrollContent>\n        <ContentContainer>\n          <div className={classes.innerContainer}>\n            <div className={classes.innerContent}>\n              <div className={classes.contentCol}>\n                <SectionTitle>Job offers</SectionTitle>\n                <ContactButton\n                  type=\"mail\"\n                  text=\"ivan.stnsk@gmail.com\"\n                />\n                <ContactButton\n                  type=\"skype\"\n                  text=\"ivan.stnsk\"\n                />\n              </div>\n              <div className={classes.contentCol}>\n                <SectionTitle>Social pages</SectionTitle>\n                <div className={classes.socialContent}>\n                  <SocialButton\n                    type=\"linkedin\"\n                  />\n                  <SocialButton\n                    type=\"github\"\n                  />\n                  <SocialButton\n                    type=\"instagram\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </ContentContainer>\n      </ScrollContent>\n    </>\n  );\n};\n","export { ContactButton } from './ContactButton';\n","export { SocialButton } from './SocialButton';\n","export { ContactButton } from './ContactButton';\nexport { SocialButton } from './SocialButton';\n","import React, { useState, useCallback } from 'react';\n\nimport { SvgIcon } from 'components';\n\nimport { TContactButtonTypes } from './types';\nimport { useStyles } from './styles';\n\n\ninterface ContactButtonProps {\n  type: TContactButtonTypes;\n  text: string;\n  onClick?: () => void;\n}\n\nexport const ContactButton: React.FC<ContactButtonProps> = ({\n  type,\n  text,\n  onClick,\n}) => {\n  const [active, setActive] = useState(false);\n  const classes = useStyles();\n  const iconColor = active\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.4)';\n\n  const getActiveHandler = useCallback((nextActive: boolean) => () => {\n    setActive(nextActive);\n  }, [setActive]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={onClick}\n      onMouseEnter={getActiveHandler(true)}\n      onMouseLeave={getActiveHandler(false)}\n    >\n      <SvgIcon\n        type={type}\n        width={60}\n        height={60}\n        color={iconColor}\n      />\n      <span className={classes.text}>\n        {text}\n      </span>\n    </button>\n  );\n};\n","import React from 'react';\n\nimport { SvgIcon, Button } from 'components';\nimport { useMouseHover } from 'hooks';\n\nimport { TContactButtonTypes } from './types';\nimport { useStyles } from './styles';\n\n\ninterface SocialButtonProps {\n  type: TContactButtonTypes;\n  onClick?: () => void;\n}\n\nexport const SocialButton: React.FC<SocialButtonProps> = ({\n  type,\n  onClick,\n}) => {\n  const [containerRef, hovered] = useMouseHover<HTMLDivElement>();\n  const classes = useStyles({ hovered });\n  const iconColor = hovered\n    ? '#81AF65'\n    : 'rgba(255,255,255,0.4)';\n\n  return (\n    <div\n      ref={containerRef}\n      className={classes.container}\n      onClick={onClick}\n    >\n      <SvgIcon\n        className={classes.icon}\n        type={type}\n        width={60}\n        height={60}\n        color={iconColor}\n      />\n      <Button\n        className={classes.button}\n        text=\"Open\"\n        width={110}\n        onClick={onClick}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}