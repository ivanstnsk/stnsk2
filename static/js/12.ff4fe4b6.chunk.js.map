{"version":3,"sources":["screens/Home/laptop/components/MainCircleButton/styles.ts","assets/icons/cv-icon.svg","assets/icons/projects-icon.svg","assets/icons/skills-icon.svg","assets/icons/contacts-icon.svg","screens/Home/laptop/components/MainCircleButton/index.ts","screens/Home/laptop/components/MainCircleButton/MainCircleButton.tsx"],"names":["getIconStyles","iconRes","type","cvIconRes","projectsIconRes","skillsIconRes","contactsIconRes","getIcon","width","height","display","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","styles","colors","primary","bg","greyUltralight","mainCircleButtonSize","sizes","buttons","from","strokeDashoffset","to","button","position","justifyContent","alignItems","border","borderRadius","backgroundColor","color","filter","outline","cursor","transition","opacity","transform","strokeWidth","animation","svg","boxSizing","left","right","top","bottom","strokeDasharray","icon","label","fontSize","useStyles","props","useTStyles","module","exports","MainCircleButton","memo","innerRef","onClick","classes","handleClick","useCallback","className","ref","viewBox","fill","xmlns","cx","LAPTOP_MAIN_CIRCLE_BUTTON_SIZE","cy","r","stroke"],"mappings":"uGACA,oIAqCMA,EAAgB,kBAAM,YAA4D,IAChFC,EAhBQ,SAACC,GACf,OAAQA,GACN,IAAK,KACH,OAAOC,IACT,IAAK,WACH,OAAOC,IACT,IAAK,SACH,OAAOC,IACT,IAAK,WACH,OAAOC,IACT,QACE,OAAOH,KAKKI,CADqE,EAAxDL,MAG7B,MAAO,CACLM,MAAO,OACPC,OAAQ,OACRC,QAAS,QACTC,gBAAgB,OAAD,OAASV,EAAT,KACfW,iBAAkB,YAClBC,eAAgB,UAChBC,mBAAoB,YAIlBC,EAAoB,SAAC,GAOpB,IAAD,IANJC,OACEC,QAAWC,EAKT,EALSA,GAAIC,EAKb,EALaA,eAGJC,EAET,EAHJC,MACEC,QAAWF,qBAGb,MAAO,CACL,kBAAmB,CACjBG,KAAM,CAAEC,iBAAkB,GAC1BC,GAAI,CAAED,iBAAkB,KAE1BE,OAAQ,CACNC,SAAU,WACVjB,QAAS,OACTkB,eAAgB,SAChBC,WAAY,SACZrB,MAAOY,EACPX,OAAQW,EACRU,OAAQ,OACRC,aAAc,MACdC,gBAAiBd,EACjBe,MAAOd,EACPe,OAAQ,+CACRC,QAAS,OACTC,OAAQ,UACRC,WAAY,sBACZC,QAAS,EAET,UAAW,CACTC,UAAW,0BACXF,WAAY,uBAEd,iBAAkB,CAChBC,QAAS,EACTD,WAAY,qBAEd,eAAgB,CACd,WAAY,CACVG,YAAa,KAEfC,UAAW,6BAGfC,IAAK,CACHC,UAAW,aACXhB,SAAU,WACViB,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,gBAAiB,GAEnBC,KAAMjD,IACNkD,MAAO,CACLvB,SAAU,WACViB,KAAM,EACNG,QAAS,GACTrC,QAAS,OACTkB,eAAgB,SAChBC,WAAY,SACZrB,MAAOY,EACPX,OAAQ,OACRwB,MAAOd,EACPgC,SAAU,GACVb,QAAS,EACTD,WAAY,uBAKLe,EAAY,SAACC,GACxB,OAAOC,YAAWvC,EAAQsC,K,oBC7H5BE,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,gCCA3C,sF,gCCAA,qFA4DaC,EAAmBC,gBA7C0B,SAAC,GAKpD,IAJLC,EAII,EAJJA,SACAzD,EAGI,EAHJA,KACAgD,EAEI,EAFJA,MACAU,EACI,EADJA,QAEMC,EAAUT,oBAAU,CAAElD,SAEtB4D,EAAcC,uBAAY,WAC1BH,GACFA,EAAQ1D,KAET,CAAC0D,EAAS1D,IAEb,OACE,4BACE8D,UAAWH,EAAQnC,OACnBkC,QAASE,EACTG,IAAKN,GAEL,yBACEK,UAAWH,EAAQnB,IACnBlC,MAxB+B,IAyB/BC,OAzB+B,IA0B/ByD,QAAO,cA1BwB,IA0BxB,YA1BwB,KA2B/BC,KAAK,OACLC,MAAM,6BACNpB,gBAAgB,KAEhB,4BACEqB,GAAIC,GACJC,GAAID,GACJE,EAAGF,GACHG,OAAO,UACPjC,YAAY,OAGhB,yBAAKwB,UAAWH,EAAQZ,OACxB,yBAAKe,UAAWH,EAAQX,OACrBA","file":"static/js/12.ff4fe4b6.chunk.js","sourcesContent":["import { AppStyles, AppInnerStyles } from 'types/style';\nimport { useTStyles } from 'hooks';\n\n// eslint-disable-next-line\n// @ts-ignore\nimport cvIconRes from 'assets/icons/cv-icon.svg';\n// eslint-disable-next-line\n// @ts-ignore\nimport projectsIconRes from 'assets/icons/projects-icon.svg';\n// eslint-disable-next-line\n// @ts-ignore\nimport skillsIconRes from 'assets/icons/skills-icon.svg';\n// eslint-disable-next-line\n// @ts-ignore\nimport contactsIconRes from 'assets/icons/contacts-icon.svg';\n\nimport { TButtonType } from './types';\n\n\ntype MainCircleButtonStylesProps = {\n  type: TButtonType;\n};\n\nconst getIcon = (type: TButtonType): string => {\n  switch (type) {\n    case 'cv':\n      return cvIconRes;\n    case 'projects':\n      return projectsIconRes;\n    case 'skills':\n      return skillsIconRes;\n    case 'contacts':\n      return contactsIconRes;\n    default:\n      return cvIconRes;\n  }\n};\n\nconst getIconStyles = () => ({ type }: MainCircleButtonStylesProps): AppInnerStyles => {\n  const iconRes = getIcon(type);\n\n  return {\n    width: '54px',\n    height: '54px',\n    display: 'block',\n    backgroundImage: `url(${iconRes})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  };\n};\n\nconst styles: AppStyles = ({\n  colors: {\n    primary: { bg, greyUltralight },\n  },\n  sizes: {\n    buttons: { mainCircleButtonSize },\n  },\n}) => {\n  return {\n    '@keyframes dash': {\n      from: { strokeDashoffset: 0 },\n      to: { strokeDashoffset: 24 },\n    },\n    button: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: mainCircleButtonSize,\n      height: mainCircleButtonSize,\n      border: 'none',\n      borderRadius: '50%',\n      backgroundColor: bg,\n      color: greyUltralight,\n      filter: 'drop-shadow(0px 0px 25px rgba(0, 0, 0, 0.3))',\n      outline: 'none',\n      cursor: 'pointer',\n      transition: 'transform 0.3s ease',\n      opacity: 0,\n\n      '&:hover': {\n        transform: 'scaleX(1.1) scaleY(1.1)',\n        transition: 'transform 0.3s ease',\n      },\n      '&:hover $label': {\n        opacity: 1,\n        transition: 'opacity 0.3s ease',\n      },\n      '&:hover $svg': {\n        '& circle': {\n          strokeWidth: 2.5,\n        },\n        animation: '$dash 2s linear infinite',\n      },\n    },\n    svg: {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      strokeDasharray: 4,\n    },\n    icon: getIconStyles(),\n    label: {\n      position: 'absolute',\n      left: 0,\n      bottom: -30,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: mainCircleButtonSize,\n      height: 'auto',\n      color: greyUltralight,\n      fontSize: 18,\n      opacity: 0,\n      transition: 'opacity 0.3s ease',\n    },\n  };\n};\n\nexport const useStyles = (props: MainCircleButtonStylesProps): AppInnerStyles => {\n  return useTStyles(styles, props);\n};\n","module.exports = __webpack_public_path__ + \"static/media/cv-icon.4216a356.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects-icon.d9de3a0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills-icon.1116bb0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/contacts-icon.868e8806.svg\";","export { MainCircleButton } from './MainCircleButton';\n","import React, { memo, useCallback } from 'react';\n\nimport { useStyles } from './styles';\nimport { TButtonType } from './types';\n\n\ntype TMainCircleButton = {\n  innerRef?: React.RefObject<HTMLButtonElement>;\n  type: TButtonType;\n  label: string;\n  onClick?: (id: string) => void;\n};\n\nconst LAPTOP_MAIN_CIRCLE_BUTTON_SIZE = 134;\n\nconst MainCircleButtonComp: React.FC<TMainCircleButton> = ({\n  innerRef,\n  type,\n  label,\n  onClick,\n}) => {\n  const classes = useStyles({ type });\n\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(type);\n    }\n  }, [onClick, type]);\n\n  return (\n    <button\n      className={classes.button}\n      onClick={handleClick}\n      ref={innerRef}\n    >\n      <svg\n        className={classes.svg}\n        width={LAPTOP_MAIN_CIRCLE_BUTTON_SIZE}\n        height={LAPTOP_MAIN_CIRCLE_BUTTON_SIZE}\n        viewBox={`0 0 ${LAPTOP_MAIN_CIRCLE_BUTTON_SIZE} ${LAPTOP_MAIN_CIRCLE_BUTTON_SIZE}`}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        strokeDasharray=\"0\"\n      >\n        <circle\n          cx={LAPTOP_MAIN_CIRCLE_BUTTON_SIZE / 2}\n          cy={LAPTOP_MAIN_CIRCLE_BUTTON_SIZE / 2}\n          r={LAPTOP_MAIN_CIRCLE_BUTTON_SIZE / 2 - 2}\n          stroke=\"#81AF65\"\n          strokeWidth=\"0\"\n        />\n      </svg>\n      <div className={classes.icon} />\n      <div className={classes.label}>\n        {label}\n      </div>\n    </button>\n  );\n};\n\nexport const MainCircleButton = memo(MainCircleButtonComp);\n"],"sourceRoot":""}